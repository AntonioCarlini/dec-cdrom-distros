 






   Software
   Product
   Description

   ___________________________________________________________________

   PRODUCT NAME:  VAXELN Toolkit, Version 4.6             SPD 28.02.17

   DESCRIPTION

   The VAXELN Toolkit is an OpenVMS layered product used for the devel-
   opment of dedicated real-time VAXELN systems that run on supported pro-
   cessors. The development tools run on any host computer under the Open-
   VMS VAX operating system. A finished VAXELN system runs directly on
   a supported processor without the presence of another operating sys-
   tem.

   VAXELN is especially suited to, although not limited to, creating real-
   time applications; that is, applications in which the system's response
   (both speed and predictability) to external events is critical.

   The VAXELN software simplifies the design and implementation of such
   applications by offering high-level language support, a run-time ker-
   nel executive, and various service programs. The high-level language
   support includes a Pascal compiler and run-time libraries (RTL) for
   VAX C and VAX FORTRAN. The kernel manages resources, processes, and
   shared data. The run-time service programs available are for a Open-
   VMS compatible file system, network communication facilities, and de-
   vice drivers.

   VAXELN supports multitasking; that is, execution of a program made up
   of several concurrently executing parts. In addition, multiprogram-
   ming is supported; entire programs, including multitasking programs,
   can be scheduled concurrently on the same CPU.






                                 DIGITAL                      May 1996

                                                           AE-AU40S-TE

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   VAXELN provides support for tightly coupled symmetric multiprocess-
   ing on VAX 6000 series configurations. Each processor executes a sin-
   gle copy of the system image and jobs can run on any of the proces-
   sors in the configuration. POSIX application programming is not sup-
   ported in tightly coupled symmetric multiprocessing configurations.

   POSIX is a portable operating systems interface for computer environ-
   ments. It encompasses a set of IEEE (1003) operating system standards.
   These standards are divided into several categories. VAXELN provides
   support for the POSIX C language bindings.

   POSIX 1003.1-1990 defines a set of calls that deal with general op-
   erating system fundamentals (I/O, process control, and so forth). The
   following functions from 1003.1-1990 (application program interface)
   are supported in a compliant fashion:

   alarm()         getpgrp()      sigfillset()

   cfgetispeed()   getpid()       sigismember()

   cfgetospeed()   getppid()      sigpending()

   cfsetispeed()   getpwnam()     sigprocmask()

   cfsetospeed()   getpwuid()     sigsuspend()

   ctermid()       getuid()       sleep()

   ctime()         gmtime()       sysconf()

   dup()           isatty()       tcdrain()

   dup2()          kill()         tcflow()

   exit()          localtime()    tcflush()

   _exit()         mktime()       tcgetattr()

   fileno()        pause()        tcsendbreak()

   fork()          pipe()         tcsetattr()

   getegid()       setgid()       time()

   getenv()        setpgid()      times()

   geteuid()       setsid()       ttyname()

   getgid()        setuid()       umask()

   getgrgid()      sigaction()    uname()

                                            2

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17



   getgrnam()      sigaddset()    wait()

   getgroups()     sigdelset()    waitpid()

   getlogin()      sigemptyset()

   The following functions from 1003.1-1990 (application program inter-
   face) are supported in a non-compliant fashion:

   access()        execve()       pathconf()

   chdir()         execvp()       read()

   chmod()         fcntl()        readdir()

   chown()         fpathconf()    rename()

   close()         fstat()        rewinddir()

   closedir()      getcwd()       rmdir()

   creat()         link()         stat()

   execl()         lseek()        tzset()

   execle()        mkdir()        unlink()

   execlp()        mkfifo()       utime()

   exec()          open()         write()

   execv()         opendir()

   The following functions from P1003.4 Draft 11 (real-time extensions)
   are supported in a compliant fashion:

   clock_getdrift()       sched_set_sched_param()

   clock_getres()         sched_yield()

   clock_gettime()        sem_close()

   clock_setdrift()       sem_destroy()

   clock_settime()        sem_getnsems()

   mlock()                sem_ifwait()

   mlockall()             sem_mksem()

   mmap()                 sem_open()

   mprotect()             sem_post()

   munlock()              sem_unlink()

                                    3

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17



   munlockall()           sem_wait()

   munmap()               shm_open()

   nanosleep()            shm_unlink()

   sched_getparam()       sigaction()

   sched_getscheduler()   sigqueue()

   sched_get_priority_    sigtimedwait()
   max()

   sched_get_priority_    sigwaitrt()
   min()

   sched_get_rr_          timer_create()
   interval()

   sched_get_sched_       timer_delete()
   param()

   sched_setparam()       timer_gettime()

   sched_setscheduler()   timer_settime()

   POSIX P1003.4a Draft 4 defines system calls for real-time multithreaded
   applications. All functions in POSIX P1003.4a Draft 4 are supported
   in a compliant fashion.

   Since the POSIX P1003.4 Draft 11 and P1003.4a Draft 4 functions in VAXELN,
   Version 4.6 are based on draft standards as opposed to final standards,
   some functions may be neither source-code nor binary-code compatible
   in subsequent VAXELN releases.

   VAXELN DECwindows is based on Massachusetts Institute of Technology's
   specification for the X Window System, Version 11, Release 4. X Window
   System standards supported as part of DECwindows include the X11 net-
   work protocol, a base set of workstation fonts, the C language bind-
   ing for the Xlib programming library, and the C language binding for
   the Xtoolkit library. Support of the X11 network protocol in the client,
   library, and display server components provides VAXELN with the ca-
   pability to interoperate with other X11-compliant systems in a dis-
   tributed fashion. VAXELN supports the full client-server distribution
   inherent in the X Window System with VAXELN provided transports - lo-
   cal shared memory, DECnet, or TCP/IP. Provided are the DECwindows server

                                    4

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   image, the DECwindows run-time libraries, and the user environment com-
   ponent DECwindows software, all of which can be built into VAXELN sys-
   tems. Motif[R] V1.1.3 client is supported.

   VAXELN Systems

   VAXELN systems can run on standalone VAX, rtVAX, MicroVAX, or VAXs-
   tation computers, or (with networking software provided in the Toolkit)
   they can be connected in an Ethernet local area network (LAN). The lat-
   ter may include any other nodes (including OpenVMS, VAXELN, and Dig-
   ital UNIX) using the Digital Network Architecture DECnet services and
   protocols, or other nodes using the ARPANET services and protocols.

   VAXELN systems, including device drivers, can be developed entirely
   in a high-level language. The sources for several Digital-implemented
   device drivers are also included. These can be used as a guide to im-
   plementing additional drivers.

   A VAXELN system can be booted from a hard disk, tape, diskette, or,
   if the OpenVMS host system has the optional DECnet/OSI for OpenVMS VAX
   license and Ethernet hardware, by downline loading the system into the
   target computer. A VAXELN system can also be downline loaded from an-
   other VAXELN system or a Digital UNIX system with Ethernet hardware.
   VAXELN system images are also suitable for placement in erasable pro-
   grammable read-only memories (EPROMs). However, the EPROM hardware and
   software are not part of the Toolkit and must be acquired separately.

   The KAV30 is a VMEbus-based, VAX real-time single-board computer that
   runs a user's VAXELN system. It is based on the rtVAX 300 processor
   daughter module, which contains a 2.7 VUP CMOS processor, a CMOS VAX
   floating-point coprocessor, a CMOS second-generation Ethernet copro-
   cessor, VSB, optional SCSI controller, and 4 MB or 16 MB of memory.
   KAV30 support provides kernel procedures to initialize the KAV30 mod-
   ule, to set up and control access to VME and VSB devices, to set up
   and control communication FIFOs, to write and read nonvolatile RAM,
   and to execute ASTs in user-written device drivers. The KAV30 support





                                    5

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   also includes asynchronous event notification (ASTs) for the real-time
   clock and timers.[1]

   Toolkit Components

   o  VAXELN Pascal Compiler

   o  VAXELN Symbolic Debugger

   o  VAXELN System Builder

   o  VAXELN Kernels for Supported Target VAX CPUs

   o  VAXELN Pascal Run-Time Library

   o  VAXELN C Run-Time Library

   o  VAXELN FORTRAN Run-Time Library

   o  VAXELN Device Drivers for Supported Devices

   o  VAXELN File Service

   o  VAXELN Network Service

   o  VAXELN Authorization Service

   o  VAXELN Performance Analyzer

   o  VAXELN Resource Monitor and Display

   o  VAXELN Command Language

   o  VAXELN Error Logging Utilities

   o  VAXELN Local Area Terminal (LAT) Service

   o  VAXELN DECwindows Server

   o  VAXELN DECwindows User Environment
      Components

   o  VAXELN User Documentation

   o  VAXELN TCP/IP Networking

   ____________________

 [1] The KAV30 does not support the RZ25L disk drive

                                    6

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   o  VAXELN INTERNET TELNET Server

   o  VAXELN INTERNET TELNET Client

   o  VAXELN DECnet Set Host

   A VAXELN application image executes in its own run-time environment.
   Programs written to take advantage of OpenVMS or Digital UNIX system-
   specific features (that is, logical names, QIO, RMS) need to be mod-
   ified to be ported to the VAXELN Run-Time environment.

   The VAXELN Pascal language is based upon the ANSI/IEEE 770X3.97-1983,
   American National Standard Pascal Computer Programming Language. It
   is supported by an optimizing compiler that generates position-independent,
   native-mode code. The Pascal language was extended to allow its use
   for VAXELN system programming and eliminate the need to use assembly
   language for VAXELN system programming.

   The VAXELN C Run-Time Library implements the standard features of the
   C language plus VAXELN specific capabilities designed to assist the
   C program developer in taking full advantage of VAXELN. Routines se-
   lected for inclusion in this library are primarily routines for which
   an efficient emulation of standard UNIX C is possible under VAXELN.
   VAXELN C uses the standard OpenVMS C compiler.

   The VAXELN FORTRAN Run-Time Library supports an extensive subset of
   the features of the standard VAX FORTRAN language. This library sup-
   ports I/O to sequential devices and sequential and direct access to
   sequential files on mass storage media. The routines in this library
   also allow the FORTRAN programmer to access kernel services for de-
   veloping real-time, multiprogramming applications. Since FORTRAN does
   not generate reentrant code, care must be exercised to avoid multi-
   ple concurrent threads executing through subroutines and/or functions.
   That is, VAX FORTRAN subroutines and/or functions are serially reusable,
   but not reentrant.

   User code is linked to VAXELN Run-Time Libraries using the standard
   OpenVMS linker. The run-time libraries are provided in both object-
   library and shareable-image form.


                                    7

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   The VAXELN System Builder combines program images, the VAXELN kernel
   image, and run-time routines to produce the finished VAXELN system.
   The program loader permits dynamic loading of individual program im-
   ages.

   The VAXELN Debugger can be used to debug a VAXELN system locally us-
   ing the target system's console terminal. If the user's host system
   has the optional DECnet/OSI for OpenVMS VAX license, it can be used
   remotely to debug VAXELN systems running on the same DECnet Ethernet
   network.

   The VAXELN Kernel manages the system's processes and data, providing
   the controlled sharing of the system's resources. VAXELN systems are
   memory resident utilizing VAX virtual memory hardware. The VAX page
   fault mechanism is used only for dynamic extension of the user stack.
   A VAXELN system is limited in size by the amount of physical memory
   present on the target system, up to 256 Mbytes.

   The VAXELN File Service is a set of services to enable using disk or
   tape files for program I/O. The File Service consists of a Disk File
   Service and a separate Tape File Service. The Disk File Service uses
   the same Files-11 on-disk structure, ODS-2, as does OpenVMS and the
   same internal data format as the VAX Record Management Services (RMS).
   Consequently, disk volumes can be read or written from one environ-
   ment to another. File Service files are sequentially organized but can
   be accessed either sequentially or randomly. The indexed and relative
   file organizations are not supported by VAXELN. VAXELN systems and Open-
   VMS systems running on nodes in the same network can access files on
   each other's disk volumes. The Tape File Service is based on Version
   3 of the ANSI standard for magnetic tapes. It is compatible with the
   OpenVMS, Version 4.0 Tape File System, providing users with a conve-
   nient means of transporting files to and from OpenVMS systems.

   The VAXELN Network Service is responsible for providing transparent
   network message transmissions between CSMA/CD LAN (Ethernet/IEEE802.3)
   nodes. The Network Service uses the Phase IV DECnet Routing Protocol,
   Version 2.0, to route system-level datagrams between VAXELN nodes and
   other DECnet nodes. (Only end-node functionality is provided.) The VAX-
   ELN system can communicate over the CSMA/CD LAN with any DECnet node


                                    8

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   on the same LAN. If there is a full routing system on the LAN, VAX-
   ELN can communicate with any other DECnet node in the entire network.
   The VAXELN CSMA/CD LAN driver will support multiple controllers of the
   same type simultaneously. At any given time, DECnet can run on only
   one controller. Other CSMA/CD LAN protocols can be implemented on the
   other controllers. VAXELN supports the dynamic enabling and disabling
   of DECnet. In the event of hardware failure, this feature can be used
   to dynamically disable DECnet on one controller, followed by enabling
   DECnet on another controller. Downline loading over the CSMA/CD LAN
   of a VAXELN system image, from a VAXELN load host to a VAXELN target,
   is supported.

   The Phase IV DECnet Network Services Protocol (NSP), Version 4.0 and
   the Session Control Protocol, Version 1.0 are used to provide trans-
   parent application-level circuits with remote nodes. The Network Ser-
   vice's NSP module then uses the Routing Protocol to deliver messages
   to remote systems.

   VAXELN DECnet nodes can be managed from OpenVMS with the DECnet/OSI
   for OpenVMS VAX Network Control Program (NCP). The Network Service sup-
   ports the Phase IV Network Management Protocol, Version 4.0 Subset.

   VAXELN supports industry-standard networking through a set of ARPANET
   protocols. The supported protocols include:

   o  Transmission Control Protocol (TCP)

   o  INTERNET Protocol (IP)

   o  INTERNET Control Message Protocol (ICMP)

   o  Address Resolution Protocol (ARP)

   o  Reverse Address Resolution Protocol (RARP)

   o  User Datagram Protocol (UDP) and Boot Protocol (BOOTP)

   o  TELNET server

   o  TELNET client

   o  FTP (File Transport Protocol) client

                                    9

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   FTP is based on the 4.3 Berkeley Software Distribution.

   TELNET server support permits access to VAXELN systems from remote sys-
   tems, allowing the user to type commands as if the user were logged
   into the VAXELN system locally. The TELNET client support allows VAX-
   ELN users to gain interactive access to remote systems. These proto-
   cols are supported over a CSMA/CD LAN (Ethernet) and allow VAXELN to
   interoperate with Digital UNIX, DEC TCP/IP Services for OpenVMS, and
   UNIX. Applications may be written using the Berkeley Socket Program-
   ming interface.

   The optional VAXELN Authorization Service maintains a database of all
   the users authorized to use a particular VAXELN system or network of
   systems and is compatible with standard, FILES-11 protection and se-
   curity features.

   In conjunction with the OpenVMS Error Log Utility, user selectable er-
   ror logging is supported. The error log file can be created locally
   on the target system or created remotely on an OpenVMS node in the net-
   work. The error log file is analyzed on an OpenVMS system using the
   OpenVMS Error Reporting Facility.

   VAXELN Command Language (ECL) provides commands to communicate with
   the VAXELN system. VAXELN ECL provides file manipulation, program ma-
   nipulation and limited system control functions on the VAXELN system.

   VAXELN Resource Monitor (EDisplay) dynamically displays information
   about the VAXELN system. This information includes pool and memory us-
   age, and currently active jobs and processes. Help feature function-
   ality is included.

   VAXELN Performance Analyzer (EPA) provides for collection of infor-
   mation and analysis of the run-time behavior of the VAXELN system. The
   information is subsequently analyzed on an OpenVMS host.

   Local area transport (LAT) host services allow VAXELN targets to com-
   municate with devices attached to terminal servers. These services in-
   clude terminal server communication, terminal I/O, and a control in-
   terface for application programs plus an interactive utility, which


                                    10

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   can be used to control and monitor a LAT environment. VAXELN supports
   LAT protocol Version 5.1.

   The VAXELN DECwindows Server provides a common means for DECwindows
   applications to interact with graphics workstations. The DECwindows
   server image runs as a job on the hardware where the display, keyboard,
   and mouse are located in a VAXELN run-time system.

   The VAXELN DECwindows Client provides run-time routines and tools for
   the development of applications using capabilities of graphics work-
   stations.

   The VAXELN DECwindows User Environment Components provides Window Man-
   ager and terminal emulation support.

   VAXELN Kernel Objects and Operations

   Processes are the execution threads for VAXELN programs. The main thread
   of execution (master process) corresponds to the program main routine.

   Programs can also include special process blocks that are executed by
   dynamically created subprocesses. The family of a master process and
   all of its subprocesses is a job in VAXELN terminology. One copy of
   a program's code is shared by any number of jobs executing that pro-
   gram. Jobs and processes are scheduled on a preemptive priority ba-
   sis.

   Ports are first-in/first-out queues of messages that are exchanged be-
   tween processes in a VAXELN application. Port names are provided to
   ensure the transparency of message-port locations in the local area
   network. Circuits are bidirectional message paths between two spec-
   ified ports. Circuits guarantee delivery, blocking, and proper sequenc-
   ing of network messages and flow control (prevention of a slower re-
   ceiver process being overwhelmed by a faster sender).

   Where memory sharing between jobs is a necessity and the network dis-
   tribution of the jobs is not an issue, VAXELN provides the AREA ob-
   ject as a means of sharing data among jobs on a single VAXELN node.
   Events and semaphores are synchronization objects used by multiple pro-
   cesses within a job. Events and semaphores can also be associated with

                                    11

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   AREA objects and used as synchronization objects by multiple jobs, or
   by processes in different jobs. Devices are synchronization objects
   used to synchronize a device driver program with the completion of an
   interrupt service routine.


   SOURCE CODE INFORMATION

   Optional source materials for this software product can be obtained
   by signing Digital's Software Program Sources License Agreement and
   then purchasing the desired source option(s). The agreement entitles
   the user to use the source materials at one customer facility or lo-
   cation specified in the agreement. Target code, including the kernel,
   device drivers, run-time libraries, and most modules which are not pro-
   prietary to Digital, is supplied in the source kit.

   Included in the source kit are the kernel and necessary device drivers
   for the rtVAX 300 processor. If the rtVAX 300 is to be embedded into
   a board with an I/O bus, or used in an application that will utilize
   DMA operations, customization of the VAXELN kernel to support the full
   environment may be required. Source components and documentation for
   kernel customization are included with the VAXELN source kit.

   Most users do not require source materials, which are used primarily
   to make modifications to the software product, but they are useful for
   studying how the code works. Source kits provided by Digital do not
   contain all source files used by Digital to build the VAXELN Toolkit.

   HARDWARE REQUIREMENTS

   Host Processors Supported

   VAXELN is supported on properly configured Digital systems and must
   meet the minimum system as described in the HARDWARE REQUIREMENTS and
   SUPPORTED HARDWARE sections of the OpenVMS VAX Operating System Soft-
   ware Product Description (SPD 25.02.xx).





                                    12

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   Target Processors Supported

   VAX:       VAX 4000 Model 100,
              VAX 4000 Model 100A,
              VAX 4000 Model 105A,
              VAX 4000 Model 106,
              VAX 4000 Model 106A,
              VAX 4000 Model 200,
              VAX 4000 Model 300,
              VAX 4000 Model 400,
              VAX 4000 Model 500,
              VAX 4000 Model 505A,
              VAX 4000 Model 600

   Note: The VAX 4000 Model 505A is supported when the VAXELN system
   image is built for a VAX 4000 Model 600.

              VAX 6000 Model 200 Series,
              VAX 6000 Model 300 Series,
              VAX 6000 Model 400 Series,
              VAX 6000 Model 500 Series,
              VAX 6000 Model 600 Series
              [no vector support on any VAX 6000]

              VAX 9000 Model 110,
              VAX 9000 Model 210,
              VAX 9000 Model 300 Series,
              VAX 9000 Model 400 Series
              [single CPU, no vectors, 256 Mbytes memory maximum]

   MicroVAX:  MicroVAX II, MicroVAX 2000,
              MicroVAX 3100 Model 10E,
              MicroVAX 3100 Model 30,
              MicroVAX 3100 Model 40,
              MicroVAX 3100 Model 80,
              MicroVAX 3100 Model 85,

                                        13

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17



              MicroVAX 3100 Model 90,
              MicroVAX 3100 Model 95,
              MicroVAX 3300, MicroVAX 3400,
              MicroVAX 3500, MicroVAX 3600,
              MicroVAX 3800, MicroVAX 3900

   Board      KA620-BA, rtVAX 300, KAV30 VME SBC
   Products:

   VAXstation:VAXstation II, VAXstation II/GPX,
              VAXstation 2000,
              VAXstation 3100 Model 30,
              VAXstation 3100 Model 38,
              VAXstation 3100 Model 40,
              VAXstation 3100 Model 48,
              VAXstation 3200, VAXstation 3500

              VAXstation 4000 Model 60,
              VAXstation 4000 Model 90,
              VAXstation 4000 Model 90A,
              VAXstation 4000 Model 96,
              VAXstation 4000 Model 96A,
              VAXstation 4000 VLC

   Processors Not Supported as Target

   MicroVAX:  MicroVAX I,
              MicroVAX 3100 Model 10,
              MicroVAX 3100 Model 20/20E

   VAX:       VAXft Model 110,

              VAXft Model 310,

              VAXft Model 410,

              VAXft Model 610,



                                    14

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17



              VAXft Model 612,

              VAX 7000 Model 600 Series,


              VAX 8200, VAX 8250, VAX 8300,
              VAX 8350, VAX 8500, VAX 8530,
              VAX 8550, VAX 8600, VAX 8650,
              VAX 8700, VAX 8800, VAX 8810,
              VAX 8820, VAX 8830, VAX 8840,

              VAX 10000 Model 600 Series,

              VAX-11/725, VAX-11/730,
              VAX-11/750, VAX-11/780,
              VAX-11/782, VAX-11/785


   VAXstation:VAXstation I, VAXstation 3520,

              VAXstation 3540, VAXstation 8000,

              VAXstation 3100 Model 76,

   A VAXELN target system typically requires a memory configuration of
   1MB and a ROM-based application could have as little as 256K bytes of
   physical memory on the target system depending on the size of the user's
   programs and on the toolkit components that are included.

   The target computer must have a load device for loading the VAXELN sys-
   tem image. The load device is either a Files-11 disk, TU58 cartridge
   tape, TZ87, TLZ06, TLZ07, TLZ11, TK70, TK50, or Ethernet adapter (for
   downline loading). VAXELN systems can also be placed into ROM.







                                    15

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   OPTIONAL HARDWARE

   Device drivers or device interface routines are supplied in the Toolkit
   for the following devices:

   Supported MicroVAX (Q22) Devices

   o  ADQ32 analog-to-digital converter

   o  ADV11-C, AXV11-C, and KWV11-C real-time devices

   o  ADV11-D 16-channel, 12-bit A/D converter with DMA

   o  Console terminal

   o  CXA16 sixteen-line asynchronous multiplexer (DEC423)

   o  CXB16 sixteen-line asynchronous multiplexer (RS422)

   o  CXY08 eight-line asynchronous multiplexer with modem control (RS232)

   o  DELQA Ethernet-to-Q22 adapter

   o  DEQNA Ethernet-to-Q22 adapter

   o  DESQA Thickwire/ThinWire Ethernet-to-Q22 adapter

   o  DHV11 eight-line asynchronous multiplexer with modem support

   o  DHQ11 supported in DHV11 mode only

   o  DLVJ1 or DLV11-J asynchronous serial controller

   o  DRQ3B or DRQ3B-SA 16-bit parallel I/O with DMA

   o  DRV11-WA and DRV11-J parallel line interface

   o  DZV11 or the DZQ11-SA four-line asynchronous multiplexer

   o  IEQ11 IEEE-488 bus controller

   o  KDA50 Q-bus disk adapter for up to four Digital Storage Architec-
      ture (DSA) disks

   o  KFQSA-SA DSSI controller for RF series disks

   o  LPV11 line printer controller

   o  MRV11-D ROM option board

                                    16

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   o  RQC25 fixed/removable disk subsystem for the RC25

   o  TQK50 for the TK50 streaming tapes

   o  TQK70 for the TK70 streaming tapes

   o  TU81 Plus, TU81, and TU81E reel-to-reel tapes

   o  RV20 write-once optical drive

   Supported XMI Bus Devices

   o  DEC LANcontroller 400 (DEMNA) Ethernet adapter

   o  KDM70 RA series DSA disk controller

   Supported VAXBI Devices

   o  DB88 additional VAXBI channels

   o  DEBNA Ethernet adapter

   o  DEC LANcontroller 200 (DEBNI) high-performance Ethernet controller

   o  DMB32 asynchronous serial lines, line printer support and modem sup-
      port

   o  MS820 memory option

   o  DRB32-E, -M or -W high-speed parallel port interface (DMA)

   o  KDB50 RA series DSA disk adapter

   o  TU81 Plus, TU81, and TU81E reel-to-reel tapes

   o  RV20 write-once optical drive

   Supported SCSI-Series RZ Disks, RX Diskettes, Compact Disks

   o  RZ22, RZ23, RZ23L, RZ24, RZ24L, RZ25, RZ25L, RZ26, RZ26L, RZ26N,
      RZ55, RZ56, RZ57, RZ58

   o  RX23, RX26

   o  RRD40, RRD42, RRD43, RRD44

                                    17

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   Supported SCSI-Series Tapes

   o  TZ87

   o  TLZ06, TLZ07, TLZ11

   Supported RF-Series DSSI Disks

   o  RF30, RF31, RF31F, RF31T, RF35, RF70, RF72, RF73

   Supported RA-Series DSA Disks

   o  RA60, RA70, RA71, RA72, RA73, RA80, RA81, RA82, RA90, RA92

   Supported Busless Systems Serial Devices

   o  DHT32 eight-line serial port option (MicroVAX 2000)

   o  DSH32 eight asynch serial lines (synch line not supported) (MicroVAX
      3100)

   o  DHW41, DHW42 [2] asynch serial line multiplexer

   Note: For those devices not listed above, services are available from
   Digital for developing device drivers and device interface routines.
   For more information, contact your local Digital office.

   Disk Space Requirements
   (Block Cluster Size = 1):

   Disk space required for     55,000 blocks
   installation:
                               (28.2M bytes)

   If DECwindows is sup-       95,000 blocks
   ported:
                               (48.6M bytes)

   ____________________
 [2] The DHW42 is not supported on the following:  MicroVAX 3100 Model 85,

     95, 96 VAX 4000 Model 100, 100A, 105A, 106

                                    18

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17



   Disk space required for     47,000 blocks
   use (permanent):
                               (24.1M bytes)

   If DECwindows is sup-       87,000 blocks
   ported:
                               (44.5M bytes)

   These counts refer to the disk space required on the system disk. The
   sizes are approximate; actual sizes may vary depending on the user's
   system environment, configuration, and software options.

   CLUSTER ENVIRONMENT

   This layered product is fully supported when installed on any valid
   and licensed VAXcluster* configuration as described in the OpenVMS VAX
   Operating System Software Description and in the VAXcluster Software
   Product Description (29.78.xx).

   SOFTWARE REQUIREMENTS

   OpenVMS VAX Operating System V5.5 through V6.2.

   Refer to the OpenVMS VAX Operating System Software Description (SPD
   25.01.xx) for operating system requirements, prerequisites, and sup-
   ported compilers.

   OPTIONAL SOFTWARE

   Development Environment

   o  DECnet/OSI for OpenVMS VAX V5.5 is required for downline loading,
      remote debugging, and communication between VAXELN and OpenVMS.

   o  The VAX C V2.4 - V3.2 compiler is required if C is used for VAX-
      ELN program development.




                                    19

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   o  The VAX FORTRAN V4.4 - V5.9 compiler is required if FORTRAN is used
      for VAXELN program development.

   o  To make use of VAXELN Pascal ANALYSIS_DATA functionality, OpenVMS
      VAX V5.4 and Source Code Analyzer V4.0 is required.

   o  Motif Version 1.1.3.

   GROWTH CONSIDERATIONS

   The minimum hardware/software requirements for any future version of
   this product may be different from the requirements for the current
   version.

   DISTRIBUTION MEDIA

   9-track 1600 BPI Magtape, TK50/70 Streaming Tape

   The VAXELN Toolkit is also available as part of the OpenVMS Consol-
   idated Software Distribution on CD-ROM.

   ORDERING INFORMATION

   For VAXELN Toolkit

   Software Licenses: QL-375A*-**
   Personal Use License: QL-375AA-2B
   Software Media: QA-375A*-**
   Software Documentation: QA-375AA-GZ
   Source Kit: QB-375AA-**
   Software Product Services: QT-375A*-**

   For VAXELN Run-Time System

   Software Licenses: QL-376A*-**

   *  Denotes variant fields. For additional information on available li-
      censes, services, and media, refer to the appropriate price book.



                                    20

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   SOFTWARE LICENSING

   A Single-Use License is required for each CPU that will be using the
   VAXELN Toolkit to support development of VAXELN systems.

   If the VAXELN system is developed and used on the same CPU that is a
   valid VAXELN target system, then a separate Single-Use VAXELN Target
   System License is not needed. However, if the application (VAXELN sys-
   tem) is developed on one CPU and then loaded onto one or more addi-
   tional CPUs, a Single-Use VAXELN Target System License is needed for
   each additional target system CPU.

   Single-Use License Option For Host Development Systems: QL-375A*-A*

   This Single-Use License is the right to use the VAXELN Toolkit on a
   single CPU.

   For VAXELN Target Systems: QL-376A*-FA

   Single-Use License Option

   If the VAXELN Toolkit is installed on a host CPU fully licensed for
   that product and the user wishes to use the VAXELN Run-Time System por-
   tion of it on an additional CPU, a Single-Use VAXELN Target License
   can be purchased. This license provides the right to use only the VAX-
   ELN Run-Time System on that target system and does not include a soft-
   ware warranty.

   Source License and Sources Distribution Option

   This option supplies the machine-readable source code for this soft-
   ware product. It gives the user the right to use the source code on
   any CPU at the facility/location specified in the agreement which has
   a Single-Use License for the object code.

   The Source Kit does not contain all sources needed to build the VAX-
   ELN Toolkit.

   Specifically excluded are sources of a proprietary nature (for exam-
   ple, T/MSCP) and sources for any of the compilers.

                                    21

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17


   This software is furnished under the licensing provisions of Digital
   Equipment Corporation's Standard Terms and Conditions. For more in-
   formation about Digital's licensing terms and policies, contact your
   local Digital office.

   License Management Facility Support

   This layered product supports the OpenVMS License Management Facil-
   ity.

   License units for this product are allocated on an Unlimited System
   Use basis.

   For more information on the License Management Facility, refer to the
   OpenVMS VAX Operating System Software Product Description (SPD 25.01.xx)
   or the License Management Facility manual of the OpenVMS VAX Operat-
   ing System documentation set.

   For more information about Digital's licensing terms and policies, con-
   tact your local Digital office.

   SOFTWARE PRODUCT SERVICES

   A variety of service options are available. For more information, please
   contact your local Digital office.

   SOFTWARE WARRANTY

   Warranty for this software product is provided by Digital with the pur-
   chase of a license for the product as defined in the Software Warranty
   Addendum of this SPD.

   [R] Motif is a registered trademark of Open Software Foundation,
       Inc.

   [R] UNIX is a registered trademark of UNIX System Laboratories,
       Inc.




                                    22

 



   VAXELN Toolkit, Version 4.6                           SPD 28.02.17



   [TM]The DIGITAL Logo, CI, DEC, DECnet, DECwindows, DEQNA, Digi-
       tal, Digital UNIX, DRB32, IVAX, KA620, KDA, KDM, LAT, MicroVAX,
       MS820, MSCP, OpenVMS, Q-bus, RA, RQC25, RRD42, rtVAX, RV20, RX,
       RZ, ThinWire, TK, TQK50, TU, VAX, VAX C, VAX FORTRAN, VAXBI,
       VAXcluster, VAXELN, VAXELN Pascal, VAXft, VAXserver, VAXsta-
       tion, and VMS are trademarks of Digital Equipment Corporation.


































                                    23
