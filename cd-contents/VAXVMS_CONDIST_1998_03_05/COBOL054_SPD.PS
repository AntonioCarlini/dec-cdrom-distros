%!PS-Adobe-3.0
%%Title: VV_54
%%Creator: DECdocument  V2.3
%%Copyright: 1986,1987,1988,1989,1990,1991 DIGITAL EQUIPMENT CORPORATION.
%%+All Rights Reserved.
%%CreationDate: Thu Jan 23 1997 10:49:28
%%For: MACINTYRE   
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%+++TTI changes : added ROTB back in
%+++            : added 1000 ROTB = begin special code example
%+++            : added 1001 ROTB = end special code example
%+++            : added 1002 ROTB = digital logo
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "DRAFT" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (DRAFT) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
mark		% CREATE ISOLatin1Encoding if not there already
/ISOLatin1Encoding
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute 
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1Encoding where not {256 array astore def} if 
cleartomark
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP {/ExampleState 0 def} def		% RESUME PAGE
/ExampleState 0 def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/SXY {		% (x,y) POSITION ABSOLUTE, JUST SET Xpos & Ypos, DON'T MOVE
  Yadjust  /Ypos exch def /Xpos exch def
} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
  /DVC$PSPage {save} def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

%+++ TTI changes to allow .screen escape sequence
% 1000 ROTB -> start screen
% 1001 ROTB -> end screen
% 1002 ROTB -> Digital logo

/codexindent 590 def

/ROTB {
  dup 1000 eq {
    % 1000 ROTB - start code example
    pop /ExampleState 0 def
    /S {
      dup (.screen) eq {
      % start screen example
% pjf fix 7-4-92 : first line after .screen was indented improperly
        currentpoint /ExampleY exch def /ExampleX exch def
        1 setgray show 0 setgray
        /S {
          /ExampleName exch def /ExampleState 1 def
          codexindent 0 translate codexindent 0 rmoveto
          1 setgray ExampleName show 0 setgray
          /S /show load def
          /FONT104 /F104 load def
          currentfont F102 currentfont begin
            /Encoding load dup 32 get 126 exch put
          end FONT104 currentfont /F104DICT exch def setfont
          /F104 {
            /S {
              currentfont /F104DICT load eq {
                dup length 240 mul /w exch def
                gsave 0 -100 rmoveto currentpoint
                newpath moveto w 0 rlineto 0 440
                rlineto w neg 0 rlineto closepath fill grestore
                1 setgray show 0 setgray
              } {
                /S /show load def S
              } ifelse
            } def
            FONT104
          } def
        } def
      } {
      % regular code example
        show /S /show load def
      } ifelse
    } def
  } { dup 1001 eq {
    % 1001 ROTB - end code example
    pop
    ExampleState 1 eq {
      currentpoint ExampleY exch sub 600 sub /ylength exch def pop
      /xlength 19200 1.25 mul def /radius 1000 def
      gsave ExampleX ExampleY translate
      240 -400 translate .8 1 scale 50 setlinewidth
      /Helvetica findfont 250 scalefont setfont
      ExampleName (-) eq { /ExampleName () def } if
      ExampleName stringwidth pop
      xlength exch sub -250 radius sub ylength sub moveto
        gsave 1.25 1 scale ExampleName show grestore
      newpath radius neg 0 moveto
      0 ylength neg radius 180 270 arc
      xlength ylength neg radius 270 0 arc
      xlength 0 radius 0 90 arc
      0 0 radius 90 180 arc
      closepath stroke grestore
      /ExampleState 0 def
      /F104 /FONT104 load def
      /S /show load def
      codexindent neg 0 translate codexindent neg 0 rmoveto
    } if
  } { dup 1002 eq {
    pop
    gsave (-) stringwidth pop neg 0 rmoveto 
    /Helvetica findfont 450 scalefont setfont
    [(d) (i) (g) (i) (t) (a) (l)] {
      currentpoint currentpoint newpath moveto
      0 -200 rmoveto 300 0 rlineto 0 730 rlineto -300 0 rlineto 0 -730 rlineto
      fill moveto gsave
      dup stringwidth pop 300 exch sub 2 div 0 rmoveto
      1 setgray show 0 setgray grestore
      350 0 rmoveto
    } forall
    0 375 rmoveto
    /Helvetica findfont 200 scalefont setfont (TM) show
    grestore
  } {
    % other - do rotation
    XP
    gsave
    Xpos Ypos translate
    rotate % using <theta> from the stack
    Xpos neg Ypos neg translate
    RP
  } ifelse } ifelse } ifelse
} def

/ROTE {XP grestore RP} def
/F104 { } def

%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file USER07:[MACINTYRE.COBOL]VV_54.DVI_PS.
% DefineFont:F42 Category:10 Pointsize:8
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F42 400.0 /Helvetica@DOCPSE DPSF
% DefineFont:F41 Category:10 Pointsize:9
/Helvetica-BoldOblique /Helvetica-BoldOblique@DOCPSE DOCPSE ReENCODE
/F41 450.0 /Helvetica-BoldOblique@DOCPSE DPSF
% DefineFont:F40 Category:10 Pointsize:9
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F40 450.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F39 Category:10 Pointsize:9
/Helvetica-Oblique /Helvetica-Oblique@DOCPSE DOCPSE ReENCODE
/F39 450.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F38 Category:10 Pointsize:9
/F38 450.0 /Helvetica@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F16 Category:10 Pointsize:24
/F16 1200.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (1) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC
3600 5094 XY
3600 8083 SPB
120.000 -692.000 translate
%%BeginDocument: (DOC$ROOT:[TEX.FORMATS]LOGOTM.EPS)
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.0
%%For: (Erik Goetze) (Digital Equipment)
%%Title: (Digital-TM-Black-Logo-24pt.epsf)
%%CreationDate: (12/6/93) (12:45 PM)
%%BoundingBox: -120 692 168 722
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 12 12 600 780
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.0 
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.0 3
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
u
u
0 O
0 g
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
84.7146 693.4118 m
84.7146 717.3723 L
73.9468 717.3723 L
73.9468 693.4118 L
84.7146 693.4118 L
f
107.885 693.4118 m
107.885 717.3723 L
97.1172 717.3723 L
97.1172 693.4118 L
107.885 693.4118 L
f
153.7972 693.4118 m
153.7972 717.3723 L
143.8071 717.3723 L
143.8071 693.4118 L
153.7972 693.4118 L
f
142.6011 693.4118 m
142.6011 717.3723 L
131.8333 717.3723 L
131.8333 693.4118 L
142.6011 693.4118 L
f
1 g
0.3394 w
149.9843 699.7139 m
149.9843 711.7924 L
147.8778 711.7924 L
147.8778 699.7139 L
149.9843 699.7139 L
f
0.3371 w
77.5597 703.8961 m
77.5583 705.6678 78.2907 706.4587 79.0732 706.4587 c
79.8557 706.4587 80.5895 705.6465 80.5867 703.8961 c
80.5837 701.954 79.8557 701.3818 79.0732 701.3818 c
78.3094 701.3818 77.5609 702.2072 77.5597 703.8961 C
75.4752 704.1459 L
75.4676 700.8523 77.2072 699.5718 78.8913 699.5786 c
79.5828 699.5814 80.2596 699.8286 80.6 700.2937 C
80.6141 700.3124 80.6584 700.4162 80.6583 700.4183 C
80.6244 700.2916 80.625 700.1891 V
80.6233 700.1777 80.6237 700.1406 80.626 699.7119 C
82.7292 699.716 L
82.7298 711.7917 L
80.6446 711.7903 l
80.6445 707.4887 l
80.6466 707.4652 80.6931 707.3242 80.6928 707.3244 C
80.6385 707.4471 80.6163 707.4725 v
80.1924 707.9585 79.5762 708.2175 78.8114 708.2175 c
77.2445 708.2175 75.4813 706.8212 75.4752 704.1459 C
77.5597 703.8961 L
f
0 g
1 w
95.9113 693.4118 m
95.9113 717.3723 L
85.9211 717.3723 L
85.9211 693.4118 L
95.9113 693.4118 L
f
1 g
0.3394 w
91.9657 699.7126 m
91.9657 708.1225 L
89.8591 708.1225 L
89.8591 699.7126 L
91.9657 699.7126 L
f
u
u
0.3497 w
90.9119 709.8997 m
91.5743 709.8997 92.1113 710.4367 92.1113 711.0991 c
92.1113 711.7615 91.5743 712.2985 90.9119 712.2985 c
90.2495 712.2985 89.7124 711.7615 89.7124 711.0991 c
89.7124 710.4367 90.2495 709.8997 90.9119 709.8997 c
f
U
90.9119 711.0991 m
F
U
0.3371 w
100.8803 703.8944 m
100.8816 702.1867 101.6114 701.3801 102.3939 701.3801 c
103.1765 701.3801 103.9044 701.9523 103.9075 703.8944 c
103.9102 705.6448 103.1765 706.457 102.3939 706.457 c
101.6114 706.457 100.879 705.666 100.8803 703.8944 C
98.7959 704.1441 L
98.802 706.8195 100.5652 708.2158 102.132 708.2158 c
102.8969 708.2158 103.5131 707.9568 103.937 707.4708 c
103.9592 707.4454 104.0136 707.3227 Y
104.0138 707.3224 103.9673 707.4635 103.9652 707.4869 c
103.9654 708.1229 l
105.9299 708.1242 L
105.9294 699.3371 L
105.8354 697.0854 104.6192 695.8401 102.3916 695.8686 c
100.7036 695.8901 99.4582 696.6495 99.0313 697.8617 C
101.0324 698.4692 L
101.1394 697.8802 101.6967 697.5308 102.3916 697.5401 c
103.1804 697.5508 103.944 697.9984 103.944 699.0644 c
103.944 699.8664 103.9434 700.2651 103.9457 700.2807 C
103.9494 700.3076 103.979 700.4166 Y
103.9791 700.4144 103.9348 700.3107 103.9207 700.292 C
103.5803 699.8269 102.9035 699.5797 102.212 699.5769 c
100.5279 699.5701 98.7882 700.8506 98.7959 704.1441 C
100.8803 703.8944 L
f
0 g
1 w
119.0853 693.4118 m
119.0853 717.3723 L
109.0951 717.3723 L
109.0951 693.4118 L
119.0853 693.4118 L
f
1 g
0.3394 w
115.1396 699.7126 m
115.1396 708.1225 L
113.0331 708.1225 L
113.0331 699.7126 L
115.1396 699.7126 L
f
u
u
0.3497 w
114.0858 709.8997 m
114.7482 709.8997 115.2853 710.4367 115.2853 711.0991 c
115.2853 711.7615 114.7482 712.2985 114.0858 712.2985 c
113.4235 712.2985 112.8864 711.7615 112.8864 711.0991 c
112.8864 710.4367 113.4235 709.8997 114.0858 709.8997 c
f
U
114.0858 711.0991 m
F
U
0 g
1 w
130.6197 693.412 m
130.6197 717.3721 L
120.2703 717.3721 L
120.2703 693.412 L
130.6197 693.412 L
f
1 g
0.3394 w
126.2505 699.5646 m
124.7467 699.5831 124.2088 700.5177 124.2538 701.9346 c
124.2538 706.7883 L
123.1964 706.7883 L
123.1964 708.2176 L
124.2538 708.2176 l
124.2538 711.3437 L
126.2705 711.9583 L
126.2705 708.2176 L
127.7557 708.2176 L
127.7557 706.7883 L
126.2705 706.7883 L
126.2705 702.1263 L
126.2616 701.4761 126.4657 701.2903 126.8902 701.2718 c
127.2805 701.2548 127.656 701.4274 127.829 701.549 C
127.829 699.9406 L
127.479 699.7254 126.8368 699.5574 126.2505 699.5646 c
f
u
0.3405 w
135.6473 702.2915 m
135.6528 702.8825 136.0338 703.3083 136.5444 703.4443 c
137.7926 703.7767 138.5964 703.9945 138.6567 704.1716 c
138.6567 703.2083 L
138.6474 702.0456 137.9937 701.1894 136.8957 701.171 c
135.9976 701.1559 135.6425 701.7753 135.6473 702.2915 C
133.7631 702.2696 L
133.7837 700.9577 134.523 699.5106 136.3713 699.4877 c
137.1579 699.478 138.1839 699.8529 138.623 700.446 c
138.6665 700.4452 L
138.6668 699.7147 L
140.6151 699.7143 L
140.6151 699.7618 L
140.4057 699.9663 140.4492 700.9912 140.4467 701.171 C
140.4467 706.2354 l
140.4454 708.112 138.5671 708.5608 137.4168 708.5535 c
136.1338 708.5454 134.6208 707.9627 134.1719 706.4661 C
135.9254 705.934 L
136.0104 706.4809 136.4723 706.9922 137.388 706.9946 c
138.2781 706.997 138.6154 706.6432 138.6118 706.211 c
138.6081 705.7732 138.3433 705.4916 137.9301 705.3532 c
137.4197 705.1822 136.9937 705.0708 136.0574 704.8326 c
134.2984 704.385 133.7494 703.1462 133.7631 702.2696 C
135.6473 702.2915 L
f
U
U
u
0 To
1 0 0 1 154.5163 713.4324 0 Tp
TP
0 Tr
0 g
1 w
/_Helvetica 5.4867 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(T) Tx 0 30 Tk 
(M) Tx 
(\r) TX 
TO
U
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
showpage %Added by MACEPS
%%EndDocument
SPE
3600 5094 XY
0 SC 3600 9976 XY F16(Software)S 3600 11221 XY(Produ)S 2 x(ct)S 3600 12467 XY
(Description)S 3600 X 747 y 23316 204 R 3600 13988 XY F36(PRODUC)S -2 x
(T)S 167 x(NAME:)S 597 x(V)S -37 x(AX)S 166 x(COBOL)S 165 x(V)S -27 x
(ersion)S 167 x(5.4)S 166 x(for)S 166 x(OpenVMS)S 167 x(V)S -37 x(AX)S
166 x(Systems)S 23784 X(SPD)S 166 x(25.04.28)S 3600 16327 XY F40(DESCRIPTI)S
-2 x(ON)S 3600 17353 XY F38(V)S -33 x(AX)S 149 x(COBOL)S 149 x(is)S
138 x(a)S 138 x(high-level)S 138 x(language)S 139 x(for)S 137 x(business)S
139 x(data)S 3600 X 548 y(process)S 2 x(ing)S 118 x(that)S 117 x(opera)S
2 x(tes)S 118 x(on)S 118 x(the)S 118 x(OpenVMS)S 119 x(V)S -33 x(AX)S
118 x(Operat-)S 3600 X 548 y(ing)S 104 x(System,)S 114 x(taking)S 104 x
(full)S 103 x(advan)S 2 x(tage)S 104 x(of)S 104 x(the)S 105 x(system)S
105 x(facili)S -2 x(ties.)S 3600 X 548 y(V)S -33 x(AX)S 149 x(COBOL)S
242 x(is)S 243 x(based)S 243 x(upon)S 244 x(the)S 243 x(1985)S 243 x
(ANSI)S 242 x(COBOL)S 3600 X 547 y(Standard)S 208 x(X3.23-1985)S 208 x
(as)S 207 x(modi\211ed)S 208 x(by)S 207 x(the)S 207 x(X.23a\2031989)S
3600 X 548 y(amend)S 2 x(ment.)S 3600 21118 XY(V)S -33 x(AX)S 149 x
(COBOL)S 149 x(has)S 120 x(been)S 119 x(validated)S 119 x(at)S 119 x
(the)S 119 x(high)S 119 x(level)S 118 x(by)S 119 x(the)S 3600 X 548 y
(National)S 138 x(Bureau)S 139 x(of)S 138 x(Standards)S 140 x(for)S
138 x(conforma)S 2 x(nce)S 138 x(to)S 138 x('FIPS)S 3600 X 548 y(PUB)S
149 x(21-3,)S 150 x(Federa)S 2 x(l)S 149 x(Standard)S 150 x(COBOL)S
-25 x('.)S 3600 23239 XY(The)S 171 x(V)S -33 x(AX)S 149 x(COBOL)S 170 x
(Data)S 170 x(Manipulation)S 171 x(Language)S 172 x(\(DML\),)S 3600 X
548 y(which)S 165 x(is)S 166 x(based)S 167 x(upon)S 166 x(the)S 166 x
(report)S 166 x(of)S 166 x(the)S 166 x(CODASYL)S 165 x(Data)S 3600 X
548 y(Description)S 177 x(Langu)S 2 x(age)S 178 x(Committee)S 177 x
(\(1978)S 2 x(\),)S 184 x(allows)S 176 x(users)S 3600 X 548 y(to)S 277 x
(write)S 276 x(progr)S 2 x(ams)S 277 x(that)S 277 x(access)S 278 x(databas)S
2 x(es)S 277 x(using)S 277 x(the)S 3600 X 548 y(Oracle)S 196 x(DBMS)S
195 x(database)S 197 x(managem)S 2 x(ent)S 195 x(system.)S 337 x(Oracle)S
3600 X 548 y(DBMS)S 150 x(must)S 150 x(be)S 150 x(install)S -2 x(ed)S
150 x(to)S 150 x(use)S 150 x(this)S 149 x(feature.)S 3600 27004 XY(V)S
-33 x(AX)S 149 x(COBOL)S 232 x(includes)S 232 x(various)S 232 x(DIGIT)S
-34 x(AL)S 232 x(extensions)S 233 x(to)S 3600 X 548 y(COBOL,)S 209 x
(including)S 209 x(screen)S 211 x(handling)S 210 x(at)S 209 x(the)S
209 x(sourc)S 2 x(e)S 209 x(lan-)S 3600 X 548 y(guage)S 151 x(level,)S
149 x(\211le)S 149 x(sharing)S 150 x(and)S 151 x(record)S 151 x(locking.)S
3600 29125 XY(The)S 147 x(following)S 146 x(list)S 146 x(of)S 147 x
(DIGIT)S -35 x(AL)S 148 x(extensions)S 147 x(to)S 147 x(COBOL)S 147 x
(are)S 3600 X 548 y(implemented)S 151 x(in)S 149 x(V)S -33 x(AX)S 149 x
(COBOL)S(:)S 3600 30698 XY(\201)S 441 x(Screen)S 151 x(handling)S 151 x
(is)S 150 x(implemented)S 151 x(using)S 151 x(the)S 150 x(DISPLA)S -33 x
(Y)S 4198 X 548 y(and)S 176 x(ACCEPT)S 174 x(statements.)S 276 x(The)S
175 x(DISPLA)S -33 x(Y)S 175 x(statement)S 4198 X 548 y(enables)S 241 x
(the)S 240 x(prog)S 2 x(rammer)S 242 x(to)S 240 x(display)S 240 x(information)S
241 x(or)S 4198 X 548 y(prompts)S 138 x(anywhere)S 139 x(on)S 137 x
(a)S 138 x(video)S 137 x(scree)S 2 x(n.)S 195 x(The)S 137 x(ACCEPT)S
4198 X 548 y(statement)S 333 x(takes)S 334 x(information)S 333 x(typed)S
334 x(anywhere)S 334 x(on)S 4198 X 548 y(the)S 317 x(screen)S 318 x
(and)S 318 x(returns)S 318 x(the)S 318 x(value)S 317 x(to)S 317 x(a)S
317 x(running)S 4198 X 548 y(V)S -33 x(AX)S 149 x(COBOL)S 106 x(progra)S
2 x(m.)S 185 x(The)S 107 x(DISPLA)S -34 x(Y)S 107 x(statement)S 107 x
(con-)S 4198 X 548 y(verts)S 128 x(data)S 127 x(from)S 128 x(internal)S
128 x(numeric)S 128 x(format)S 128 x(to)S 127 x('ASCII)S 126 x(dis-)S
4198 X 548 y(play)S 123 x(format',)S 127 x(and)S 124 x(the)S 123 x(ACCEPT)S
149 x(WITH)S 148 x(CONVERSION)S 4198 X 548 y(statement)S 194 x(converts)S
195 x('ASCII)S 192 x(display')S 193 x(input)S 194 x(characters)S 4198 X
548 y(to)S 267 x(internal)S 267 x(nume)S 2 x(ric)S 267 x(formats)S 268 x
(as)S 268 x(appropr)S 2 x(iate.)S 552 x(The)S 16452 16314 XY(terminal-type)S
136 x(is)S 134 x(recogn)S 2 x(ized)S 135 x(at)S 135 x(run)S 135 x(time)S
135 x(from)S 136 x(informa-)S 16452 X 548 y(tion)S 149 x(provided)S
151 x(by)S 150 x(the)S 149 x(operating)S 151 x(system.)S 15854 X 891 y
(\201)S 441 x(Many)S 164 x(\211le)S 163 x(capab)S 2 x(ili)S -2 x(ties)S
163 x(are)S 164 x(available)S 164 x(through)S 164 x(RMS)S 163 x(in-)S
16452 X 548 y(cluding)S 163 x(extensions)S 164 x(for)S 163 x(segmented)S
164 x(keys,)S 167 x(descend)S 2 x(ing)S 16452 X 548 y(keys,)S 150 x
(and)S 150 x(duplicate)S 149 x(primar)S 2 x(y)S 149 x(keys.)S 15854 X
891 y(\201)S 441 x(RMS-STS)S 134 x(and)S 135 x(RMS-STV)S 135 x(and)S
135 x(RMS-FILENAME)S 135 x(spe-)S 16452 X 548 y(cial)S 266 x(registers)S
267 x(may)S 267 x(be)S 267 x(examine)S 2 x(d)S 266 x(to)S 267 x(assist)S
266 x(debug-)S 16452 X 548 y(ging.)S 197 x(These)S 146 x(registers)S
146 x(contain)S 145 x(status)S 145 x(values)S 146 x(from)S 145 x(the)S
16452 X 548 y(Record)S 150 x(Manag)S 2 x(ement)S 150 x(System)S 150 x
(\(OpenVMS)S 151 x(RMS\).)S 15854 X 891 y(\201)S 441 x(File)S 123 x
(sharing)S 125 x(and)S 125 x(record)S 125 x(locking)S 125 x(features)S
124 x(enab)S 2 x(le)S 123 x(more)S 16452 X 548 y(than)S 150 x(one)S
150 x(user)S 150 x(to)S 150 x(access)S 150 x(data)S 150 x(at)S 149 x
(the)S 150 x(same)S 151 x(time.)S 15854 X 891 y(\201)S 441 x(Conditional)S
213 x(compilation)S 213 x(serves)S 215 x(to)S 213 x(make)S 215 x(debugg)S
2 x(ing)S 16452 X 548 y(easier)S -24 x(.)S 15854 X 891 y(\201)S 441 x
(The)S 230 x(/INSTRU)S -2 x(CTION_SET)S 229 x(quali\211er)S 231 x(customizes)S
231 x(ob-)S 16452 X 548 y(ject)S 131 x(code)S 132 x(generation)S 132 x
(to)S 131 x(target)S 132 x(the)S 131 x(dif)S -9 x(ferent)S 132 x(classes)S
132 x(of)S 16452 X 548 y(V)S -33 x(AX)S 160 x(processo)S 2 x(rs,)S 162 x
(maximizing)S 161 x(speci\211c)S 161 x(processo)S 2 x(r)S 160 x(fea-)S
16452 X 548 y(tures.)S 15854 X 891 y(\201)S 441 x(The)S 226 x(COPY)S
225 x(FROM)S 225 x(DICTIO)S -2 x(NAR)S -8 x(Y)S 225 x(statement)S 226 x
(allows)S 16452 X 548 y(access)S 210 x(to)S 210 x(common)S 211 x(record)S
211 x(de\211nitions)S 210 x(stored)S 210 x(in)S 209 x(the)S 16452 X
548 y(Oracle)S 300 x(CDD/Repository)S -34 x(.)S 652 x(Oracle)S 300 x
(CDD/Repository)S 16452 X 548 y(must)S 150 x(be)S 150 x(installed)S
149 x(to)S 149 x(use)S 150 x(this)S 149 x(feature.)S 15854 X 891 y(\201)S
441 x(T)S -50 x(erminal)S 141 x(format)S 142 x(recognition)S 141 x(for)S
141 x(progra)S 2 x(m)S 141 x(source)S 142 x(\211les.)S 15854 31213 XY
(V)S -33 x(AX)S 149 x(COBOL)S 149 x(implements)S 258 x(several)S 257 x
(statements)S 258 x(and)S 257 x(ex-)S 15854 X 548 y(tensions)S 181 x
(designe)S 2 x(d)S 181 x(to)S 180 x(make)S 183 x(program)S 2 x(ming)S
181 x(easier)S 182 x(in)S 180 x(the)S 15854 X 548 y(OpenVMS)S 151 x
(for)S 149 x(V)S -33 x(AX)S 150 x(environmen)S 2 x(t:)S 15854 33300 XY
(\201)S 441 x(CALL)S 407 x(statement)S 409 x(extensions:)S 716 x(BY)S
407 x(V)S -33 x(ALUE,)S 408 x(BY)S 16452 X 548 y(DESCRIPT)S -10 x(OR,)S
149 x(OMITTED,)S 148 x(and)S 151 x(GIVIN)S -2 x(G)S 15854 X 891 y(\201)S
441 x(V)S -33 x(ALUE)S 197 x(IS)S 196 x(EXTERNAL)S 197 x(\202)S 197 x
(Access)S 198 x(to)S 196 x(link)S 197 x(time)S 197 x(con-)S 16452 X
548 y(stants)S 15854 X 891 y(\201)S 441 x(USAGE)S 149 x(IS)S 149 x(POINTER)S
148 x(\202)S 150 x(Address)S 151 x(data)S 150 x(type)S 23848 38320 XY
F40(February)S 151 x(1997)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica Helvetica-Bold
%%PageProcessColors: Black
%%PageCustomColors: (BLACK)
%
%%Page: (2) 2
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(V)S -33 x(AX)S 132 x(COBOL)S 132 x(V)S -25 x(ersion)S
134 x(5.4)S 133 x(for)S 133 x(OpenVMS)S 133 x(V)S -33 x(AX)S 133 x(Systems)S
23980 X(SPD)S 133 x(25.04.28)S 3600 4835 XY F38(\201)S 441 x(V)S -33 x
(ALUE)S 217 x(IS)S 216 x(REFERENCE)S 216 x(\202)S 217 x(Compile)S 217 x
(time)S 217 x(address)S 4198 X 548 y(evaluation)S 3600 X 884 y(\201)S
441 x(SET)S 146 x(T)S -8 x(O)S 147 x(REFERENCE)S 145 x(\202)S 147 x
(Run)S 147 x(time)S 147 x(addres)S 2 x(s)S 146 x(evalua-)S 4198 X 548 y
(tion)S 3600 X 884 y(\201)S 441 x(SUCCESS/F)S -26 x(AILURE)S 149 x(\202)S
149 x(Class)S 150 x(conditions)S 3600 X 884 y(\201)S 441 x(Thirty-one-cha)S
2 x(racter)S 150 x(user-na)S 2 x(mes)S 3600 X 884 y(\201)S 441 x(ACCEPT)S
149 x(A)S -34 x(T)S 150 x(END)S 149 x(statement)S 3600 X 884 y(\201)S
441 x(Single-quote-delimited,)S 150 x(non-num)S 2 x(eric)S 149 x(literals)S
3600 X 884 y(\201)S 441 x(Hyphen/under)S 2 x(score)S 150 x(equivalence)S
151 x(in)S 149 x(user-n)S 2 x(ames)S 3600 X 884 y(\201)S 441 x(Non-nume)S
2 x(ric)S 149 x(literal)S 148 x(argum)S 2 x(ent)S 150 x(passing)S 3600 13103 XY
(The)S 242 x(V)S -33 x(AX)S 149 x(COBOL)S 242 x(compiler)S 242 x(produce)S
2 x(s)S 241 x(an)S 243 x(object)S 241 x(mod-)S 3600 X 548 y(ule)S 207 x
(from)S 207 x(a)S 206 x(source)S 208 x(progr)S 2 x(am.)S 370 x(The)S
207 x(compiler)S 207 x(is)S 207 x(capable)S 3600 X 548 y(of)S 191 x
(prod)S 2 x(ucing)S 192 x(a)S 191 x(source)S 193 x(listing)S 191 x(with)S
190 x(embe)S 2 x(dded)S 192 x(diagnos-)S 3600 X 548 y(tics)S 214 x(including)S
214 x(the)S 215 x(line)S 214 x(and)S 215 x(column)S 215 x(position)S
215 x(in)S 214 x(source-)S 3600 X 548 y(code,)S 203 x(a)S 192 x(machine)S
193 x(language)S 193 x(list)S -2 x(ing,)S 202 x(a)S 192 x(\211le-nam)S
2 x(e)S 191 x(map,)S 203 x(a)S 3600 X 548 y(data-nam)S 2 x(e)S 210 x
(map,)S 226 x(a)S 210 x(proce)S 2 x(dure-nam)S 2 x(e)S 210 x(map,)S
226 x(an)S 211 x(external)S 3600 X 548 y(progra)S 2 x(m)S 158 x(name)S
160 x(map,)S 161 x(database)S 159 x(subsche)S 2 x(ma)S 159 x(information,)S
3600 X 548 y(and)S 169 x(a)S 168 x(cross-re)S 2 x(ference)S 168 x(listing.)S
253 x(The)S 169 x(cross-refer)S 2 x(ence)S 168 x(list-)S 3600 X 548 y
(ing)S 193 x(and)S 193 x(maps)S 193 x(may)S 194 x(be)S 193 x(produce)S
2 x(d)S 192 x(in)S 193 x(either)S 192 x(alphabetical)S 3600 X 548 y
(order)S -23 x(,)S 209 x(or)S 198 x(in)S 197 x(order)S 199 x(of)S 198 x
(declaration.)S 344 x(The)S 198 x(cross-refer)S 2 x(ence)S 3600 X 548 y
(listi)S -2 x(ng)S 224 x(distinguishes)S 224 x(updating)S 224 x(referen)S
2 x(ces)S 224 x(to)S 223 x(data)S 224 x(from)S 3600 X 548 y(read-o)S
2 x(nly)S 149 x(reference)S 2 x(s.)S 3600 20114 XY(V)S -33 x(AX)S 149 x
(COBOL)S 149 x(provides)S 358 x(support)S 357 x(for)S 356 x(erro)S 2 x
(r)S 356 x(diagnostics)S 3600 X 548 y(and)S 304 x(cross-r)S 2 x(eference)S
304 x(information)S 304 x(to)S 303 x(DEC)S 302 x(Langua)S 2 x(ge-)S
3600 X 548 y(Sensitive)S 245 x(Editor/Source)S 247 x(Code)S 246 x(Analyzer)S
-24 x(.)S 488 x(Additionally)S -34 x(,)S 3600 X 548 y(V)S -33 x(AX)S
149 x(COBOL)S 266 x(provides)S 268 x(support)S 267 x(for)S 267 x(the)S
267 x(processing)S 268 x(of)S 3600 X 548 y(pseudoc)S 2 x(ode)S 127 x
(and)S 128 x(design)S 128 x(commen)S 2 x(ts)S 127 x(that)S 126 x(are)S
128 x(used)S 128 x(by)S 127 x(the)S 3600 X 548 y(DEC)S 154 x(Langua)S
2 x(ge-Sensitive)S 155 x(Editor/Source)S 155 x(Code)S 156 x(Analyzer)S
3600 X 548 y(for)S 150 x(low-level)S 149 x(program)S 151 x(design.)S
3600 24386 XY(Object)S 127 x(modules)S 128 x(produc)S 2 x(ed)S 127 x
(by)S 128 x(the)S 127 x(compiler)S 128 x(can)S 128 x(be)S 128 x(linked)S
3600 X 548 y(with)S 269 x(other)S 271 x(object)S 270 x(modules)S 271 x
(produced)S 272 x(by)S 270 x(many)S 271 x(other)S 3600 X 548 y(OpenVMS)S
210 x(V)S -34 x(AX)S 209 x(languages)S 2 x(,)S 223 x(including)S 208 x
(V)S -33 x(AX)S 150 x(BASIC)S 208 x(and)S 3600 X 547 y(DEC)S 213 x(Fortran.)S
392 x(V)S -33 x(AX)S 150 x(COBOL)S 213 x(is)S 213 x(suppor)S 2 x(ted)S
213 x(by)S 214 x(both)S 214 x(the)S 3600 X 548 y(OpenVMS)S 180 x(V)S
-33 x(AX)S 178 x(Commo)S 2 x(n)S 179 x(Run)S 179 x(T)S -17 x(ime)S 179 x
(Library)S 180 x(\(R)S -8 x(TL\))S 179 x(and)S 3600 X 548 y(the)S 150 x
(Symbolic)S 149 x(Debugge)S 2 x(r)S 149 x(for)S 150 x(OpenVMS)S 151 x
(V)S -34 x(AX.)S 3600 28109 XY(The)S 176 x(V)S -34 x(AX)S 150 x(COBOL)S
175 x(product)S 176 x(includes)S 176 x(a)S 175 x(COBOL)S 175 x(compiler)S
3600 X 548 y(and)S 126 x(the)S 126 x(REFORMA)S -34 x(T)S 126 x(utili)S
-2 x(ty)S -33 x(.)S 191 x(The)S 126 x(REFORMA)S -34 x(T)S 126 x(utili)S
-2 x(ty)S 126 x(con-)S 3600 X 548 y(verts)S 144 x(source)S 144 x(progr)S
2 x(ams)S 144 x(from)S 144 x(DIGI)S -2 x(T)S -33 x(AL)S 144 x(terminal)S
143 x(format)S 144 x(to)S 3600 X 548 y(ANSI-standard)S 151 x(COBOL)S
149 x(format)S 149 x(and)S 151 x(vice)S 149 x(versa.)S 3600 31334 XY
F40(HARDW)S -26 x(ARE)S 149 x(REQUIREMENTS)S 3600 32318 XY F41(Processor)S
2 x(s)S 149 x(Supported:)S 3600 33451 XY F42(V)S -30 x(AXft:)S 5991 X
(V)S -30 x(AXft)S 132 x(3000)S 131 x(Model)S 132 x(1)S -30 x(10)S 5991 X
585 y(V)S -30 x(AXft)S 132 x(3000)S 131 x(Model)S 132 x(310)S 5991 X
586 y(V)S -30 x(AXft)S 132 x(3000)S 131 x(Model)S 132 x(410)S 5991 X
585 y(V)S -30 x(AXft)S 132 x(3000)S 131 x(Model)S 132 x(610)S 5991 X
585 y(V)S -30 x(AXft)S 132 x(3000)S 131 x(Model)S 132 x(612)S 15854 4995 XY
(V)S -30 x(AX:)S 18245 X(V)S -30 x(AX)S 133 x(4000)S 131 x(Model)S 132 x
(50)S 18245 X 612 y(V)S -30 x(AX)S 133 x(4000)S 131 x(Model)S 132 x
(100,)S 131 x(100A,)S 131 x(105A)S 18245 X 612 y(V)S -30 x(AX)S 133 x
(4000)S 131 x(Model)S 132 x(200)S 18245 X 613 y(V)S -30 x(AX)S 133 x
(4000)S 131 x(Model)S 132 x(300)S 18245 X 612 y(V)S -30 x(AX)S 133 x
(4000)S 131 x(Model)S 132 x(500,)S 131 x(500A,)S 131 x(505A)S 18245 X
612 y(V)S -30 x(AX)S 133 x(4000)S 131 x(Model)S 132 x(600,)S 131 x(600A)S
18245 X 612 y(V)S -30 x(AX)S 133 x(4000)S 131 x(Model)S 132 x(700A)S
-2 x(,)S 133 x(705A)S 18245 9893 XY(V)S -30 x(AX)S 133 x(6000)S 131 x
(Model)S 132 x(210,)S 131 x(220,)S 131 x(230,)S 132 x(240)S 18245 X
612 y(V)S -30 x(AX)S 133 x(6000)S 131 x(Model)S 132 x(310,)S 131 x(320,)S
131 x(330,)S 132 x(340,)S 131 x(360)S 18245 X 613 y(V)S -30 x(AX)S 133 x
(6000)S 134 x(Model)S 135 x(400,)S 135 x(410,)S 136 x(420)S -2 x(,)S
137 x(430)S -2 x(,)S 137 x(440,)S 135 x(450,)S 18245 X 498 y(460)S -666 x
612 y(V)S -30 x(AX)S 133 x(6000)S 131 x(Model)S 132 x(510,)S 131 x(520,)S
131 x(530,)S 132 x(540,)S 131 x(550,)S 131 x(560)S 18245 X 612 y(V)S
-30 x(AX)S 133 x(6000)S 134 x(Model)S 135 x(600,)S 135 x(610,)S 136 x
(620)S -2 x(,)S 137 x(630)S -2 x(,)S 137 x(640,)S 135 x(650,)S 18245 X
498 y(660)S -666 x 14563 Y(V)S -30 x(AX)S 133 x(7000)S 131 x(Model)S
132 x(610,)S 131 x(620,)S 131 x(630,)S 132 x(640,)S 131 x(650,)S 131 x
(660)S 18245 X 612 y(V)S -30 x(AX)S 133 x(7000)S 131 x(Model)S 132 x
(710,)S 131 x(720,)S 131 x(730,)S 132 x(740,)S 131 x(750,)S 131 x(760)S
18245 16400 XY(V)S -30 x(AX)S 133 x(8200)S -2 x(,)S 133 x(V)S -30 x
(AX)S 132 x(8250)S 18245 X 612 y(V)S -30 x(AX)S 133 x(8300)S -2 x(,)S
133 x(V)S -30 x(AX)S 132 x(8350)S 18245 X 612 y(V)S -30 x(AX)S 133 x
(8500)S -2 x(,)S 133 x(V)S -30 x(AX)S 132 x(8530,)S 131 x(V)S -29 x
(AX)S 132 x(8550)S 18245 X 613 y(V)S -30 x(AX)S 133 x(8600)S -2 x(,)S
133 x(V)S -30 x(AX)S 132 x(8650)S 18245 X 612 y(V)S -30 x(AX)S 133 x
(8700)S 18245 X 612 y(V)S -30 x(AX)S 133 x(8800)S -2 x(,)S 133 x(V)S
-30 x(AX)S 132 x(8810,)S 131 x(V)S -29 x(AX)S 132 x(8820)S -2 x(,)S
18245 X 613 y(V)S -30 x(AX)S 133 x(8830)S -2 x(,)S 133 x(V)S -30 x(AX)S
132 x(8840)S 18245 21298 XY(V)S -30 x(AX)S 133 x(9000)S 131 x(Model)S
132 x(1)S -30 x(10,)S 132 x(1)S -30 x(10VP)S 18245 X 613 y(V)S -30 x
(AX)S 133 x(9000)S 131 x(Model)S 132 x(210,)S 131 x(210VP)S 18245 X
612 y(V)S -30 x(AX)S 133 x(9000)S 131 x(Model)S 132 x(310,)S 131 x(310VP)S
18245 X 612 y(V)S -30 x(AX)S 133 x(9000)S 131 x(Model)S 132 x(320,)S
131 x(320VP)S 18245 X 612 y(V)S -30 x(AX)S 133 x(9000)S 131 x(Model)S
132 x(330,)S 131 x(330VP)S 18245 X 613 y(V)S -30 x(AX)S 133 x(9000)S
131 x(Model)S 132 x(340,)S 131 x(340VP)S 18245 X 612 y(V)S -30 x(AX)S
133 x(9000)S 131 x(Model)S 132 x(410,)S 131 x(410VP)S 18245 X 612 y
(V)S -30 x(AX)S 133 x(9000)S 131 x(Model)S 132 x(420,)S 131 x(420VP)S
18245 X 613 y(V)S -30 x(AX)S 133 x(9000)S 131 x(Model)S 132 x(430,)S
131 x(430VP)S 18245 X 612 y(V)S -30 x(AX)S 133 x(9000)S 131 x(Model)S
132 x(440,)S 131 x(440VP)S 18245 28033 XY(V)S -30 x(AX)S 133 x(1000)S
-2 x(0)S 132 x(Model)S 132 x(610,)S 132 x(620)S -2 x(,)S 133 x(630,)S
131 x(640,)S 132 x(650)S -2 x(,)S 133 x(660)S 18245 29258 XY(V)S -30 x
(AX\2031)S -30 x(1)S(/73)S -2 x(0,)S 132 x(V)S -29 x(AX\2031)S -31 x
(1)S(/75)S -2 x(0)S 18245 X 612 y(V)S -30 x(AX\2031)S -30 x(1)S(/78)S
-2 x(0,)S 132 x(V)S -29 x(AX\2031)S -31 x(1)S(/78)S -2 x(5)S 15854 31230 XY
(MicroV)S -30 x(AX:)S 538 x(MicroV)S -30 x(AX)S 133 x(I)S(I)S 18245 X
612 y(MicroV)S -30 x(AX)S 133 x(200)S -2 x(0)S 18245 33067 XY(MicroV)S
-30 x(AX)S 133 x(310)S -2 x(0)S 133 x(Model)S 132 x(10/1)S -2 x(0E,)S
132 x(20/20)S -2 x(E,)S 133 x(30,)S 132 x(40,)S 18245 X 612 y(MicroV)S
-30 x(AX)S 133 x(310)S -2 x(0)S 133 x(Model)S 132 x(80,)S 132 x(85,)S
131 x(90,)S 132 x(95,)S 132 x(96)S 18245 X 612 y(MicroV)S -30 x(AX)S
133 x(320)S -2 x(0,)S 133 x(MicroV)S -30 x(AX)S 132 x(3300)S 18245 X
612 y(MicroV)S -30 x(AX)S 133 x(340)S -2 x(0,)S 133 x(MicroV)S -30 x
(AX)S 132 x(3500)S 18245 X 613 y(MicroV)S -30 x(AX)S 133 x(360)S -2 x
(0,)S 133 x(MicroV)S -30 x(AX)S 132 x(3800)S 18245 X 612 y(MicroV)S
-30 x(AX)S 133 x(390)S -2 x(0)S 15132 38868 XY F40(2)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-BoldOblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (3) 3
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(V)S -33 x(AX)S 149 x(COBOL)S 148 x(V)S -24 x(ersion)S
150 x(5.4)S 149 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x(AX)S 149 x(Systems)S
23947 X(SPD)S 149 x(25.04.28)S 3600 4995 XY F42(V)S -30 x(AXstation:)S
6589 X(V)S -30 x(AXstation)S 132 x(II/GPX,)S 131 x(V)S -30 x(AXstation)S
132 x(II/QVSS)S 6589 X 498 y(V)S -30 x(AXstation)S 131 x(2000/)S -2 x
(GPX,)S 133 x(V)S -30 x(AXstation)S 131 x(2000/)S -2 x(MFB)S 6589 6489 XY
(V)S -30 x(AXstation)S 132 x(310)S -2 x(0/GPX)S 132 x(Model)S 132 x
(38,)S 132 x(48,)S 131 x(76)S 6589 X 498 y(V)S -30 x(AXstation)S 132 x
(310)S -2 x(0/SPX)S 132 x(Mode)S -2 x(l)S 134 x(38,)S 132 x(48,)S 131 x
(76)S 6589 X 498 y(V)S -30 x(AXstation)S 132 x(310)S -2 x(0)S 133 x
(Mode)S -2 x(l)S 134 x(30,)S 131 x(38,)S 132 x(40,)S 132 x(48,)S 132 x
(76)S 6589 X 499 y(V)S -30 x(AXstation)S 132 x(320)S -2 x(0)S 6589 X
498 y(V)S -30 x(AXstation)S 132 x(350)S -2 x(0,)S 132 x(V)S -29 x(AXstation)S
131 x(3520)S 6589 X 498 y(V)S -30 x(AXstation)S 132 x(354)S -2 x(0)S
6589 9976 XY(V)S -30 x(AXstation)S 132 x(400)S -2 x(0)S 133 x(Mode)S
-2 x(l)S 134 x(60,)S 131 x(90,)S 132 x(95,)S 132 x(96,)S 132 x(VLC)S
3600 11221 XY(V)S -30 x(AXserver:)S 6589 X(V)S -30 x(AXserver)S 132 x
(310)S -2 x(0)S 133 x(Mode)S -2 x(l)S 134 x(10,)S 131 x(10E,)S 132 x
(20,)S 132 x(20E)S 6589 X 499 y(V)S -30 x(AXserver)S 132 x(320)S -2 x
(0,)S 132 x(3300,)S 131 x(3400)S 6589 X 498 y(V)S -30 x(AXserver)S 132 x
(350)S -2 x(0,)S 132 x(3600,)S 131 x(3800,)S 131 x(3900)S 6589 13214 XY
(V)S -30 x(AXserver)S 136 x(4000)S 136 x(Model)S 137 x(200,)S 138 x
(300)S -2 x(,)S 139 x(400,)S 137 x(500,)S 6589 X 498 y(600)S -666 x
14708 Y(V)S -30 x(AXserver)S 132 x(600)S -2 x(0)S 133 x(Mode)S -2 x
(l)S 134 x(210)S -2 x(,)S 133 x(220)S 6589 X 498 y(V)S -30 x(AXserver)S
132 x(600)S -2 x(0)S 133 x(Mode)S -2 x(l)S 134 x(310)S -2 x(,)S 133 x
(320)S 6589 X 499 y(V)S -30 x(AXserver)S 132 x(600)S -2 x(0)S 133 x
(Mode)S -2 x(l)S 134 x(410)S -2 x(,)S 133 x(420)S 6589 X 498 y(V)S -30 x
(AXserver)S 132 x(600)S -2 x(0)S 133 x(Mode)S -2 x(l)S 134 x(510)S -2 x
(,)S 133 x(520)S 6589 17199 XY(V)S -30 x(AXserver)S 132 x(820)S -2 x
(0,)S 132 x(8250)S 6589 X 498 y(V)S -30 x(AXserver)S 132 x(830)S -2 x
(0,)S 132 x(8350)S 6589 X 498 y(V)S -30 x(AXserver)S 132 x(853)S -2 x
(0,)S 132 x(8550)S 6589 X 498 y(V)S -30 x(AXserver)S 132 x(860)S -2 x
(0,)S 132 x(8650)S 6589 X 499 y(V)S -30 x(AXserver)S 132 x(870)S -2 x
(0)S 6589 X 498 y(V)S -30 x(AXserver)S 132 x(880)S -2 x(0,)S 132 x(8810,)S
131 x(8820,)S 131 x(8830,)S 131 x(8840)S 3600 X 896 y F39(Processo)S
2 x(rs)S 149 x(Not)S 150 x(Supported:)S 3600 X 897 y F38(MicroV)S -32 x
(AX)S 149 x(I)S 3600 X 548 y(V)S -33 x(AXstation)S 149 x(I)S 3600 X
548 y(V)S -33 x(AXstation)S 149 x(8000)S 3600 X 548 y(V)S -33 x(AX\2031)S
-33 x(1)S(/725)S 3600 X 548 y(V)S -33 x(AX\2031)S -33 x(1)S(/782)S 3600 X
896 y F39(Processo)S 2 x(r)S 149 x(Restrictions)S 3600 X 897 y F38(A)S
128 x(TK50)S 129 x(T)S -50 x(ape)S 129 x(Drive)S 128 x(is)S 128 x(require)S
2 x(d)S 128 x(for)S 128 x(standalone)S 130 x(MicroV)S -33 x(AX)S 3600 X
548 y(2000)S 150 x(and)S 151 x(V)S -33 x(AXstation)S 149 x(2000)S 150 x
(systems.)S 3600 X 897 y F39(Disk)S 149 x(Space)S 150 x(Requireme)S
2 x(nts)S 149 x(\(Block)S 150 x(Cluster)S 149 x(Size)S 150 x(=)S 149 x
(1\))S 3600 X 896 y F42(Disk)S 134 x(space)S 132 x(req)S -2 x(uired)S
132 x(during)S 131 x(installation:)S 11670 X(12,0)S -2 x(00)S 132 x
(blocks)S 11670 X 498 y(\(6.3)S 131 x(Mbytes\))S 3600 29304 XY(Disk)S
134 x(space)S 132 x(req)S -2 x(uired)S 132 x(for)S 132 x(use)S 132 x
(\(perma)S -2 x(nent\))S -2 x(:)S 718 x(3,00)S -2 x(0)S 133 x(blocks)S
11670 X 498 y(\(1.6)S 131 x(Mbytes\))S 3600 X 896 y F38(These)S 202 x
(counts)S 203 x(refer)S 202 x(to)S 201 x(the)S 202 x(disk)S 202 x(space)S
202 x(require)S 2 x(d)S 201 x(on)S 202 x(the)S 3600 X 548 y(system)S
189 x(disk.)S 316 x(The)S 189 x(sizes)S 189 x(are)S 189 x(appro)S 2 x
(ximate;)S 208 x(actual)S 188 x(sizes)S 3600 X 548 y(may)S 134 x(vary)S
135 x(depending)S 135 x(on)S 134 x(the)S 133 x(user)S 18 x(')S -9 x
(s)S 134 x(system)S 134 x(environm)S 2 x(ent,)S 3600 X 548 y(con\211gur)S
2 x(ation,)S 149 x(and)S 150 x(software)S 150 x(options.)S 15854 4834 XY
F40(OPTIONAL)S 148 x(HARDW)S -26 x(ARE)S 15854 X 897 y F38(A)S 161 x
(VT100)S 161 x(family)S -34 x(,)S 163 x(VT200)S 161 x(family)S -33 x
(,)S 162 x(VT300)S 162 x(family)S -34 x(,)S 163 x(or)S 161 x(VT400)S
15854 X 548 y(family)S 189 x(terminal)S 190 x(is)S 189 x(required)S
191 x(for)S 190 x(the)S 190 x(screen)S 191 x(handling)S 190 x(ex-)S
15854 X 548 y(tensions)S 150 x(to)S 149 x(the)S 150 x(ACCEPT)S 149 x
(and)S 150 x(DISPLA)S -33 x(Y)S 149 x(statements.)S 15854 8321 XY F40
(CLUSTER)S 148 x(ENVIRONMENT)S 15854 X 897 y F38(This)S 115 x(layered)S
115 x(produ)S 2 x(ct)S 114 x(is)S 115 x(fully)S 113 x(suppo)S 2 x(rted)S
115 x(when)S 115 x(installed)S 114 x(on)S 15854 X 548 y(any)S 113 x
(valid)S 113 x(and)S 113 x(licensed)S 114 x(V)S -34 x(AXcluster*)S 114 x
(con\211gur)S 2 x(ation)S 112 x(without)S 15854 X 548 y(restrictions.)S
344 x(The)S 198 x(HARDW)S -17 x(ARE)S 197 x(REQUIREMENTS)S 197 x(sec-)S
15854 X 548 y(tion)S 118 x(of)S 118 x(this)S 117 x(produ)S 2 x(ct')S
-9 x(s)S 118 x(Software)S 118 x(Product)S 119 x(Description)S 118 x
(detail)S 15854 X 548 y(any)S 150 x(special)S 150 x(hardware)S 151 x
(required)S 151 x(by)S 150 x(this)S 149 x(product.)S 15854 X 896 y(*)S
424 x(V)S -33 x(AXcluster)S 350 x(con\211gura)S 2 x(tions)S 349 x(are)S
351 x(fully)S 349 x(described)S 351 x(in)S 16452 X 548 y(the)S 159 x
(OpenVMS)S 160 x(Cluster)S 158 x(Software)S 159 x(Product)S 160 x(Description)S
16452 X 548 y(\(SPD)S 149 x(29.78.xx\))S 149 x(and)S 150 x(include)S
149 x(CI,)S 148 x(Ethernet,)S 149 x(and)S 150 x(Mixed)S 16452 X 548 y
(Interconnect)S 150 x(con\211gu)S 2 x(rations.)S 15854 15444 XY F40
(SOFTW)S -25 x(ARE)S 149 x(REQUIREMENTS)S 15854 X 897 y F39(For)S 194 x
(Systems)S 194 x(Using)S 194 x(T)S -42 x(ermina)S 2 x(ls)S 193 x(\(No)S
193 x(DECwindows)S 193 x(Inter-)S 15854 X 548 y(face\):)S 15854 X 897 y
F38(\201)S 441 x(OpenVMS)S 301 x(V)S -34 x(AX)S 300 x(Operating)S 301 x
(System)S 300 x(V)S -25 x(ersion)S 301 x(6.1\202)S 16452 X 548 y(V)S
-25 x(ersion)S 150 x(7.0)S 15854 X 896 y F39(For)S 150 x(Workstations)S
150 x(Using)S 150 x(VWS:)S 15854 X 897 y F38(\201)S 441 x(OpenVMS)S
301 x(V)S -34 x(AX)S 300 x(Operating)S 301 x(System)S 300 x(V)S -25 x
(ersion)S 301 x(6.1\202)S 16452 X 548 y(V)S -25 x(ersion)S 150 x(7.0)S
15854 X 797 y(\201)S 441 x(VMS)S 136 x(W)S -8 x(orkstation)S 136 x(Software)S
135 x(V)S -25 x(ersion)S 136 x(4.4\202V)S -24 x(ersion)S 136 x(4.5)S
15854 X 896 y F39(For)S 150 x(Workstations)S 150 x(Using)S 150 x(DECwi)S
-2 x(ndows:)S 15854 X 897 y F38(\201)S 441 x(OpenVMS)S 301 x(V)S -34 x
(AX)S 300 x(Operating)S 301 x(System)S 300 x(V)S -25 x(ersion)S 301 x
(6.1\202)S 16452 X 548 y(V)S -25 x(ersion)S 150 x(7.0)S 15854 X 897 y
(This)S 149 x(produ)S 2 x(ct)S 149 x(may)S 150 x(run)S 151 x(in)S 149 x
(either)S 149 x(of)S 150 x(the)S 149 x(following)S 149 x(ways:)S 15854 X
896 y(\201)S 441 x(Stand-Alone)S 188 x(Execution)S 188 x(\202)S 188 x
(Running)S 188 x(the)S 188 x(X1)S -33 x(1)S 187 x(display)S 16452 X
548 y(server)S 209 x(and)S 209 x(the)S 209 x(client)S 207 x(application)S
208 x(on)S 209 x(the)S 208 x(same)S 210 x(ma-)S 16452 X 548 y(chine.)S
15854 X 797 y(\201)S 441 x(Remote)S 111 x(Execution)S 112 x(\202)S 111 x
(Running)S 112 x(the)S 111 x(X1)S -33 x(1)S 111 x(display)S 111 x(server)S
16452 X 548 y(and)S 150 x(the)S 150 x(client)S 148 x(application)S 150 x
(on)S 150 x(dif)S -9 x(ferent)S 150 x(machines.)S 15854 X 897 y F39
(OpenVMS)S 151 x(T)S -42 x(ailoring:)S 15854 X 896 y F38(For)S 207 x
(OpenVMS)S 207 x(V)S -34 x(AX)S 207 x(systems,)S 220 x(the)S 206 x(following)S
205 x(OpenVM)S 2 x(S)S 15854 X 548 y(classes)S 167 x(are)S 168 x(required)S
168 x(for)S 166 x(full)S 166 x(use)S 167 x(of)S 166 x(features)S 168 x
(of)S 166 x(this)S 166 x(lay-)S 15854 X 548 y(ered)S 151 x(product:)S
15854 X 897 y(\201)S 441 x(OpenVMS)S 150 x(Required)S 151 x(Save)S 150 x
(Set)S 15854 X 797 y(\201)S 441 x(Program)S 2 x(ming)S 150 x(Support)S
15854 X 897 y(For)S 246 x(more)S 246 x(information)S 245 x(on)S 246 x
(OpenVMS)S 246 x(classes)S 246 x(and)S 246 x(tai-)S 15854 X 548 y(loring,)S
290 x(refer)S 263 x(to)S 263 x(the)S 262 x(OpenVMS)S 263 x(Operating)S
263 x(System)S 263 x(for)S 15854 X 548 y(V)S -33 x(AX)S 279 x(and)S
279 x(Alpha)S 280 x(Software)S 279 x(Product)S 280 x(Description)S 279 x
(\(SPD)S 15854 X 547 y(25.01.xx\).)S 15132 38868 XY F40(3)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (4) 4
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(V)S -33 x(AX)S 149 x(COBOL)S 148 x(V)S -24 x(ersion)S
150 x(5.4)S 149 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x(AX)S 149 x(Systems)S
23947 X(SPD)S 149 x(25.04.28)S 3600 4834 XY(OPTIONAL)S 148 x(SOFTW)S
-25 x(ARE)S 3600 X 897 y F38(In)S 153 x(order)S 154 x(to)S 153 x(use)S
153 x(the)S 154 x(foll)S -2 x(owing)S 153 x(V)S -33 x(AX)S 150 x(COBOL)S
152 x(features,)S 154 x(the)S 3600 X 548 y(use)S 254 x(of)S 253 x(DEC)S
252 x(Lang)S 2 x(uage-Sens)S 2 x(iti)S -2 x(ve)S 254 x(Editor/Source)S
254 x(Code)S 3600 X 548 y(Analyzer)S 150 x(V)S -24 x(ersion)S 150 x
(4.3)S 150 x(-)S 149 x(4.4)S 150 x(is)S 149 x(required:)S 3600 X 896 y
(\201)S 441 x(/DESIGN)S 148 x(quali\211er)S 3600 X 797 y(\201)S 441 x
(/ANAL)S -34 x(YSIS_DA)S -33 x(T)S -34 x(A)S 150 x(quali\211er)S 3600 X
797 y(\201)S 441 x(V)S -33 x(AX)S 149 x(Langua)S 2 x(ge-Sensitive)S
150 x(Editor)S 149 x(compo)S 2 x(nent)S 3600 X 897 y(Note:)S 576 x(The)S
338 x(DEC)S 337 x(Langu)S 2 x(age-Sens)S 2 x(iti)S -2 x(ve)S 339 x(Editor/Source)S
3600 X 548 y(Code)S 238 x(Analyzer)S 239 x(is)S 238 x(available)S 238 x
(separa)S 2 x(tely)S 237 x(or)S 239 x(in)S 237 x(DECset.)S 3600 X 548 y
(Please)S 150 x(refer)S 150 x(to)S 149 x(SPD)S 150 x(27.07.xx)S 150 x
(for)S 149 x(order)S 2 x(ing)S 149 x(information.)S 3600 12705 XY F41
(V)S -33 x(AX)S 149 x(COBOL)S 149 x(Data)S 152 x(Manipulation)S 150 x
(Language)S 151 x(Features)S 3600 X 548 y(Require:)S 3600 14199 XY F38
(\201)S 441 x(Oracle)S 149 x(CODASYL)S 149 x(DBMS)S 3600 X 797 y(\201)S
441 x(Oracle)S 149 x(CDD/Repository)S 3600 16391 XY F41(V)S -33 x(AX)S
149 x(COBOL)S 160 x(COPY)S 160 x(FROM)S 161 x(DICTIO)S -2 x(NAR)S -9 x
(Y)S 161 x(Feature)S 3600 X 548 y(Requires:)S 3600 17885 XY F38(\201)S
441 x(Oracle)S 149 x(CDD/Repository)S 3600 19280 XY F41(V)S -33 x(AX)S
149 x(COBOL)S 166 x(V)S -16 x(ertical)S 168 x(Forms)S 167 x(Printing)S
167 x(Feature)S 2 x(s)S 3600 X 548 y(Require:)S 3600 20774 XY F38(\201)S
441 x(OpenVMS)S 301 x(V)S -34 x(AX)S 300 x(Operating)S 301 x(System)S
300 x(V)S -25 x(ersion)S 301 x(6.1\202)S 4198 X 548 y(V)S -25 x(ersion)S
150 x(7.0)S 3600 X 797 y(\201)S 441 x(V)S -25 x(ertical)S 149 x(Forms)S
151 x(Printing)S 149 x(OpenVMS)S 151 x(V)S -34 x(AX)S 150 x(V)S -25 x
(ersion)S 150 x(1.0)S 3600 23614 XY F40(GROWTH)S 149 x(CONSI)S -2 x
(DERA)S -34 x(TIONS)S 3600 X 896 y F38(The)S 184 x(minimum)S 185 x(hardware)S
2 x(/software)S 183 x(requirem)S 2 x(ents)S 184 x(for)S 184 x(any)S
3600 X 548 y(future)S 159 x(version)S 159 x(of)S 158 x(this)S 158 x
(product)S 159 x(may)S 159 x(be)S 159 x(dif)S -9 x(ferent)S 159 x(from)S
158 x(the)S 3600 X 548 y(requirem)S 2 x(ents)S 149 x(for)S 150 x(the)S
150 x(current)S 150 x(version.)S 3600 27101 XY F40(DISTRIB)S -2 x(UTION)S
148 x(MEDIA)S 3600 X 896 y F38(Nine-track)S 150 x(1600)S 150 x(BPI)S
150 x(Magtape,)S 150 x(TK50)S 150 x(Streaming)S 150 x(T)S -49 x(ape)S
3600 X 897 y(This)S 165 x(prod)S 2 x(uct)S 165 x(is)S 166 x(also)S 165 x
(available)S 166 x(as)S 166 x(part)S 166 x(of)S 166 x(the)S 165 x(OpenVM)S
2 x(S)S 3600 X 548 y(Consolidated)S 150 x(Software)S 149 x(Distribution)S
149 x(on)S 150 x(CD\203ROM)S(.)S 3600 30936 XY F40(ORDERIN)S -2 x(G)S
149 x(INFORMA)S -34 x(TION)S 3600 X 897 y F38(Software)S 150 x(Licenses:)S
199 x(QL-099)S 2 x(A*-**)S 3600 X 548 y(Software)S 150 x(Media:)S 199 x
(QA-099A*-)S 2 x(**)S 3600 X 548 y(Software)S 150 x(Documentation:)S
199 x(QA-099AA-)S 2 x(GZ)S 3600 X 548 y(Software)S 150 x(Product)S 150 x
(Services:)S 200 x(QT)S -25 x(-099A*-*)S 2 x(*)S 3600 X 896 y(*)S 424 x
(Denotes)S 152 x(variant)S 153 x(\211elds.)S 207 x(For)S 153 x(additional)S
152 x(information)S 152 x(on)S 4198 X 548 y(available)S 165 x(licenses,)S
169 x(services,)S 169 x(and)S 166 x(media,)S 170 x(refer)S 165 x(to)S
165 x(the)S 4198 X 548 y(appropr)S 2 x(iate)S 149 x(price)S 150 x(book.)S
15854 4834 XY F40(SOFTW)S -25 x(ARE)S 149 x(LICENSIN)S -2 x(G)S 15854 X
897 y F38(This)S 219 x(software)S 219 x(is)S 218 x(furnished)S 220 x
(only)S 219 x(under)S 221 x(a)S 219 x(license.)S 407 x(For)S 15854 X
548 y(more)S 175 x(information)S 174 x(about)S 175 x(licensing)S 174 x
(terms)S 174 x(and)S 175 x(policies)S 174 x(of)S 15854 X 548 y(DIGIT)S
-34 x(AL,)S 149 x(contact)S 150 x(your)S 150 x(local)S 149 x(DIGIT)S
-34 x(AL)S 150 x(of)S -9 x(\211ce.)S 15854 X 896 y F39(License)S 150 x
(Mana)S 2 x(gement)S 150 x(Facility)S 148 x(Suppor)S 2 x(t)S 15854 X
897 y F38(This)S 215 x(layered)S 216 x(produ)S 2 x(ct)S 215 x(supports)S
216 x(the)S 215 x(OpenVM)S 2 x(S)S 215 x(License)S 15854 X 548 y(Manag)S
2 x(ement)S 150 x(Facilit)S -2 x(y)S -33 x(.)S 15854 X 897 y(License)S
189 x(units)S 187 x(for)S 188 x(this)S 187 x(prod)S 2 x(uct)S 187 x
(are)S 189 x(allocated)S 188 x(on)S 188 x(an)S 188 x(Un-)S 15854 X 548 y
(limited)S 134 x(System)S 135 x(Use)S 135 x(and)S 136 x(Personal)S 136 x
(and)S 135 x(Conncurr)S 2 x(ent)S 134 x(Use)S 15854 X 547 y(basis.)S
15854 X 897 y(Each)S 150 x(Concurrent)S 150 x(Use)S 149 x(license)S
149 x(allows)S 149 x(any)S 149 x(one)S 150 x(individual)S 15854 X 548 y
(at)S 203 x(a)S 204 x(time)S 203 x(to)S 204 x(use)S 204 x(the)S 203 x
(layered)S 205 x(product.)S 361 x(Each)S 205 x(Personal)S 15854 X 548 y
(Use)S 186 x(license)S 187 x(allows)S 186 x(one)S 187 x(identi\211ed)S
186 x(individual)S 186 x(to)S 186 x(use)S 187 x(the)S 15854 X 548 y
(layered)S 151 x(product.)S 15854 X 897 y(For)S 110 x(more)S 111 x(information)S
111 x(on)S 110 x(the)S 110 x(License)S 111 x(Managem)S 2 x(ent)S 110 x
(Facil-)S 15854 X 548 y(ity)S -34 x(,)S 112 x(refer)S 103 x(to)S 103 x
(the)S 103 x(OpenVMS)S 104 x(Operating)S 103 x(System)S 103 x(for)S
103 x(V)S -33 x(AX)S 103 x(and)S 15854 X 547 y(Alpha)S 174 x(Software)S
174 x(Product)S 175 x(Description)S 174 x(\(SPD)S 173 x(25.01.xx\))S
175 x(or)S 15854 X 548 y(the)S 167 x F39(License)S 167 x(Mana)S 2 x
(gement)S 167 x(Facility)S 166 x F38(manual)S 167 x(of)S 167 x(the)S
167 x(Open-)S 15854 X 548 y(VMS)S 150 x(Operating)S 150 x(System)S 150 x
(docum)S 2 x(entation)S 149 x(set.)S 15854 18284 XY F40(SOFTW)S -25 x
(ARE)S 149 x(PRODUCT)S 148 x(SER)S -8 x(VICES)S 15854 X 896 y F38(A)S
131 x(variety)S 132 x(of)S 131 x(service)S 133 x(options)S 131 x(are)S
133 x(available)S 131 x(from)S 132 x(DIGIT)S -34 x(AL.)S 15854 X 548 y
(For)S 126 x(more)S 127 x(information,)S 131 x(contact)S 126 x(your)S
127 x(local)S 125 x(DIGIT)S -34 x(AL)S 126 x(of)S -9 x(\211ce.)S 15854 21223 XY
F40(SOFTW)S -25 x(ARE)S 149 x(W)S -24 x(ARRA)S -2 x(NTY)S 15854 X 896 y
F38(W)S -16 x(arranty)S 334 x(for)S 333 x(this)S 332 x(software)S 333 x
(produ)S 2 x(ct)S 332 x(is)S 333 x(provided)S 334 x(by)S 15854 X 548 y
(DIGIT)S -34 x(AL)S 144 x(with)S 144 x(the)S 144 x(purcha)S 2 x(se)S
144 x(of)S 145 x(a)S 144 x(license)S 145 x(for)S 144 x(the)S 145 x(product.)S
15854 X 548 y(This)S 204 x(means)S 205 x(that)S 203 x(DIGIT)S -35 x
(AL)S 204 x(will)S 202 x(remed)S 2 x(y)S 203 x(any)S 205 x(nonconfor-)S
15854 X 548 y(mance)S 157 x(when)S 156 x(it)S 155 x(is)S 155 x(reported)S
157 x(to)S 155 x(DIGIT)S -34 x(AL)S 156 x(by)S 155 x(the)S 156 x(customer)S
15854 X 548 y(during)S 150 x(the)S 150 x(warranty)S 150 x(period.)S
15854 X 897 y(The)S 206 x(warranty)S 207 x(period)S 206 x(is)S 206 x
(one)S 206 x(year)S -24 x(.)S 368 x(It)S 205 x(begins)S 206 x(when)S
206 x(the)S 15854 X 548 y(software)S 183 x(is)S 182 x(install)S -2 x
(ed)S 183 x(or)S 183 x(thirty)S 182 x(days)S 183 x(after)S 182 x(delivery)S
183 x(to)S 182 x(the)S 15854 X 548 y(end)S 183 x(user)S -24 x(,)S 190 x
(whichever)S 183 x(occur)S 2 x(s)S 182 x(\211rst)S 182 x(and)S 183 x
(expires)S 184 x(one)S 183 x(year)S 15854 X 548 y(later)S -25 x(.)S
266 x(All)S 170 x(warranty)S 173 x(related)S 172 x(support)S 173 x(for)S
171 x(this)S 172 x(software)S 171 x(will)S 15854 X 548 y(end)S 150 x
(one)S 151 x(year)S 150 x(after)S 149 x(release)S 151 x(of)S 149 x(the)S
150 x(subsequ)S 2 x(ent)S 149 x(versions.)S 15854 X 896 y(W)S -16 x
(arranty)S 348 x(is)S 347 x(provided)S 348 x(in)S 347 x(the)S 347 x
(country)S 348 x(of)S 347 x(purcha)S 2 x(se.)S 15854 X 548 y(DIGIT)S
-34 x(AL)S 119 x(will)S 117 x(provide)S 120 x(a)S 120 x(service)S 120 x
(location)S 119 x(which)S 118 x(will)S 118 x(accept)S 15854 X 548 y
(reporting)S 108 x(\(in)S 106 x(format)S 107 x(prescr)S 2 x(ibed)S 106 x
(by)S 107 x(DIGIT)S -34 x(AL\))S 107 x(of)S 106 x(a)S 107 x(noncon-)S
15854 X 548 y(formance)S 122 x(problem)S 122 x(caused)S 122 x(when)S
120 x(using)S 121 x(the)S 121 x(licensed)S 121 x(soft-)S 15854 X 548 y
(ware)S 187 x(under)S 188 x(normal)S 187 x(condtions)S 187 x(as)S 187 x
(de\211ned)S 188 x(by)S 186 x(this)S 186 x(SPD.)S 15854 X 548 y(DIGIT)S
-34 x(AL)S 150 x(will)S 148 x(reme)S 2 x(dy)S 150 x(a)S 151 x(nonconform)S
2 x(ance)S 151 x(problem)S 151 x(in)S 150 x(the)S 15854 X 548 y(curren)S
2 x(t)S 129 x(unaltered)S 132 x(release)S 131 x(of)S 130 x(the)S 131 x
(licensed)S 130 x(software)S 131 x(by)S 131 x(is-)S 15854 X 548 y(suing)S
159 x(a)S 159 x(correction)S 159 x(information)S 159 x(such)S 159 x
(as:)S 217 x(correc)S 2 x(tion)S 158 x(doc-)S 15854 X 548 y(umentation,)S
139 x(corrected)S 137 x(code;)S 141 x(or)S 136 x(a)S 135 x(notice)S
136 x(of)S 136 x(availabili)S -2 x(ty)S 136 x(of)S 15854 X 548 y(corrected)S
177 x(code;)S 188 x(or)S 176 x(a)S 176 x(restriction)S 175 x(or)S 175 x
(a)S 176 x(bypass.)S 277 x(The)S 176 x(cus-)S 15854 X 548 y(tomer)S
184 x(will)S 182 x(be)S 183 x(respo)S 2 x(nsible)S 183 x(for)S 183 x
(the)S 184 x(prepara)S 2 x(tion)S 183 x(and)S 184 x(sub-)S 15854 X 548 y
(mission)S 150 x(of)S 149 x(the)S 150 x(problem)S 151 x(report)S 150 x
(to)S 149 x(the)S 150 x(service)S 150 x(location.)S 15132 38868 XY F40
(4)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-BoldOblique Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (5) 5
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(V)S -33 x(AX)S 149 x(COBOL)S 148 x(V)S -24 x(ersion)S
150 x(5.4)S 149 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x(AX)S 149 x(Systems)S
23947 X(SPD)S 149 x(25.04.28)S 3600 4834 XY F41(W)S -24 x(ARRA)S -2 x
(NTY)S 149 x(EXCLUSION)S 3600 X 698 y F38(DIGIT)S -35 x(AL)S 222 x(does)S
222 x(not)S 221 x(warrant)S 222 x(that)S 221 x(the)S 222 x(software)S
221 x(licensed)S 3600 X 548 y(to)S 176 x(customer)S 177 x(shall)S 176 x
(be)S 177 x(error)S 177 x(free,)S 183 x(that)S 175 x(the)S 177 x(software)S
176 x(shall)S 3600 X 547 y(operate)S 169 x(with)S 166 x(any)S 169 x
(hardware)S 169 x(and)S 168 x(software)S 168 x(other)S 168 x(than)S
168 x(as)S 3600 X 548 y(speci\211ed)S 122 x(in)S 122 x(this)S 121 x
(SPD,)S 120 x(that)S 122 x(the)S 121 x(software)S 122 x(shall)S 121 x
(satisfy)S 121 x(cus-)S 3600 X 548 y(tomer)S 17 x(')S -8 x(s)S 241 x
(own)S 241 x(speci\211c)S 241 x(requireme)S 2 x(nts,)S 263 x(or)S 241 x
(that)S 240 x(copies)S 242 x(of)S 3600 X 548 y(the)S 220 x(software)S
220 x(other)S 221 x(than)S 220 x(those)S 221 x(provided)S 221 x(or)S
220 x(authorized)S 3600 X 548 y(by)S 150 x(DIGIT)S -35 x(AL)S 150 x
(shall)S 149 x(conform)S 151 x(to)S 149 x(the)S 150 x(SPD.)S 3600 X
897 y(DIGIT)S -35 x(AL)S 113 x(make)S 2 x(s)S 112 x(no)S 114 x(warranties)S
113 x(with)S 112 x(respect)S 113 x(to)S 113 x(the)S 113 x(\211tness)S
3600 X 548 y(and)S 150 x(opera)S 2 x(bili)S -2 x(ty)S 150 x(of)S 149 x
(modi\211cations)S 150 x(not)S 150 x(made)S 151 x(by)S 150 x(DIGI)S
-2 x(T)S -33 x(AL.)S 3600 X 896 y(If)S 118 x(the)S 118 x(software)S
119 x(fails)S 117 x(to)S 119 x(function)S 118 x(for)S 119 x(reasons)S
120 x(stated)S 119 x(above,)S 3600 X 548 y(the)S 145 x(customer)S 18 x
(')S -8 x(s)S 145 x(warrranty)S 146 x(will)S 143 x(be)S 146 x(invalidated)S
145 x(and)S 145 x(all)S 145 x(ser-)S 3600 X 548 y(vice)S 149 x(calls)S
149 x(will)S 148 x(be)S 149 x(billable)S 149 x(at)S 149 x(the)S 149 x
(prevailing)S 150 x(per)S 150 x(call)S 148 x(rates.)S 3600 X 897 y(This)S
231 x(Software)S 231 x(W)S -17 x(arran)S 2 x(ty)S 230 x(is)S 231 x(ef)S
-8 x(fective)S 230 x(for)S 231 x(licensed)S 232 x(soft-)S 3600 X 548 y
(ware)S 209 x(products)S 209 x(ordere)S 2 x(d)S 208 x(in)S 208 x(the)S
208 x(United)S 208 x(States)S 208 x(after)S 208 x(Oc-)S 3600 X 548 y
(tober)S 150 x(1988)S 151 x(and)S 150 x(superse)S 2 x(des)S 150 x(all)S
148 x(prior)S 151 x(versions.)S 3600 X 897 y(The)S 108 x(above)S 108 x
(information)S 107 x(is)S 107 x(valid)S 107 x(at)S 107 x(time)S 107 x
(of)S 107 x(release.)S 186 x(Please)S 3600 X 547 y(contract)S 202 x
(your)S 201 x(local)S 201 x(DIGIT)S -34 x(AL)S 201 x(of)S -8 x(\211ce)S
201 x(for)S 201 x(the)S 201 x(most)S 202 x(up-to-)S 3600 X 548 y(date)S
150 x(information.)S 3600 17487 XY F42(\207)S 498 x(CI,)S 138 x(DECset,)S
140 x(DECwindo)S -2 x(ws,)S 141 x(DIGIT)S -30 x(AL,)S 139 x(MicroV)S
-30 x(AX,)S 139 x(Open-)S 4497 X 498 y(VMS,)S 137 x(TK,)S 139 x(V)S
-30 x(AX,)S 138 x(V)S -30 x(AXcluster)S -23 x(,)S 140 x(V)S -30 x(AXft,)S
139 x(V)S -30 x(AXserver)S -23 x(,)S 139 x(V)S -30 x(AXsta-)S 4497 X
498 y(tion,)S 135 x(V)S -29 x(AX)S 132 x(BASIC)S(,)S 135 x(V)S -30 x
(AX)S 133 x(COBOL)S(,)S 135 x(DEC)S 135 x(Fortan,)S 135 x(OpenV)S -2 x
(MS)S 4497 X 498 y(RMS,)S 147 x(VMS,)S 147 x(VT100,)S 150 x(VT220,)S
150 x(VT300,)S 151 x(VT400)S 147 x(and)S 146 x(the)S 4497 X 498 y(DIGIT)S
-30 x(AL)S 146 x(Logo,)S 149 x(are)S 146 x(trad)S -2 x(emarks)S 146 x
(of)S 147 x(Digital)S 147 x(Equipme)S -2 x(nt)S 4497 X 498 y(Corp)S
-2 x(oration)S -2 x(.)S 3600 21223 XY(\207)S 498 x(Oracle)S 136 x(is)S
137 x(a)S 136 x(register)S -2 x(ed)S 136 x(trade)S -2 x(mark)S 136 x
(and)S 135 x(Oracle)S 136 x(CODASYL)S 4497 X 498 y(DBMS,)S 128 x(Oracle)S
128 x(CDD/Re)S -2 x(pository)S 128 x(are)S 128 x(trade)S -2 x(marks)S
129 x(of)S 128 x(Oracle)S 4497 X 498 y(Corp)S -2 x(oration)S -2 x(.)S
3600 X 897 y F38(\251)S 4899 X(1997)S 6865 X(Digital)S 9080 X(Equipment)S
12192 X(Corporation.)S 3600 X 548 y(All)S 149 x(Rights)S 148 x(Reserve)S
2 x(d.)S 15132 38868 XY F40(5)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica-BoldOblique
%%+ Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Trailer
%%Pages: 5
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica Helvetica-BoldOblique
%%+ Helvetica-Bold Helvetica-Oblique
%%DocumentNeededFonts: Helvetica Helvetica-BoldOblique
%%+ Helvetica-Bold Helvetica-Oblique
%%DocumentProcessColors: Black
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
