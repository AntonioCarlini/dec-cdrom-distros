%!PS-Adobe-1.0
%%Title: GEM02D$:[DUNCAN.WPSPLUS]0000622LSPD7.TMS;1
%%Creator: DECpage V3.0
%%CreationDate: 29-JUN-1989 14:53:33.68
%%Pages: (at end)
%%DocumentFonts: (atend)
%%EndComments
statusdict begin 0 setjobtimeout end
/CF /currentfont load def
/CP /currentpoint load def
/FF /findfont load def
/GR /grestore load def 
/GS /gsave load def
/LI /lineto load def
/MF /makefont load def 
/MO /moveto load def
/RL /rlineto load def
/RM /rmoveto load def
/RO /rotate load def
/SC /scale load def
/SD /setdash load def
/SE /setfont load def
/SF /scalefont load def
/SH /show load def
/ST /stroke load def
/SW /setlinewidth load def
/TR /translate load def

/BD {bind def} bind def
/DPT {FF exch SF SE}BD
/HTD{/ht exch def pop pop pop}BD
/MTCFP{false charpath flattenpath pathbbox}BD
/TCFP{true charpath flattenpath pathbbox}BD
  
% partial line up
/PLU {
 /CURSCAL CF /FontMatrix get 3 get 1000 mul def
  0 CURSCAL .5 mul RM
}BD
  
% partial line down
/PLD {
 /CURSCAL CF /FontMatrix get 3 get 1000 mul def
 0 CURSCAL -0.5 mul RM
}BD
  
/SavedX 0 def  
/SavedY 0 def  
/SavedString () def
/ShowInit
    {CP /SavedY exch def /SavedX exch def}BD
/bold
    {dup /SavedString exch def
    400 CF /FontMatrix get 3 get mul -12000 div 0 RM SH
    SavedX SavedY MO
    800 CF /FontMatrix get 3 get mul -12000 div 0 RM 
    SavedString SH
    SavedX SavedY MO
    SavedString SH
    }BD
/D1 
    {ShowInit bold}BD

% show string bold
/DPJB{
 /st 1 string def 
 /x exch def
 {st 0 3 -1 roll put st ( ) eq{x 0 RM}{st D1}ifelse}forall
}BD
% show string
/DPJ{( ) stringwidth pop sub 0 32 4 -1 roll widthshow}BD  

/DPF1
    {CP TR
    .5 .5 SC
    0 .6 DPFX mul MO SH
    .6 DPFX mul 0 MO SH
    0 0 MO 1.2 DPFX mul 1.2 DPFX mul LI ST
    GR
    .6 DPFX mul 0 RM
    }BD
  
% show fraction mono
/MDPF
    {exch
    GS
    /DPFX CF /FontMatrix get 3 get def
    DPF1
    }BD
/DPF1B
    {CP TR
    .5 .5 SC
    0 .6 DPFX mul MO D1
    .6 DPFX mul 0 MO D1
    0 0 MO 1.2 DPFX mul 1.2 DPFX mul LI ST
    GR
    .6 DPFX mul 0 RM
    }BD
  
% show fraction mono
/MDPFB
    {exch
    GS
    /DPFX CF /FontMatrix get 3 get def
    DPF1B
    }BD
  
% show fraction
/DPF{
 /CURSCAL CF /FontMatrix get 3 get 1000 mul def
 /den exch def
 /num exch def
 /regf CF def
 /frf CF [.65 0 0 .6 0 0] MF def
 GS newpath 0 0 MO /Symbol FF CURSCAL SF SE (\244) TCFP HTD GR 
 0 .4 ht mul RM frf SE num SH 0 .4 ht mul neg RM 
 /Symbol FF CURSCAL SF SE (\244) SH 
 frf SE den SH regf SE
}BD
  
% show sup/inf
/DPIS{
 /regf CF def
 /sy CP exch pop def
 /supinf CF [.65 0 0 .6 0 0] MF def 
 GS newpath 0 0 MO TCFP HTD GR 0 exch ht mul RM supinf SE SH regf SE 
 CP pop sy MO
}BD
  
% show sup
/DPS{.40 (I) DPIS}BD
  
%show inf
/DPI{dup -.15 exch DPIS}BD
  
% show mono sup
/MDPS{
 GS newpath 0 0 MO (1) MTCFP HTD GR 
 0 ht .5 mul RM SH
 0 ht -.5 mul RM
}BD
  
%show mono inf
/MDPI{
 GS newpath 0 0 MO (1) MTCFP HTD GR 
 0 ht -.5 mul RM SH
 0 ht .5 mul RM
}BD
% show mono sup
/MDPSB{
 GS newpath 0 0 MO (1) MTCFP HTD GR 
 0 ht .5 mul RM D1
 0 ht -.5 mul RM
}BD
  
%show mono inf
/MDPIB{
 GS newpath 0 0 MO (1) MTCFP HTD GR 
 0 ht -.5 mul RM D1
 0 ht .5 mul RM
}BD
  
/reencodedict 12 dict def
/ReEncode
  { reencodedict begin
    /newencoding exch def
    /newfontname exch def
    /basefontname exch def
    /basefontdict basefontname FF def
    /newfont basefontdict maxlength dict def
    basefontdict
    	{ exch dup /FID ne 
    	    {dup /Encoding eq
    		{exch dup length array copy 
    		    newfont 3 1 roll put}
	  	{ exch newfont 3 1 roll put }
	     ifelse
    	    }
	    { pop pop }
    	    ifelse
       } forall
  newfont /FontName newfontname put
  newencoding aload pop
  newencoding length 2 idiv
    {newfont /Encoding get 3 1 roll put}
    repeat
  newfontname newfont definefont pop
  end
 }BD
  
/DPMCS [
% DEC Supplemental side:
160 /.notdef
161 /exclamdown 
162 /cent 
163 /sterling 
164 /fraction 
165 /yen 
166 /.notdef
167 /section 
168 /currency 
169 /copyright 
170 /ordfeminine 
171 /guillemotleft 
172 /.notdef
173 /.notdef
174 /.notdef
175 /.notdef
176 /.notdef  % degree
177 /.notdef  % plus/minus
178 /.notdef  % superscript 2
179 /.notdef  % superscript 3
180 /.notdef
181 /.notdef  % micro
182 /paragraph 
183 /periodcentered 
184 /.notdef
185 /.notdef  % superscript 1
186 /ordmasculine 
187 /guillemotright 
188 /.notdef  % 1/4
189 /.notdef  % 1/2
190 /.notdef
191 /questiondown 
192 /Agrave 
193 /Aacute 
194 /Acircumflex 
195 /Atilde 
196 /Adieresis 
197 /Aring 
%198 /.notdef  % /AE 
198 /AE 
199 /Ccedilla 
200 /Egrave 
201 /Eacute 
202 /Ecircumflex 
203 /Edieresis 
204 /Igrave 
205 /Iacute 
206 /Icircumflex 
207 /Idieresis 
208 /.notdef
209 /Ntilde 
210 /Ograve 
211 /Oacute 
212 /Ocircumflex 
213 /Otilde 
214 /Odieresis 
%215 /.notdef  % /OE 
215 /OE 
216 /Oslash 
217 /Ugrave 
218 /Uacute 
219 /Ucircumflex 
220 /Udieresis 
221 /Ydieresis 
222 /.notdef
223 /germandbls 
224 /agrave 
225 /aacute 
226 /acircumflex 
227 /atilde 
228 /adieresis 
229 /aring 
%230 /.notdef %ae
230 /ae
231 /ccedilla 
232 /egrave 
233 /eacute 
234 /ecircumflex 
235 /edieresis 
236 /igrave 
237 /iacute 
238 /icircumflex 
239 /idieresis 
240 /.notdef
241 /ntilde 
242 /ograve 
243 /oacute 
244 /ocircumflex 
245 /otilde 
246 /odieresis 
%247 /.notdef %oe
247 /oe 
248 /oslash 
249 /ugrave 
250 /uacute 
251 /ucircumflex 
252 /udieresis 
253 /ydieresis 
254 /.notdef 
  
129 /grave 
130 /acute 
131 /circumflex 
132 /tilde 
133 /dieresis 
134 /ring 
135 /cedilla 
136 /dotlessi 
137 /macron
138 /breve
139 /dotaccent
140 /hungarumlaut
141 /ogonek
142 /caron
143 /endash
144 /emdash
145 /dagger
146 /daggerdbl
147 /bullet
148 /fi
149 /fl
150 /quotedblleft
151 /quotedblright
152 /registered
153 /trademark
154 /quotedblbase
] def
  
/cvc
{ 
( )
dup
0 
4 -1 roll
put
}BD
  
/Courier /CourierExtended DPMCS ReEncode
/ExtendedEncoding /CourierExtended FF /Encoding get def
/SymbolEncoding /Symbol FF /Encoding get def
  
/ExtendedDecoding ExtendedEncoding length dict def
ExtendedDecoding begin
0 1 ExtendedEncoding length 1 sub
{ 
dup
ExtendedEncoding exch get
exch def
}for
end
/SymbolDecoding SymbolEncoding length dict def
SymbolDecoding begin
0 1 SymbolEncoding length 1 sub
{ 
dup
SymbolEncoding exch get
exch def
}for
end
  
/BBox [0 -.25 .6 .75] def
  
/superscript
{/CourierExtended FF SE
.6667 .6667 SC
0 .2667 MO
SH
}BD
  
/diphthong
{ 
{/CourierExtended FF [.6667 0 .1786 1 0 0] MF SE}
{/CourierExtended FF [.66666667 0 0 1 0 0] MF SE}
ifelse
0 0 MO
CP TR
SH
/CourierExtended FF
[.6667 0 0 1 0 0] MF SE
.26 0 MO
SH
}BD
  
/ctrl
{/CourierExtended FF SE
.8333 .8333 SC
0 .3 MO
SH
.1371 -.3 MO
SH
}BD
  
/fraction
{/CourierExtended FF SE
.5 .5 SC
0 .6 MO
SH
.6 0 MO
SH
0 0 MO
1.2 1.2 LI
ST
}BD
  
/McsEncoding ExtendedEncoding def
McsEncoding
dup 169 /copyrightsans put
dup 176 /degree put
dup 177 /plusminus put
dup 178 /twosuper put
dup 179 /threesuper put
dup 181 /mu put
dup 185 /onesuper put
dup 188 /onefourth put
dup 189 /onehalf put
dup 198 /AE put
dup 215 /OE put
dup 230 /ae put
dup 247 /oe put
pop
  
/TcsEncoding  256 array def
32 1 94 {TcsEncoding exch dup McsEncoding exch get put} for
TcsEncoding
dup 95 /space put
dup 96 /diamond put
dup 97 /blob put
dup 98 /HT put
dup 99 /FF put
dup 100 /CR put
dup 101 /LF put
dup 102 /degree put
dup 103 /plusminus put
dup 104 /NL put
dup 105 /VT put
dup 106 /crnlr put
dup 107 /crnur put
dup 108 /crnul put
dup 109 /crnll put
dup 110 /cross put
dup 111 /scan1 put
dup 112 /scan3 put
dup 113 /scan5 put
dup 114 /scan7 put
dup 115 /scan9 put
dup 116 /tl put
dup 117 /tr put
dup 118 /tb put
dup 119 /tt put
dup 120 /vertical put
dup 121 /lessequal put
dup 122 /greaterequal put
dup 123 /pi put
dup 124 /notequal put
dup 125 /sterling put
dup 126 /periodcentered put
pop
TcsEncoding
dup 161 /radicalleft put
dup 162 /radicallefttp put
dup 163 /horizontalext put
dup 164 /integraltp put
dup 165 /integralbt put
dup 166 /verticalext put
dup 167 /bracketlefttp put
dup 168 /bracketleftbt put
dup 169 /bracketrighttp put
dup 170 /bracketrightbt put
dup 171 /bracelefttp put
dup 172 /braceleftbt put
dup 173 /bracerighttp put
dup 174 /bracerightbt put
dup 175 /braceleftmid put
dup 176 /bracerightmid put
dup 177 /sumtpleft put
dup 178 /sumbtleft put
dup 179 /sumtpvert put
dup 180 /sumbtvert put
dup 181 /sumtpright put
dup 182 /sumbtright put
dup 183 /sumrightmid put
dup 184 /questionreverse put
dup 185 /questionreverse put
dup 186 /questionreverse put
dup 187 /questionreverse put
dup 188 /lessequal put
dup 189 /notequal put
dup 190 /greaterequal put
dup 191 /integral put
dup 192 /therefore put
dup 193 /proportional put
dup 194 /infinity put
dup 195 /divide put
dup 196 /Delta put
dup 197 /gradient put
dup 198 /Phi put
dup 199 /Gamma put
dup 200 /similar put
dup 201 /approxequal put
dup 202 /Theta put
dup 203 /multiply put
dup 204 /Lambda put
dup 205 /arrowdblboth put
dup 206 /arrowdblright put
dup 207 /equivalence put
dup 208 /Pi put
dup 209 /Psi put
dup 210 /questionreverse put
dup 211 /Sigma put
dup 212 /questionreverse put
dup 213 /questionreverse put
dup 214 /radical put
dup 215 /Omega put
dup 216 /Xi put
dup 217 /Upsilon1 put
dup 218 /propersubset put
dup 219 /propersuperset put
dup 220 /intersection put
dup 221 /union put
dup 222 /logicaland put
dup 223 /logicalor put
dup 224 /logicalnot put
dup 225 /alpha put
dup 226 /beta put
dup 227 /chi put
dup 228 /delta put
dup 229 /epsilon put
dup 230 /phi put
dup 231 /gamma put
dup 232 /eta put
dup 233 /iota put
dup 234 /theta put
dup 235 /kappa put
dup 236 /lambda put
dup 237 /questionreverse put
dup 238 /nu put
dup 239 /partialdiff put
dup 240 /pi put
dup 241 /psi put
dup 242 /rho put
dup 243 /sigma put
dup 244 /tau put
dup 245 /questionreverse put
dup 246 /florin put
dup 247 /omega put
dup 248 /xi put
dup 249 /upsilon put
dup 250 /zeta put
dup 251 /arrowleft put
dup 252 /arrowup put
dup 253 /arrowright put
dup 254 /arrowdown put
pop
  
/CharStrings 61 dict def
CharStrings begin
/crnlr
{0 .25 MO
.3 .25 LI
.3 .75 LI
ST
}BD
/crnur
{0 .25 MO
.3 .25 LI
.3 -.25 LI
ST
}BD
/crnul
{.6 .25 MO
.3 .25 LI
.3 -.25 LI
ST
}BD
/crnll
{.6 .25 MO
.3 .25 LI
.3 .75 LI
ST
}BD
/cross
{0 .25 MO
.6 .25 LI
.3 .75 MO
.3 -.25 LI
ST
}BD
/scan9
{0 -.15 MO
.6 -.15 LI
ST
}BD
/scan7
{0 .05 MO
.6 .05 LI
ST
}BD
/scan5
{0 .25 MO
.6 .25 LI
ST
}BD
/scan3
{0 .45 MO
.6 .45 LI
ST
}BD
/scan1
{0 .65 MO
.6 .65 LI
ST
}BD
/tl
{.3 .75 MO
.3 -.25 LI
.6 .25 MO
.3 .25 LI
ST
}BD
/tr
{.3 .75 MO
.3 -.25 LI
0 .25 MO
.3 .25 LI
ST
}BD
/tb
{0 .25 MO
.6 .25 LI
.3 .75 MO
.3 .25 LI
ST
}BD
/tt
{0 .25 MO
.6 .25 LI
.3 -.25 MO
.3 .25 LI
ST
}BD
/vertical
{.3 .75 MO
.3 -.25 LI
ST
}BD
/radicalleft
{.3 .75 MO
.3 -.25 LI
0 .25 LI
ST
}BD
/radicallefttp
{.6 .25 MO
.3 .25 LI
.3 -.25 LI
ST
}BD
/horizontalext
{0 .25 MO
.6 .25 LI
ST
}BD
/integraltp
{.3 -.25 MO
.3 .75 .45 .75 .25 arcto pop pop pop pop
ST
.53 .67 .1 0 360 arc
fill
}BD
/integralbt
{.3 .75 MO
.3 -.25 .15 -.25 .25 arcto pop pop pop pop
ST
.08 -.17 .1 0 360 arc
fill
}BD
/verticalext
{.3 .75 MO
.3 -.25 LI
ST
}BD
/bracketlefttp
{.6 .75 MO
.3 .75 LI
.3 -.25 LI
ST
}BD
/bracketleftbt
{.3 .75 MO
.3 -.25 LI
.6 -.25 LI
ST
}BD
/bracketrighttp
{0 .75 MO
.3 .75 LI
.3 -.25 LI
ST
}BD
/bracketrightbt
{.3 .75 MO
.3 -.25 LI
0 -.25 LI
ST
}BD
/bracelefttp
{.3 -.25 MO
.3 .75 .6 .75 .5 arcto pop pop pop pop
ST
}BD
/braceleftbt
{.3 .75 MO
.3 -.25 .6 -.25 .5 arcto pop pop pop pop
ST
}BD
/bracerighttp
{.3 -.25 MO
.3 .75 0 .75 .5 arcto pop pop pop pop
ST
}BD
/bracerightbt
{.3 .75 MO
.3 -.25 0 -.25 .5 arcto pop pop pop pop
ST
}BD
/braceleftmid
{.3 .75 MO
.3 .25 .15 .25 .15 arcto pop pop pop pop
.3 -.25 MO
.3 .25 .15 .25 .15 arcto pop pop pop pop
ST
}BD
/bracerightmid
{.3 .75 MO
.3 .25 .45 .25 .15 arcto pop pop pop pop
.3 -.25 MO
.3 .25 .45 .25 .15 arcto pop pop pop pop
ST
}BD
/sumtpleft
{.6 .25 MO
.3 .25 LI
.6 -.25 LI
ST
}BD
/sumbtleft
{.6 .25 MO
.3 .25 LI
.6 .75 LI
ST
}BD
/sumtpvert
{0 .75 MO
.6 -.25 LI
ST
}BD
/sumbtvert
{0 -.25 MO
.6 .75 LI
ST
}BD
/sumtpright
{0 .25 MO
.6 .25 LI
.6 -.25 LI
ST
}BD
/sumbtright
{0 .25 MO
.6 .25 LI
.6 .75 LI
ST
}BD
/sumrightmid
{0 .75 MO
.3 .25 LI
0 -.25 LI
ST
}BD
/arrowdblboth
{.1 .1 MO
.5 .1 LI
.1 .25 MO
.5 .25 LI
.175 .325 MO
0 .175 LI
.175 .025 LI
.425 .325 MO
.6 .175 LI
.425 .025 LI
ST
}BD
/arrowdblright
{.1 .1 MO
.5 .1 LI
.1 .25 MO
.5 .25 LI
.425 .325 MO
.6 .175 LI
.425 .025 LI
ST
}BD
/arrowleft
{0 .25 MO
.6 .25 LI
.15 .4 MO
0 .25 LI
.15 .1 LI
ST
}BD
/arrowup
{.3 .5 MO
.3 0 LI
.15 .35 MO
.3 .5 LI
.45 .35 LI
ST
}BD
/arrowright
{0 .25 MO
.6 .25 LI
.45 .4 MO
.6 .25 LI
.45 .1 LI
ST
}BD
/arrowdown
{.3 .5 MO
.3 0 LI
.15 .15 MO
.3 0 LI
.45 .15 LI
ST
}BD
/blob
{0 -.25 TR
CharWidth 1 SC
6 10
false
[6 0 0 -10 0 10]
{<55 AA>}
imagemask
}BD
/questionreverse
{/CourierExtended FF SE
.6 0 MO
-1 1 SC
(?) SH
}BD
/onesuper {(1) superscript}BD
/twosuper {(2) superscript}BD
/threesuper {(3) superscript}BD
/AE {(E) (A) true diphthong}BD
/OE {(E) (O) false diphthong}BD
/ae {(e) (a) false diphthong}BD
/oe {(e) (o) false diphthong}BD
/HT {(T) (H) ctrl}BD
/FF {(F) (F) ctrl}BD
/CR {(R) (C) ctrl}BD
/LF {(F) (L) ctrl}BD
/NL {(L) (N) ctrl}BD
/VT {(T) (V) ctrl}BD
/onehalf {(2) (1) fraction}BD
/onefourth {(4) (1) fraction}BD
end
  
/BuildCharDict 3 dict def
/BuildChar
{ 
BuildCharDict begin
/char exch def
/fontdict exch def
/charname fontdict /Encoding get char get def
fontdict begin
CharWidth 0
FontBBox aload pop
setcachedevice
CharStrings charname known
{.05 SW CharStrings charname get
exec
} 
{ExtendedDecoding charname known
{/CourierExtended FF SE
ExtendedDecoding charname get
} 
{/Symbol FF SE
.8 .8 SC
SymbolDecoding charname get
} 
ifelse
cvc
0 0 MO
SH
} 
ifelse
end
end
}BD
  
/Courier-MCS 11 dict dup begin
/FontType 3 def
/FontBBox BBox def
/BuildChar /BuildChar load def
/Encoding McsEncoding def
/CharWidth .6 def
/FontMatrix [1 0 0 1 0 0] def
/UnderlineThickness 75 def
/UnderlinePosition 250 def
/StrikethroughThickness 75 def
/StrikethroughPosition -275 def
end definefont pop
  
/Courier-TECH 11 dict dup begin
/FontType 3 def
/FontBBox BBox def
/BuildChar /BuildChar load def
/Encoding TcsEncoding def
/CharWidth .6 def
/FontMatrix [1 0 0 1 0 0] def
/UnderlineThickness 75 def
/UnderlinePosition 250 def
/StrikethroughThickness 75 def
/StrikethroughPosition -275 def
end definefont pop
%%EndProlog
 /Helvetica-Bold /Helvetica-Bold-DPMCS DPMCS ReEncode /Helvetica /Helvetica-DPMCS DPMCS ReEncode% SPD (7*9") 'software' logo.
% Aidan Killian ESDC Galway 28/05/86.
/LOGO7A {
save						% Save current environment

74.0 74.0 translate				% Translate for 7"*9"
0.8 0.8 scale					% Scale for 7"*9"

/digital-font /Helvetica-Bold findfont 
[35 34 div .65 mul 0 0 .75 0 0] makefont def

/box-width 35 34 div .405 mul def
/box-pitch box-width .85 div def

/digital-box { 
  gsave 
    box-pitch box-width sub 2 div -.225 rmoveto
    box-width 0 rlineto 
    0 1 rlineto box-width neg 0 rlineto 
    closepath fill 
  grestore 
  gsave
    dup stringwidth pop box-pitch exch sub 2 div 0 rmoveto 
    1 setgray 
    show
  grestore
  box-pitch 0 rmoveto
} def 

/digital_logo {
  % draws digital logo with left baseline point at current point with
  % specified height using current color for boxes and white letters 
  % and moves current point in x direction by about 3.433 times height

  dup scale 
  digital-font setfont 
  0 1 6 {(digital) exch 1 getinterval digital-box} for 
} def 

/sw 1 def					% Stroke width / 2

/std 130 def					% Start Displ.

/bl -10 def					% Char Levels
/cbl bl sw add def
/ol bl 18.4 add def
/xl bl 36.8 add def
/cxl xl sw sub def
/wl xl sw add sw add def
/tl bl 59.5 add def
/ctl tl sw sub def
/dl xl 10.5 add def
/rll bl 14 sub def

/cr ol bl sub sw sub def			% Sub-char Radii
/s1r 10 def
/s2r 8 def
/fr 9.1 def
/rr 12.4 def

/el bl 19.3 add def				% Sub-char Levels
/e2l bl 10.3 add def
/s1l cbl s1r add def
/s2l cxl s2r sub def
/s3l bl 19.8 add def

/sd std s1r add sw add def			% Char Displ.
/od std 42.5 add def
/fd std 66 add def
/td std 86.5 add def
/wd std 102 add def
/ad std 168 add def
/rd std 194 add def
/ed std 221.3 add def
/end cr cr add ed add def

/f2d fd 6 sub def				% Sub-char Displ.
/t2d td 7.7 sub def
/w2d wd 26 add def
/w3d wd 52 add def
/a2d ad cr add 0.4 sub def

/dsz 15.9 def
/bsw 18 def
/bd wd 365.5 add def				% modified for 7"*9"

sw sw add setlinewidth
} def
/LOGO7B {
newpath
sd s2l s2r 0 180 arc 
sd s2r sub s2l 5 sub sd 3.6 sub s3l 1 add sd s3l curveto 
sd 3.6 add s3l 1 sub sd s1r add s1l 5 add sd s1r add s1l curveto 
sd s1l s1r 0 180 arcn stroke

od ol cr 0 360 arc stroke

fd cbl moveto 
fd ctl td ctl fr arcto pop pop pop pop 
f2d cxl moveto 
fd fr add cxl lineto stroke

td bl 1 add moveto 
td tl lineto 
t2d cxl moveto 
td fr add cxl lineto stroke

gsave
  td cbl moveto 
  td xl lineto 
  ad xl lineto 
  ad cbl lineto clip newpath

  wd xl moveto 
  wd cbl lineto 
  w2d wl lineto 
  w2d cbl lineto 
  w3d wl lineto stroke
grestore

gsave
  a2d bl moveto 
  a2d xl lineto 
  wd xl lineto 
  wd bl lineto clip newpath

  ad ol cr 0 365 arc stroke
grestore

gsave
  a2d sw add cbl moveto 
  a2d sw sub cbl lineto 
  ad ol cr 300 60 arc 
  a2d sw sub xl lineto 
  a2d sw add xl lineto clip newpath

  a2d cbl moveto 
  a2d xl lineto stroke
grestore

rd cbl moveto 
rd xl lineto 
rd cbl moveto 
rd cxl ed cxl rr arcto pop pop pop pop stroke

gsave
  rd bl moveto 
  rd xl lineto 
  end xl lineto 
  end el sw sub lineto
  ed el sw sub lineto 
  ed e2l lineto 
  end e2l lineto 
  end bl lineto clip newpath

  ed ol cr 0 360 arc 
  ed cr sub el moveto 
  ed cr add el lineto stroke
grestore

gsave
  wd sw sub dl moveto dsz digital_logo
grestore

bsw setlinewidth

wd sw sub rll moveto 
bd rll lineto stroke

restore						% Restore previous environment
} def
/LOGO7 {LOGO7A LOGO7B} def

 save
%%Page: 1 1

0 531.04 MO 10.00 /Courier-MCS DPT
 /save-pc$postscript-graphic save def 
164.38 529.06 TR 
 0 77.70 382.56 512.00 div 96.00 mul  sub  2  div  TR 382.56 512.00 div 382.56 512.00 div  SC 
0.00 -1 mul  526.00 -1 mul  TR 
 /showpage {} def /initmatrix {} def /initgraphics {} def /initclip {} def /erasepage {} def /copypage {} def /exitserver {} def /letter {} def /note {} def /legal {} def
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Cricket Draw 1.1
%%Title:SPD8TOP.ps
%%CreationDate:11/11/88   3:43 PM
%%DocumentFonts: Helvetica
%%BoundingBox:0 526 512 622 
%%Pages:0
%%EndComments
/vmstate save def
/$cricket 210 dict def
$cricket begin 1 -1 scale
0 -622  translate
2 setlinecap
/d /def load def
/b {bind d}bind d
/l {load d}b
/e /exch l
/x {e d}b
/C /closepath l
/CP /currentpoint l
/SH /show l
/g /gsave l
/G /grestore l
/i /if l
/I /ifelse l
/v /getinterval l
/V /putinterval l
/W /stringwidth l
/SG /setgray l
/N /newpath l
/M /moveto l
/L /lineto l
/R /rlineto l
/T /translate l
/D /dup l
/* /mul l
/+ /add l
/- /sub l
/? /div l
/ma {* +}b 
/h {D * e D ma sqrt}d
systemdict D /setpacking known D {/packstate currentpacking d D setpacking}i /pack? x
begin /settransfer load /setscreen load end 
/setscreen x /settransfer x
/dt [ currenttransfer ] cvx d 
/ds [ currentscreen D [ e ] cvx /devSpot x ] cvx d 
/jp {e [ 3 1 roll aload pop counttomark -1 roll aload pop ] cvx}b 
/settransfer {dt jp settransfer}b 
/macvec dup where not { 256 array d 
macvec 0 StandardEncoding
0 128 getinterval putinterval
macvec 16#27 /quotesingle put
macvec 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Aacute /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Agrave
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
macvec 128 128 v astore pop}{pop pop}I
/ad {+ d}b 
/sd {- d}b 
/td {* d}b 
/dd {? d}b
/c {2 ? e 2 ? e}b 
/n0 {D 0 eq {pop}}b
/m1 matrix d /m2 matrix d /m3 matrix d
/ct 0 d 
/s+ 0 d 
/po 0 d 
/ts 40 string d
/s1 (|______) d
ts 0 s1 V
/sp ( ) d
/SM {/m3 m3 currentmatrix d}b 
/RM {m3 setmatrix}b 
/dpi 72 0 matrix defaultmatrix dtransform h d
/inch {72 *}b
/cm {28.3465 *}b
/pi 3.1415923 d
/fs 256 string d 
/sh {m1 m2 copy 2 3 -1 roll sin put m2 concat}b 
/fc {T n0 {rotate}I scale n0 {sh}I}b 
/a {/ea x /sa x SM -1 * scale 0 0 1 sa ea 2 copy gt {arcn}{arc}I RM}b 
/cn {SM T x1 y1 scale 0 0 1 ct 90 * D 90 + arc /ct ct 1 ad RM}b 
/rr {/y1 x /x1 x /ct 0 d c y1 - /yr x x1 - /xr x N xr yr cn xr neg yr cn xr neg yr neg cn xr yr neg cn C}b 
/dg 
{/lc x clip rotate T /dy x /dx x
0 eq {N 
1 eq {1 10 lc ? 10{log dy * 0 e neg M dx 0 R}for lc 10 gt{dy 0 e neg M dx 0 R}i}
{lc 1 eq {0 0 e neg M dx 0 R}{/st dy lc 1 - dd 0 1 lc 1 - {st * 0 e neg M dx 0 R}for}I}I
stroke}
{1 eq {/st 0 d /inc 10 lc 1 + dd dx dy lt {/rd dx d}{/rd dy d}I
1 1 lc {/di st 1 + log 10 log ? rd td N dx di - dy di - 0 360 a C stroke /st st inc ad}for} 
{dx dy lt {/st dx lc dd}{/st dy lc dd}I lc {N dx dy 0 360 a C stroke /dx dx st sd /dy dy st sd}repeat} I
}I}b
/sb {/ea x /ia x /sa x /yr x /xr x ea sa lt{/ia ia neg d}i N sa ia ea{D /x1 e cos xr td /y1 e sin yr * neg d x1 y1 M 0 0 L}for}b
/bm {/y1 x /x1 x bitgray SG x1 y1 /md where {pop md /invertflag get not}{true}I 
[x1 0 0 y1 0 0] {currentfile picstring readhexstring pop}imagemask}b
/c1 .166667 d /c2 .833333 d /c3 .5 d
/p3 {+ c3 *}b 
/dc{/y2 x /x2 x x0 c1 * x1 c2 ma y0 c1 * y1 c2 ma x1 c2 * x2 c1 ma y1 c2 * y2 c1 ma x1 x2 p3 y1 y2 p3 curveto}b 
/mp {/x0 x1 d /y0 y1 d /x1 x2 d /y1 y2 d}b
/SPOLY_INIT
{/SPOLY_SAVE save d /cls x
/M {2 copy /y0 x /x0 x moveto /M /moveto load d}d
/L {/y1 x /x1 x x0 x1 p3 y0 y1 p3
cls {/yy y1 d /xx x1 d /C {mp xx yy dc systemdict /closepath get exec}d M}
{lineto}I /L {{dc mp}stopped {/L {pop pop}d /noerr false d}i}d}d}d
/SPOLY_END {SPOLY_SAVE restore}b
/ah {g 2 copy T 3 -1 roll - 3 1 roll e - atan rotate os 0 M hl hw R 0 hw 2 * neg R C fill G}b
/da 
{g stroke G 
g currentlinewidth D -10 * D /hl x -2 ? /os x 2 * /hw x /bp x /ep x
.2 setlinewidth 0 setlinejoin 
g flattenpath {}{}{}{} pathforall 
count 8 eq {8 4 roll}i
count 8 gt {count 4 roll mark count 8 - 1 roll cleartomark}i 
count 6 eq {6 2 roll 2 copy 8 2 roll}i
count 4 eq {4 copy}i G
N bp {4 2 roll ah}{pop pop pop pop}I ep {ah}{clear}I G}b 
/tp {sm0 transform}b 
/sfp {} d 
/op {{tp moveto}{tp lineto}{3{tp 6 2 roll}repeat curveto}{C} pathforall sfp stroke}b 
/sm0 matrix d /sm1 matrix d
/so 
{SG /eg x /tg x /yt x /xt x 
xt 0 ne yt 0 ne or {
xt abs yt abs gt {/tt xt abs d}{/tt yt abs d}I
tt 144 gt {/ct dpi 2 dd /sfp{g eofill G}d}
{tt 72 gt {/ct dpi 4 dd /sfp{g eofill G}d}
{/ct dpi 4 dd}I}I
/ig tg eg - ct ? neg d
/x1 xt ct ? neg d /y1 yt ct dd 
1 0 0 1 xt yt sm0 astore pop 
1 0 0 1 x1 y1 neg sm1 astore pop
g op G
1 1 ct{g ig * tg + SG sm0 D sm1 e concatmatrix pop op G}for}i}b
/css {T 0 0 M xsp 0 32 Txt widthshow}b
/sc 
{g /xsp x /tg x /eg x /sg x /y1 x /x1 x /Txt x
/sst dpi 4 dd /y2 y1 sst dd /x2 x1 neg sst dd
eg sg eq {/sg sg .001 sd}i
/ig eg sg - sst ? neg d 
g tg SG x1 y1 neg css 
eg ig + ig sg {SG x2 y2 css}for G 
x2 y2 css G}b 
/gbb {pathbbox /y1 x /x1 x /y2 x /x2 x /x3 x1 x2 sd /y3 y1 y2 sd}b 
/radf 
{/dn dpi 300 ? 8 * 24 ad /ig rg 255 ? dn dd
sg 255 ? SG eoclip gbb 
x2 x3 2 ? + y2 y3 2 ? + T N
x3 y3 h 2 ? D dn ? neg 1 
{0 0 3 -1 roll 0 360 arc C fill currentgray ig + SG}for}b
/dof 
{/ff x 
eoclip 180 - rotate gbb
x1 y1 T 180 rotate x3 y3 scale
0 1 255 {fs e D 255 ? ff rg * sg + round cvi put}for
1 256 8 [1 0 0 256 0 0] fs image}b
/gft {radf {{} dof}{{1 e - 9 * 1 + log 1 e -}dof}}b
/df 
{g 2 copy eq {SG clear fill}{255 * e 255 * e 1 index - /rg x /sg x /gft load e get exec}I G}b 
/oc
{/tl x /ju x /di 0 d 
g flattenpath
{/y1 x /x1 x}{/y2 x /x2 x /dx x2 x1 sd /dy y2 y1 sd /di dx D * dy D ma sqrt di ad /x1 x2 d /y1 y2 d}
{}{/y2 x /x2 x /dx x2 x1 sd /dy y2 y1 sd /di dx D * dy D ma sqrt d}pathforall
ju 0 eq{/po 0 store}i
ju 1 eq{/po di tl - 2 ? store}i
ju 2 eq{/po di tl - store}i G}b
/pt {/FM true d /os x /sr x /os os sr 0 1 v W pop 2 ? ad /pd 0 d /sl os d /ct 0 d g flattenpath {mtp}{ltp}{ctp}{cpp}pathforall G}b
/mtp {/y1 x /x1 x /x2 x1 d /y2 y1 d /ovr FM {os /FM false d}{0}I d x1 y1 transform /cpy x /cpx x}b
/ltp 
{/x3 x1 d /y3 y1 d /y1 x /x1 x /dx x1 x3 sd /dy y1 y3 sd /di dx D * dy D ma sqrt d 
/di 0 ne
{/dsx dx di ? ovr td /dsy dy di ? ovr td x3 dsx + y3 dsy + transform
/cpy x /cpx x /pd pd di ad {sl pd le {ct sr length lt{sch}{exit}I}{/ovr sl pd sd exit}I}loop}i}b
/ctp {}b 
/cpp {x2 y2 ltp x2 y2 mtp}b 
/sch 
{/ch sr ct 1 v d /ct ct 1 ad
/cw ch W pop 2 dd 
g cpx cpy itransform T dy dx atan rotate cw neg 0 M ch SH
ct sr length lt{sr ct 1 v W pop 2 ? 0 rmoveto}i
CP transform /cpy x /cpx x G
/sl sl cw ad /po po cw 2 ma store ct sr length lt{/sl sl sr ct 1 v W pop 2 ? ad}i}b
/cpd {/newslots x D length newslots + dict D 3 1 roll begin {1 index /FID ne {def}i}forall pop pop end}b
/of 
{/ui 0 d 
/pw 1000 24 dd 
/nn x 
/bn x 
ui 0 eq 
{/ui bn findfont
dup /UniqueID known 
{/UniqueID get 1 add}{pop 1}ifelse
def} if
/bfd bn findfont def 
/ct bfd maxlength 1 ad 
bfd /UniqueID known not
{/ct ct 1 ad} if
/ofd ct dict def 
bfd
{ exch dup /FID ne
{exch ofd 3 1 roll put}
{pop pop} ifelse
}forall
ofd /FontName nn put
ofd /PaintType 2 put
ofd /StrokeWidth pw put
ofd /UniqueID ui put
nn ofd definefont pop}b
/uf 
{20 dict begin
/ui x 
e /BaseFont e findfont d
ui 0 eq 
{/ui BaseFont D /UniqueID known 
{/UniqueID get 1 +}{pop 1}I d}i
/FontType 3 d
/Upos BaseFont /FontInfo 2 copy known
{get /UnderlinePosition 2 copy known
{get}{pop pop -100 }I}{ pop pop -100 }I d
/Uwid BaseFont /FontInfo 2 copy known
{get /UnderlineThickness 2 copy known
{get}{pop pop 50}I}
{pop pop 50}I d
/FontMatrix BaseFont /FontMatrix get d
/FontBBox BaseFont /FontBBox get
D 1 get Upos gt {D 1 Upos put}i d
/Encoding BaseFont /Encoding get d
/theChar 1 string d
/BuildChar
{e begin
theChar 0 3 -1 roll put
BaseFont 1000 scalefont setfont
theChar W FontBBox setcachedevice
0 0 M
theChar show
0 Upos rmoveto 0 Upos L
Uwid setlinewidth stroke
end}d
currentdict 
end
definefont pop}b
/ns {g CP m3 currentmatrix nulldevice setmatrix T 0 0 M Txt CP pop G}b 
/ft {/ftsave save d CP 3 1 roll + e T 0 0 M /show /myshow l Txt ftsave restore}b 
/ls {/Txt x 0 ft}b 
/cs {/Txt x ns 2 ? neg ft}b 
/rs {/Txt x ns neg ft}b 
/slp {/sproc x /sr x 0 1 sr length 1 - {sr e 1 v sproc}for}b 
/ss 
{/Txt x /fsave save d
CP 2 copy T 0 0 M 
/ffsave save d pop - /lw x ns /tw x /wsp lw tw sd /nsp 0 d
/show {nsp e {sp eq {1 +}i}slp /nsp x}b 
Txt 0 nsp 0 gt {wsp nsp ? +}i ffsave restore /s+ x
/myshow load D systemdict /show get ne
{D D length 1 - get cvlit /charshadow eq {[ e aload pop e pop s+ e ] cvx}i}
{pop {s+ 0 32 4 -1 roll widthshow}}I
/show x Txt fsave restore}b
/cf{D /fn x length 7 + string /ts x ts 0 s1 V ts 7 fn V /fnm ts cvn d 
FontDirectory fnm known not {fn cvn findfont 0 cpd /nfd x nfd D /FontName fnm put /Encoding macvec put fnm nfd definefont pop}i}b
 
/JoinProcs {jp}d
/fixcoordinates {fc}d
/doarc {a}d
/doroundrect {rr}d
/dograte {dg}d
/dorgrate {drg}d
/pathoffset {po}d
/pathtext {pt}d
/dostarburst {sb}d
/dobitmap {bm}d
/strokearrow {da}d
/shadow {so}d
/charshadow {sc}d
/fountain {df}d
/offsetcalc {oc}d
/MakeOutlineFont {of}d
/MakeUnderlineFont {uf}d
/leftshow {ls}d
/rightshow {rs}d
/centershow {cs}d
/fullshow {ss}d
/coordinatefont {cf}d
 
 
%-----------------------------------
%Encode PS Fonts to match Mac Fonts
(Helvetica) coordinatefont
%-----------------------------------

%----- Begin Main Program -----%

gsave % Line
0.000 1  1  0.000 257.501 84.999  fixcoordinates
newpath
-250.501 0.000  moveto
250.501 0.000 lineto
6.000 setlinewidth 0 setgray stroke
grestore

gsave  % Text Block
0.000 1  -1  0.000 108.999 47.499  fixcoordinates
/myshow /show load def
0 setgray 
-106 25 moveto
/|______Helvetica findfont 24 scalefont setfont
{
(Software) show
} leftshow
-106 0 moveto
{
(Product) show
} leftshow
-106 -25 moveto
{
(Description) show
} leftshow
grestore

%------ End Main Program ------%

end
vmstate restore

%%Trailer

%%Pages:1


 save-pc$postscript-graphic restore

0 512.54 MO 168.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (PRODUCT NAME:) 3.60 DPJ
0 512.54 MO 254.59 0 RM 12.00 /Helvetica-Bold-DPMCS DPT
 (PDP-11) 35.00 DPJ 3.60 0 RM (DATATRIEVE/VAX,) 35.00 DPJ 62.81 0 RM (SPD) 35.00 DPJ 3.60 0 RM (25.14.18) 35.00 DPJ
0 498.54 MO 254.59 0 RM (Version 3.3) 4.80 DPJ
0 474.79 MO 168.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (DESCRIPTION) 4.80 DPJ
0 459.04 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (PDP-11 DATATRIEVE/VAX is an interactive query, report, and data maintenance system) 4.83 DPJ
0 449.04 MO 168.00 0 RM (designed for the less sophisticated computer user. DATATRIEVE/VAX runs under the VMS) 3.89 DPJ
0 439.04 MO 168.00 0 RM (Operating System in conjunction with VAX-11 RSX. DATATRIEVE/VAX utilizes the RMS) 5.08 DPJ
0 429.04 MO 168.00 0 RM (\(Record Management Services\) to access data contained in disk files of sequential, indexed,) 3.32 DPJ
0 419.04 MO 168.00 0 RM (or relative organization. DATATRIEVE/VAX provides facilities for selective data retrieval, sort-) 3.09 DPJ
0 409.04 MO 168.00 0 RM (ing, formatting, updating, and report generation without the need for programming.) 3.60 DPJ
0 393.04 MO 168.00 0 RM (Record and domain \(file\) definitions entered in DATATRIEVE/VAX are stored in Data) 6.17 DPJ
0 383.04 MO 168.00 0 RM (Dictionaries shared by DATATRIEVE/VAX users. Dictionaries can also be used to store) 5.21 DPJ
0 373.04 MO 168.00 0 RM (frequently used sequences of commands to be recalled and processed later. Commands are) 3.28 DPJ
0 363.04 MO 168.00 0 RM (provided to list the contents of the Data Dictionary, to delete entries, and to control access to) 3.14 DPJ
0 353.04 MO 168.00 0 RM (individual entries in the Data Dictionary. A Dictionary Compression utility is provided to) 5.36 DPJ
0 343.04 MO 168.00 0 RM (compress the Data Dictionary index file.) 3.60 DPJ
0 327.29 MO 168.00 0 RM (DATATRIEVE/VAX enables the user to define domains that cross RMS file definitions and) 4.15 DPJ
0 317.29 MO 168.00 0 RM (subset record definitions.) 3.60 DPJ
0 301.29 MO 168.00 0 RM (DATATRIEVE/VAX provides an Application Design Tool \(ADT\) to assist the novice user in) 4.15 DPJ
0 291.29 MO 168.00 0 RM (creating domain and record definitions. The ADT uses an interactive dialogue technique to) 4.07 DPJ
0 281.29 MO 168.00 0 RM (guide the user through the data definition process. It creates an indirect command file that is) 3.29 DPJ
0 271.29 MO 168.00 0 RM (then processed to actually update the DATATRIEVE/VAX Data Dictionary.) 3.60 DPJ
0 255.54 MO 168.00 0 RM (The DATATRIEVE/VAX report writer provides easy-to-use commands to control the following) 3.28 DPJ
0 245.54 MO 168.00 0 RM (report functions:) 3.60 DPJ
0 229.79 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 229.79 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Report name, date, and page numbering) 3.60 DPJ
0 214.29 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 214.29 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Page width and length specification) 3.60 DPJ
0 198.54 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 198.54 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Detail line specification) 3.60 DPJ
0 182.79 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 182.79 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Multiple control break specification with automatic totaling at any level) 3.60 DPJ
0 167.04 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 167.04 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Multiple report sections) 3.60 DPJ
0 151.04 MO 168.00 0 RM (DATATRIEVE/VAX report commands can be freely intermixed with other DATATRIEVE/VAX) 3.54 DPJ
0 141.04 MO 168.00 0 RM (commands.) 3.54 DPJ
0 98.54 MO 505.28 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (July) 339.98 DPJ 2.70 0 RM (1989) 339.98 DPJ
0 88.54 MO 487.99 0 RM (BH-H113S-TE) 339.98 DPJ
0 78.54 MO
0 68.54 MO
0 58.54 MO
0 48.54 MO
0 38.54 MO
0 28.54 MO 168.00 0 RM %%LOGO7
 LOGO7
0 28.54 MO 0 -78.00 RM
 showpage
 restore
 save
%%Page: 2 2

0 602.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (PDP-11) 105.97 DPJ 2.70 0 RM (DATATRIEVE/VAX,) 105.97 DPJ 206.55 0 RM (SPD) 105.97 DPJ 2.70 0 RM (25.14.18) 105.97 DPJ
0 592.54 MO 60.00 0 RM (Version 3.3) 3.60 DPJ
0 560.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (DATATRIEVE/VAX uses simple English language-like commands for data retrieval, modifica-) 3.32 DPJ
0 550.54 MO 60.00 0 RM (tion, and display. Prompting is automatic for both command and data entry. The major) 5.25 DPJ
0 540.54 MO 60.00 0 RM (commands are as follows:) 3.60 DPJ
0 525.79 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 525.79 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (HELP provides a summary of each DATATRIEVE command.) 3.60 DPJ
0 510.79 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 510.79 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (READY identifies a domain for processing and controls the access mode to the appro-) 3.63 DPJ
0 500.79 MO 80.16 0 RM (priate file.) 3.60 DPJ
0 485.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 485.54 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (FIND establishes a collection \(subset\) of records contained in either a domain or a) 4.86 DPJ
0 475.54 MO 80.16 0 RM (previously established collection based on a Boolean expression.) 3.60 DPJ
0 460.29 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 460.29 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (SORT reorders a collection of records in either an ascending or descending sequence) 3.80 DPJ
0 450.29 MO 80.16 0 RM (based upon the contents of one or more fields in those records.) 3.60 DPJ
0 435.29 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 435.29 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (PRINT prints one or more fields of one or more records. Output can be optionally) 5.08 DPJ
0 425.29 MO 80.16 0 RM (directed to a line printer or disk file. Format control can be specified. A column header is) 3.01 DPJ
0 415.29 MO 80.16 0 RM (generated automatically.) 3.60 DPJ
0 400.04 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 400.04 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (SELECT identifies a single record in a collection for subsequent individual processing.) 3.92 DPJ
0 384.79 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.92 DPJ
0 384.79 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (MODIFY alters the values of one or more fields for either the selected record or all) 4.58 DPJ
0 374.79 MO 80.16 0 RM (records in a collection. Replacement values are prompted for by name.) 3.60 DPJ
0 359.79 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 359.79 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (STORE creates a new record. The value for each field contained in the record is) 5.26 DPJ
0 349.79 MO 80.16 0 RM (prompted for by name.) 3.60 DPJ
0 334.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 334.54 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (ERASE removes one or more records corresponding to the appropriate domain.) 3.60 DPJ
0 319.29 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 319.29 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (FOR executes a subsequent command once for each record in a collection providing a) 3.51 DPJ
0 309.29 MO 80.16 0 RM (simple looping facility.) 3.60 DPJ
0 294.29 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 294.29 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (EDIT invokes an editor \(EDT\) that inserts, replaces, or deletes text from procedures) 4.60 DPJ
0 284.29 MO 80.16 0 RM (defined in the Data Dictionary.) 3.60 DPJ
0 269.04 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 269.04 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (DROP allows the user to drop selected records from a collection.) 3.60 DPJ
0 254.04 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 254.04 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (DECLARE defines global and local variables to be used within a DATATRIEVE query.) 3.85 DPJ
0 238.79 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.85 DPJ
0 238.79 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (DEFINE provides a consistent mechanism for creating domain, record, procedure, table,) 3.17 DPJ
0 228.79 MO 80.16 0 RM (and view definitions in the Data Dictionary.) 3.60 DPJ
0 213.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 213.54 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (REDEFINE - Functions similarly to DEFINE, but an implicit delete is performed on the) 3.86 DPJ
0 203.54 MO 80.16 0 RM (previous version of the dictionary object.) 3.60 DPJ
0 188.04 MO 60.00 0 RM (DATATRIEVE/VAX provides lexical functions consisting of the following four groups:) 3.60 DPJ
0 173.29 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 173.29 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Functions using numeric data:) 3.60 DPJ
0 158.04 MO 80.16 0 RM (-) 3.60 DPJ
0 158.04 MO 95.28 0 RM (FN$ABS - Calculates absolute value of input) 3.60 DPJ
0 143.04 MO 80.16 0 RM (-) 3.60 DPJ
0 143.04 MO 95.28 0 RM (FN$MOD - Calculates value of input according to specified modulus) 3.60 DPJ
0 127.79 MO 80.16 0 RM (-) 3.60 DPJ
0 127.79 MO 95.28 0 RM (FN$SIGN - Indicates the sign of a number) 3.60 DPJ
0 112.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 112.54 MO 80.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Functions using alphanumeric data:) 3.60 DPJ
0 97.54 MO 80.16 0 RM (-) 3.60 DPJ
0 97.54 MO 95.28 0 RM (FN$STR__EXTRACT - Extracts substring from input using a default edit string of 30) 3.21 DPJ
0 87.54 MO 95.28 0 RM (characters.) 3.21 DPJ
0 72.29 MO 80.16 0 RM (-) 3.21 DPJ
0 72.29 MO 95.28 0 RM (FN$STR__LOC - Calculates starting position of substring in input) 3.60 DPJ
0 57.04 MO 80.16 0 RM (-) 3.60 DPJ
0 57.04 MO 95.28 0 RM (FN$UPCASE - Changes characters in string to uppercase) 3.60 DPJ
0 26.54 MO 246.50 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (2) 3.60 DPJ
 showpage
 restore
 save
%%Page: 3 3

0 602.54 MO 168.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (PDP-11) 105.97 DPJ 2.70 0 RM (DATATRIEVE/VAX,) 105.97 DPJ 206.55 0 RM (SPD) 105.97 DPJ 2.70 0 RM (25.14.18) 105.97 DPJ
0 592.54 MO 168.00 0 RM (Version 3.3) 3.60 DPJ
0 560.54 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 560.54 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Functions using dates:) 3.60 DPJ
0 543.29 MO 188.16 0 RM (-) 3.60 DPJ
0 543.29 MO 203.28 0 RM (FN$JULIAN - Calculates Julian date of input) 3.60 DPJ
0 526.04 MO 188.16 0 RM (-) 3.60 DPJ
0 526.04 MO 203.28 0 RM (FN$YEAR - Extracts year part of input) 3.60 DPJ
0 509.04 MO 188.16 0 RM (-) 3.60 DPJ
0 509.04 MO 203.28 0 RM (FN$MONTH - Extracts month part of input) 3.60 DPJ
0 491.79 MO 188.16 0 RM (-) 3.60 DPJ
0 491.79 MO 203.28 0 RM (FN$DAY - Extracts day part of input) 3.60 DPJ
0 474.54 MO 188.16 0 RM (-) 3.60 DPJ
0 474.54 MO 203.28 0 RM (FN$TIME - Extracts time part of input) 3.60 DPJ
0 457.29 MO 188.16 0 RM (-) 3.60 DPJ
0 457.29 MO 203.28 0 RM (FN$HOUR - Extracts hour part of input) 3.60 DPJ
0 440.04 MO 188.16 0 RM (-) 3.60 DPJ
0 440.04 MO 203.28 0 RM (FN$MINUTE - Extracts minute part of input) 3.60 DPJ
0 422.79 MO 188.16 0 RM (-) 3.60 DPJ
0 422.79 MO 203.28 0 RM (FN$SECOND - Extracts second part of input) 3.60 DPJ
0 405.54 MO 188.16 0 RM (-) 3.60 DPJ
0 405.54 MO 203.28 0 RM (FN$HUNDREDTH - Extracts hundredth-of-a-second part of input) 3.60 DPJ
0 388.29 MO 188.16 0 RM (-) 3.60 DPJ
0 388.29 MO 203.28 0 RM (FN$DATE - Converts a date string to an 8-byte data value) 3.60 DPJ
0 371.29 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 371.29 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (Function relating to processes:) 3.60 DPJ
0 354.04 MO 188.16 0 RM (-) 3.60 DPJ
0 354.04 MO 203.28 0 RM (FN$DCL - Allows you to spawn directly from your main DATATRIEVE process to a) 3.58 DPJ
0 344.04 MO 203.28 0 RM (specified Digital Command Language \(DCL\) command.) 3.60 DPJ
0 326.79 MO 168.00 0 RM (In addition to the simple data manipulation commands, a number of more complex commands) 2.83 DPJ
0 316.79 MO 168.00 0 RM (are available for the advanced user. These commands, such as REPEAT, BEGIN-END, and) 3.44 DPJ
0 306.79 MO 168.00 0 RM (IF-THEN-ELSE, can be used to combine two or more DATATRIEVE/VAX commands into a) 3.78 DPJ
0 296.79 MO 168.00 0 RM (single compound command. These, in turn, can be stored in the Data Dictionary as proce-) 3.92 DPJ
0 286.79 MO 168.00 0 RM (dures for invocation by less experienced users.) 3.60 DPJ
0 269.54 MO 168.00 0 RM (DATATRIEVE/VAX provides a full set of arithmetic operators \(addition, subtraction, multiplica-) 2.99 DPJ
0 259.54 MO 168.00 0 RM (tion, division, and negation\) and a set of statistical operators \(total, average, maximum,) 5.19 DPJ
0 249.54 MO 168.00 0 RM (minimum, and count\), and provides data types used in the FORTRAN, COBOL, DIBOL, and) 3.45 DPJ
0 239.54 MO 168.00 0 RM (BASIC-PLUS-2 languages. An additional data type is provided that supports time and recog-) 3.36 DPJ
0 229.54 MO 168.00 0 RM (nizes various date formats.) 3.60 DPJ
0 212.29 MO 168.00 0 RM (DATATRIEVE/VAX provides data encoding, decoding and input validation capabilities through) 2.92 DPJ
0 202.29 MO 168.00 0 RM (tables stored in the Data Dictionary. The user can also check data validity by storing valida-) 3.49 DPJ
0 192.29 MO 168.00 0 RM (tion criteria in the record definition.) 3.60 DPJ
0 175.04 MO 168.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (SOURCE CODE INFORMATION) 3.60 DPJ
0 157.79 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (The following source code modules are provided on all magnetic distribution media:) 3.60 DPJ
0 138.79 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 138.79 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (MESSAGE TEXT) 3.60 DPJ
0 121.54 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 121.54 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (DATATRIEVE DICTIONARY) 3.60 DPJ
0 104.29 MO 168.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (\223) 3.60 DPJ
0 104.29 MO 188.16 0 RM 9.00 /Helvetica-DPMCS DPT
 (OBJECT DEFINITION) 3.60 DPJ
0 87.04 MO 188.16 0 RM (-) 3.60 DPJ
0 87.04 MO 203.28 0 RM (DOMAINS) 3.60 DPJ
0 77.04 MO 188.16 0 RM (-) 3.60 DPJ
0 77.04 MO 203.28 0 RM (RECORDS) 3.60 DPJ
0 67.04 MO 188.16 0 RM (-) 3.60 DPJ
0 67.04 MO 203.28 0 RM (PROCEDURES) 3.60 DPJ
0 57.04 MO 188.16 0 RM (-) 3.60 DPJ
0 57.04 MO 203.28 0 RM (TABLES) 3.60 DPJ
0 26.54 MO 354.49 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (3) 3.60 DPJ
 showpage
 restore
 save
%%Page: 4 4

0 602.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (PDP-11) 105.97 DPJ 2.70 0 RM (DATATRIEVE/VAX,) 105.97 DPJ 206.55 0 RM (SPD) 105.97 DPJ 2.70 0 RM (25.14.18) 105.97 DPJ
0 592.54 MO 60.00 0 RM (Version 3.3) 3.60 DPJ
0 560.54 MO 60.00 0 RM (HARDWARE REQUIREMENTS) 3.60 DPJ
0 542.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (VAX configuration as specified in the System Support Addendum \(SSA 25.14.18-x\).) 3.60 DPJ
0 524.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (SOFTWARE REQUIREMENTS*) 3.60 DPJ
0 506.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (VMS Operating System) 3.60 DPJ
0 488.54 MO 60.00 0 RM (VAX-11 RSX) 3.60 DPJ
0 467.54 MO 60.00 0 RM (*) 3.60 DPJ
0 467.54 MO 80.16 0 RM (Refer to the System Support Addendum \(SSA 25.14.18-x\) for availability and required) 4.01 DPJ
0 457.54 MO 80.16 0 RM (versions of prerequisite/optional software.) 3.60 DPJ
0 439.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (ORDERING INFORMATION) 3.60 DPJ
0 421.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (Software Licenses: QL-105A*-**) 3.60 DPJ
0 411.54 MO 60.00 0 RM (Software Media: QA-105A*-**) 3.60 DPJ
0 401.54 MO 60.00 0 RM (Software Documentation: QA-105AA-GZ) 3.60 DPJ
0 391.54 MO 60.00 0 RM (Software Product Services: QT-105A*-**) 3.60 DPJ
0 370.54 MO 60.00 0 RM (*) 3.60 DPJ
0 370.54 MO 80.16 0 RM (Denotes variant fields. For additional information on available licenses, services and) 4.87 DPJ
0 360.54 MO 80.16 0 RM (media, refer to the appropriate price book.) 3.60 DPJ
0 342.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (SOFTWARE LICENSING) 3.60 DPJ
0 324.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (This software is furnished under the licensing provisions of DIGITAL's Standard Terms and) 3.86 DPJ
0 314.54 MO 60.00 0 RM (Conditions. For more information about DIGITAL's licensing terms and policies, contact your) 3.53 DPJ
0 304.54 MO 60.00 0 RM (local DIGITAL office.) 3.60 DPJ
0 286.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (LICENSE MANAGEMENT FACILITY) 3.60 DPJ
0 268.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (This layered product supports the VMS License Management Facility.) 3.60 DPJ
0 250.54 MO 60.00 0 RM (License units for this product are allocated on a CPU-capacity basis.) 3.60 DPJ
0 232.54 MO 60.00 0 RM (For more information on the License Management Facility, refer to the VMS Operating) 5.44 DPJ
0 222.54 MO 60.00 0 RM (System Software Product Description \(SPD 25.01.xx\) or the License Management Facility) 4.58 DPJ
0 212.54 MO 60.00 0 RM (Manual of the VMS Operating System documentation set.) 3.60 DPJ
0 194.54 MO 60.00 0 RM (For more information about DIGITAL's licensing terms and policies, contact your local) 5.94 DPJ
0 184.54 MO 60.00 0 RM (DIGITAL office.) 3.60 DPJ
0 166.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (SOFTWARE PRODUCT SERVICES) 3.60 DPJ
0 148.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (A variety of service options are available from DIGITAL. For more information contact your) 3.95 DPJ
0 138.54 MO 60.00 0 RM (local DIGITAL office.) 3.60 DPJ
0 120.54 MO 60.00 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (SOFTWARE WARRANTY) 3.60 DPJ
0 102.54 MO 60.00 0 RM 9.00 /Helvetica-DPMCS DPT
 (Warranty for this software product is provided by DIGITAL with the purchase of a license for) 3.39 DPJ
0 92.54 MO 60.00 0 RM (the product as defined in the Software Warranty Addendum of this SPD.) 3.60 DPJ
0 26.54 MO 246.49 0 RM 9.00 /Helvetica-Bold-DPMCS DPT
 (4) 3.60 DPJ 0 -36.00 RM
 showpage
 restore
%%Trailer
%%Pages: 4
%%DocumentFonts: Courier-MCS %LOGO7 Helvetica-DPMCS Helvetica-Bold-DPMCS 
%!Font Name                     Font No   Charset
%!/Courier-MCS                  1         ASCII
%!%%LOGO7                       107       ASCII
%!/Helvetica-DPMCS              200       ASCII
%!/Helvetica-Bold-DPMCS         220       ASCII
%!/Helvetica-DPMCS              200       PUBL
