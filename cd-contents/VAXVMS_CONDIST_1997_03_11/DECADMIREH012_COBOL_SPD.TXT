 






Software
Product
Description

___________________________________________________________________

PRODUCT NAME:  DECADMIRE with Hebrew Support for COBOL/DECforms for Open-
VMS V1.2                                               SPD 48.25.01

DESCRIPTION

DECADMIRE is an application development tool that generates high-performance,
large-scale production applications. DECADMIRE is used to create full
client/server and transaction processing implementations across het-
erogeneous systems, standard timesharing applications or continuous
fault tolerant applications, in the OpenVMS environment. Rapid devel-
opment takes place using the prototyping, automatic screen generation,
and code generation facilities. DECADMIRE provides an environment for
the application developer to describe and define the database, and the
appearance of application screens, menus, and reports in the DECAD-
MIRE BUILDER.

Individual components of the application (screens, reports, and menus),
or the entire application can be tested using prototyping. The appli-
cation's source code is generated by the DECADMIRE GENERATOR. Specific
customizations for the application can be manually entered into the
generated code and are preserved for regeneration. Future maintenance
of the application can take place in DECADMIRE or directly in the gen-
erated application code.

The Hebrew support enables the creation and activation of Hebrew ap-
plications, including full Hebrew user interface and data processing.

Components Overview

DECADMIRE has two major components that allow the user to create an
application: the DECADMIRE BUILDER and the DECADMIRE GENERATOR.



                              DIGITAL                  January 1994

                                                        AE-Q01BB-TE

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01




DECADMIRE BUILDER

Using DECADMIRE BUILDER, the application developer interactively de-
scribes the database structure of the application, screen, and report
designs. Existing data definitions can be imported into DECADMIRE. The
prototyping environment enables the application to be used interac-
tively with real data. The application can be tested and reviewed with
the end users confirming that the application meets their needs prior
to any code generation. Online help can be added to the screens dur-
ing application development.

Hebrew application prototyping is limited to the look-and-feel of the
application, and is not fully compatible with the generated applica-
tion. For details, please refer to the Release Notes. DECADMIRE GEN-
ERATOR

The source code for the application is produced by the DECADMIRE GEN-
ERATOR. The result of this generation is an integrated application based
on code for standard Digital layered products. This code can be mod-
ified, enabling additional functionality or customizations to be added
to the application. The code contains markers, which represent por-
tions of the code that will be updated during regeneration from changes
made in the DECADMIRE BUILDER. Modifications to the code should be placed
outside of these markers. The latest version of the source code can
be used for regeneration, capturing all customizations.

DECADMIRE GENERATOR produces COBOL code, complete DECforms code, full
exchange or single step ACMS tasks, client file for PC development,
a CDD dictionary, a test Rdb database, an ACMS task group definition,
and an ACMS application definition file (for the ACMS-specific appli-
cations). In addition, production reports and user handbook documen-
tation can be generated.

Components Detail

Database Design/Description



                                 2

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


DECADMIRE allows the user to start either by importing database in-
formation into the dictionary or manually entering this information
using the dictionary maintenance facility. A review of all informa-
tion entered or imported should be completed with either the dictio-
nary maintenance tool or reports before continuing prototyping and code
generation.

Relationships among tables are defined by associating like data items,
which comprise chained and related table descriptions. All screen de-
velopment, report development, prototyping, and code generation are
based on the dictionary information. A copy table function is provided
to enhance development efforts. Application Design

Each function performed by the application is designed as a module.
Each module is associated with predefined templates, which associate
a specific series of actions to be processed within the application.
A module can be a screen for data entry, inquiry, menu, report, or an
update module used to update data not specific to the activated screen.

For client/server development with TFM or a third party client tool,
a companion module must be defined.

The following components are included in the application design and
description:

o  Panel maintenance identifies the panels used by the specific mod-
   ule within the application. Any of the following can be assigned
   to the module:

   -  Key panel, enabling data entry into key fields.

   -  Select panel, allowing record selection based on the value en-
      tered in a particular field, and having those values passed back
      to the form based on the criteria.

   -  Field panel, enabling the main area of data entry.

   -  Extension panel, allowing for extended input of field entry, with
      a maximum number of eight per module.


                                 3

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


   -  Function panel, enabling the definition of application actions
      versus the specific use of function keys.

** A minimum of one key panel and one field panel must be used.

o  Screen Painting uses the screen editor to describe the fields, free
   text, grouping of fields, and action among the fields and modules.

o  Automatic screens can be generated from a table in three style vari-
   ations:

   -  Two-column format for left-to-right data entry

   -  Two-column format for top-down data entry

   -  Multiple columns across with the field labels above the field

o  The module copy feature copies not only the module contents, but
   also the action/processing from the copied module into the new mod-
   ule.

o  Application messages can be tailored for each module.

o  Menus are defined using the menu design painter including support
   for:

   -  Labeling of menu headers

   -  Quick labels for moving around the application

   -  Entry of documentation for user's guide handbook

   -  Main menu and submenu support

o  RTR Routing key maintenance (COBOL only)

   -  Definition of an RTR routing key for a dataset to be used by an
      RTR server

   -  Definition of an RTR key value to each DECADMIRE module

Report Design

                                 4

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


Reports are defined using the report designer. This includes the re-
port painter (the same as the screen painter used to define modules).
Reports can be complicated in nature with multiple selection crite-
ria, but are not intended for ad-hoc queries.

The report design and description includes the following features:

-  Sort parameters

-  Module calling

-  Module parameters

-  Report layout

-  Report selection parameters

Prototyping

After the user defines the database and creates the modules that de-
fine menus, screens, and reports, the application can be simulated us-
ing prototyping.

Prototyping can be completed for a single module (menu, report, or screen),
a grouping of modules, or the entire application. Prototyping of a mod-
ule that makes a call to other modules automatically includes all re-
lated modules in the prototyping session. Data can be entered, retrieved,
and updated, using the DECADMIRE BUILDER data structure, simulating
the final application and Rdb database.

Prototyping closely mimics the completed application. However, some
inconsistencies within the prototyping environment are not in the fi-
nal generated application. Customizations made to the generated code
are not operational in the prototyping. Application Generation

DECADMIRE generates the required information to build an application,
including the following:

o  Table descriptions (COPY-files for COBOL), if CDD/Repository is not
   used for compiling

                                 5

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


o  Entire application's CDD/Repository and supporting CDO language

o  A specific database table for CDD/Repository and supporting CDO lan-
   guage

o  A test Rdb database (multiple or single file) and required SQL lan-
   guage definition

o  Table descriptions (COPY-files) for DECforms (if CDD/Repository is
   not used for compiling)

o  Lists of values for DECforms

o  TFM client repository for TFM client/server applications (ACMS gen-
   eration only)

o  Desktop ACMS workspace definition client file

o  RTR embedded calls (COBOL only)

o  ACMS task, task group, ACMS application definition file, and sin-
   gle step task for NO I/O task ACMS implementations (ACMS versions
   of DECADMIRE only)

o  Handbook user documentation for a specific module or the entire ap-
   plication

There are two methods for creating applications from the modules cre-
ated with the DECADMIRE BUILDER:

o  Generation and compilation of source code module-by-module. This
   method allows the user to create pieces of an application program
   as they are completed.

o  Generation, compilation, and linking of the source code into ex-
   ecutable code for the entire application all at the same time, start-
   ing from a defined top-level module. Usually this method is used
   when all the source code for a specific routine/module or the en-
   tire application has been completed. The DECADMIRE GENERATOR au-
   tomatically processes all modules in the correct sequence.

                                 6

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


Time-sharing applications can scale to TP by specifying ACMS during
regeneration (ACMS license required). The DECforms and COBOL are ex-
actly the same in both applications preserving all modifications made.
The COBOL driver code is replaced with an ACMS task and other ACMS com-
ponents. An object library with some generic routines is used during
the linking of the application. Development Environment Reports

DECADMIRE provides reports that describe information contained in the
DECADMIRE dictionary. These reports can be used during development and
as application documentation. The following types of reports are avail-
able:

o  Table and associated columns

o  Application modules (menu, screen, and report)

o  Module calls and modules called from

o  Fields and their associated screens and reports (valid for DECforms
   only)

o  References to a column

o  Related modules

Support Functions

DECADMIRE includes an authorization tool and a print, batch, and queue
management facility, which are available for use in the generated ap-
plication. (Available only on server code with DECforms.)

Other Tool Connections

DECADMIRE supports an interface to the DEC TP WORKcenter for ACMS, pro-
viding for the generated code to be imported into DEC TP WORKcenter.

DECADMIRE has an open interface to its dictionary. The dictionary sup-
ports an interface to design tool information when supplied appropri-
ately formatted data.


                                 7

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01




DECADMIRE BUILDING BLOCKS

DECADMIRE includes a set of 15 building blocks, which represent a col-
lection of application-specific functions or actions in code templates.
There are seven building blocks for the screen generation, one for up-
date modules, one for the menus within the application, and six for
the report designer.

These building blocks can be customized for each application's needs;
however, modifications must follow the rules for each building block.
Customizations made within the DECADMIRE building blocks are included
in the generated code. Removal of the code markers in the building blocks
is not supported.

Internationalization Features

DECADMIRE allows for localization of messages and localized language
input, as supported by DECforms, using the screen text description.
Sample Applications

Six samples of English applications are included with the product. Mod-
ules in these applications can be used for self-paced training by re-
producing them, or can be copied to quickly include similar functions
in the application under development.

o  ADMIRERZ Application

   -  Business transactions of a fictional car rental company

   -  User's guide uses this as its model

   -  Full prototyping environment and a timesharing (DECforms/COBOL)
      generated application

o  Order Entry Application

   -  Typical order entry transactions

   -  Customer maintenance, item maintenance, and order maintenance

                                 8

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


   -  Module calls

   -  Full prototyping environment, ACMS and timesharing (DECforms/COBOL)
      generated application

o  Track and Field

   -  Forms interaction based on the DECforms Style Guide

   -  Integration with DECforms Track and Field Application

   -  Full prototyping environment

o  University

   -  Processing of student registrations, course, and department main-
      tenance

   -  Full prototyping environment

o  Visual Basic Client Vehicle Type Application for ACMS Desktop Ap-
   plications

   -  ACMS server can be generated from DECADMIRE BUILDER

o  DECADMIRE/TFM Order Entry Application

   -  TFM forms on the PC utilizes tasks that can be built on the server.
      Both DECforms and the TFM PC forms can utilize the same ACMS ap-
      plication.

   -  TFM samples replicate the functions of the Order Entry appli-
      cation using presentation services on the PC.

DECADMIRE/TFM for ACMS

TFM for ACMS is a Windows based development system that can be used
to rapidly generate Windows based PC client applications for DECAD-
MIRE generated OpenVMS ACMS server applications.

DECADMIRE/TFM Integrator allows the rapid development of a complete
client/server ACMS application. The same DECADMIRE generated ACMS ap-
plication can then be used by TFM based PC clients and terminal based
clients.

                                 9

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


The TFM PC client application is developed by creating a correspond-
ing set of PC based building blocks. At run time the client and server
building blocks interact to provide the required application function-
ality.

Each DECADMIRE building block is represented on the PC by the creation
of three TFM objects:

o  A building block specific TFM dialog model, which provides the struc-
   ture of the building block.

o  A building block specific TFM dialog box, which the developer de-
   signs to create the user interface presented by the building block.

o  A building block specific TFM subroutine library, which contains
   the code that is used during the execution of the building block.

The product provides a set of template building block objects (dia-
log model, dialog box, subroutine library). The TFM PC client devel-
oper produces a working PC client application by customizing these tem-
plate TFM dialog models and subroutine libraries, which contain knowl-
edge of all these DECADMIRE specific building blocks.

Customizations are performed using the standard TFM development tools,
and the application is tested and debugged with the powerful TFM Test
and Debugging facilities. The application can be built and tested in-
crementally and interactively. During the actual execution of the ap-
plication, the data sent between the client and the server can be in-
spected and altered, new building blocks can be modified or created.
It is possible to quickly build a basic working client application,
then refine and enhance it as required.

The final deliverable application consists of a number of small build-
ing block objects, which are executed by the standard TFM run-time pack-
age. Individual objects can be updated and distributed without any re-
building of the complete application.





                                10

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


The product promotes a PC Client technical architecture, which allows
the developer to concentrate almost exclusively on the user interface
(dialog boxes and the visual appearance) and the application function-
ality, without being concerned with the details of DECADMIRE inter-
facing, ACMS or Windows programming.

DECADMIRE contains a subset of the complete TFM development environ-
ment required for client development: TFM UNIX server (starter, de-
velopment, or repository is not included). Extended features such as
pie-charts, bit map, and animation extensions to the client require
the purchase of the full TFM developers kit from Digital.



Summary of Digital Layered Products Used by DECADMIRE Generated
Applications

DECforms (SPD 29.90.xx)

DECforms is Digital's strategic product for forms-based user inter-
faces. DECforms provides an architecture that can support the evolv-
ing needs of application developers and end users.

DECforms is an integral component of Digital's Network Application Sup-
port (NAS) environment, providing consistent forms-based user inter-
face presentation services across multiple NAS platforms. DECforms is
also the strategic front-end forms system for Digital's TP environ-
ment, offering an integrated, efficient, asynchronous interface for
VAX ACMS based applications in either centralized or distributed trans-
action processing environments on OpenVMS VAX systems.

One of the most powerful principles reflected in the DECforms archi-
tecture is complete separation of form and function. With DECforms,
user interface processing is completely removed from the application
program and totally isolated within the form itself. The application
program is concerned only with the processing of data, not with the
gathering and display of data at the user interface. This makes ap-
plication programs much simpler to develop and easier to maintain.



                                11

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01




VAX ACMS (SPD 25.50.xx)

VAX ACMS is a transaction processing (TP) monitor designed for the Open-
VMS VAX operating system. VAX ACMS works with other Digital Equipment
Corporation commercial application software products to provide users
with a complete and customizable development and run-time environment
for transaction processing applications such as order tracking, ac-
counting and billing, shop floor control, and insurance claims pro-
cessing.

VAX ACMS software helps users through the entire application devel-
opment life cycle, including the installation, planning, design, de-
velopment, testing, implementation, management, and maintenance of com-
plex TP applications. VAX ACMS provides a special-purpose application
definition language for structured definition of TP application func-
tions and run-time characteristics. Desktop ACMS for OpenVMS (SPD 34.81.xx)

Desktop ACMS is a layered software product that allows application pro-
grams running in MS-DOS[R], Macintosh[R], SCO[TM], UNIX[R], ULTRIX,
and OpenVMS operating system environments to access OpenVMS based ACMS
transaction processing applications through a desktop programming in-
terface.

RTR for OpenVMS (SPD 34.30.xx)

Reliable Transaction Router for OpenVMS may be licensed for either full
function operation or to work only as a client. It is a reliable, trans-
parent message routing system that includes both a transactional and
a nontransactional message control system.

Reliable Transaction Router for OpenVMS implements automatic software
fault tolerance and failure recovery on the OpenVMS operating system
by adapting to hardware (CPU), communications, and application soft-
ware failures.





                                12

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


Reliable Transaction Router for OpenVMS provides users with the abil-
ity to easily partition multiple application programs over DECnet lo-
cal area networks (LANs) and wide area networks (WANs). Ease of de-
velopment features include both a Requester (Client)/Server design en-
vironment, with optional all-or-nothing transaction semantics, as well
as a message broadcasting capability. Reliable Transaction Router for
OpenVMS implements virtual, rather than physical, networks, which pro-
vide the application developer with a "single view" of a distributed
client/server environment. This technique allows the application soft-
ware to be independent of physical hardware (CPU) location, network
naming conventions, and communications protocol.


TFM (SPD 44.19.xx)

TFM provides a robust and complete development environment for cre-
ating clients for ACMS in a client/server architecture.


VAX COBOL (SPD 25.04.xx)

VAX COBOL is a high-level language for business data processing that
operates under the OpenVMS VAX operating system, taking full advan-
tage of the system facilities and the VAX Information Architecture.
VAX COBOL is based upon the 1985 ANSI COBOL Standard X3.23-1985 as mod-
ified by the X.23a-1989 amendment. DEC Rdb for OpenVMS (SPD 25.59.xx)

DEC Rdb for OpenVMS VAX is a full-function, SQL-based relational database
management system designed for the OpenVMS operating system. It is in-
tended for general purpose, multiuser, centralized, or distributed ap-
plications and includes database administration utilities and support
for host-based and client/server programming. DEC Rdb is available on
both OpenVMS VAX and OpenVMS AXP systems.


CDD/Repository (SPD 25.53.xx)





                                13

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


CDD/Repository for OpenVMS is an active, distributed repository sys-
tem that provides the capabilities for users to organize, manage, con-
trol, and integrate tools and applications across the entire enter-
prise. CDD/Repository is the foundation of Digital Equipment Corpo-
ration's COHESION Environment and a component of Network Application
Support (NAS). It is an evolutionary outgrowth of the earlier CDD/Plus
data dictionary and is now able to provide the data integration ca-
pabilities required in software development environments. VAX ACMS uti-
lizes CDD/Repository for the creation, analysis, and administration
of metadata.


Documentation

The DECADMIRE documentation set is available both with the purchase
of the DECADMIRE product and separately.

The Hebrew support documentation is supplied with the kit. At later
versions, it will be incorporated as an appendix in the DECADMIRE for
OpenVMS User's Guide.

The documentation set consists of:

o  DECADMIRE for OpenVMS Installation Guide

o  DECADMIRE for OpenVMS Introduction

o  DECADMIRE for OpenVMS Getting Started

o  DECADMIRE for OpenVMS User's Guide

o  DECADMIRE for OpenVMS Application Code Guide

o  DECADMIRE for OpenVMS Reference Manual

o  DECADMIRE for OpenVMS Client/Server Development for TFM

o  DECADMIRE for OpenVMS Client/Server Development for Desktop ACMS

o  DECADMIRE for OpenVMS Client/Server Development for RTR

                                14

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


HARDWARE REQUIREMENTS

Processor and/or hardware configurations as specified in the System
Support Addendum (SSA 48.25.01-x).

SOFTWARE REQUIREMENTS

For Application Development, Prototyping, and Code Generation

To design an application in DECADMIRE BUILDER and to generate source
code, the following software is required:

o  OpenVMS VAX Operating System

DECADMIRE/TFM Client development:

o  MS-DOS

o  Microsoft Windows

For Compiling Applications

To compile and build the generated source code, the following prod-
ucts are required:

o  VAX COBOL for OpenVMS VAX

o  DECforms Development

o  VAX ACMS and CDD/Plus or CDD/Repository

o  DEC Rdb for OpenVMS

o  PC Clients Runtime for execution

   -  Third Party (Visual Basic, etc.)

   -  TFM

OpenVMS Tailoring

                                15

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


The following OpenVMS classes are required for full functionality of
this layered product:

o  OpenVMS Required Saveset

o  Programming Support

o  Utilities

For more information on OpenVMS classes and tailoring, refer to the
OpenVMS VAX Operating System Software Product Description (SPD 25.01.xx).

ORDERING INFORMATION

Development Environment

Personal Use License: QL-MY4TA-2B
Concurrent Use License: QL-MY4TA-3B
Software Traditional Licenses: QL-MY4T*-**
Software Media: QA-MY4TA-**
Software Documentation: QA-MY4TA-GZ
Software Product Services: QT-MY4T*-** Run-Time Environment

No DECADMIRE run-time license is required.

Run-time licenses may be required for deployment of the generated code.

*  Denotes variant fields. For additional information on available li-
   censes, services, and media, refer to the appropriate price book.

SOFTWARE LICENSING

This software is furnished under the licensing provisions of Digital
Equipment Corporation's Standard Terms and Conditions. For more in-
formation about Digital's licensing terms and policies, contact your
local Digital office.

License Management Facility Support



                                16

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01


This layered product supports the OpenVMS License Management Facil-
ity.

License units for this product are allocated on a Capacity, Personal,
and Concurrent Use basis:

o  The Personal Use License allows a single individual to use the lay-
   ered product.

o  The Concurrent Use License allows any one individual at a time to
   use the layered product.

o  A combination of Personal and Concurrent Use in the same environ-
   ment is supported.

For more information on the License Management Facility, refer to the
OpenVMS VAX Operating System Software Product Description (SPD 25.01.xx)
or the License Management Facility manual of the OpenVMS VAX Operat-
ing System documentation set.

SOFTWARE PRODUCT SERVICES

A variety of service options are available from Digital. For more in-
formation, contact your local Digital office.

SOFTWARE WARRANTY

Warranty for this software product is provided by Digital with the pur-
chase of a license for the product as defined in the Software Warranty
Addendum of this SPD.

[R]  Macintosh is a registered trademark of Apple Computer, Inc.

[R]  MS-DOS is a registered trademark of Microsoft Corporation.

[R]  PostScript is a registered trademark of Adobe Systems, Inc.

[TM] SCO is a trademark of Santa Cruz Operations, Inc.

[R]  UNIX is a registered trademark of UNIX System Laboratories,
     Inc.

                                17

 



DECADMIRE with Hebrew Support for COBOL/DECforms for OSPDV48.25.01



[TM] Windows is a trademark of Microsoft Corporation.

[TM] ACMS, CDD/Repository, COHESION, DECADMIRE, DECforms, DECset,
     DECtp, DECtrace, Digital, LN03, MicroVAX, OpenVMS, TK, VAX,
     VAX COBOL, VAXft, VAXserver, VAXstation, VMS, VT100, VT220,
     VT320, VT340, VT420, and the DIGITAL logo are trademarks of
     Digital Equipment Corporation.

































                                18
