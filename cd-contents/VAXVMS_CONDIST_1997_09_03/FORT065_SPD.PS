%!PS-Adobe-3.0
%%Title: FORTVAXJAN97
%%Creator: DECdocument  V2.3
%%Copyright: 1986,1987,1988,1989,1990,1991 DIGITAL EQUIPMENT CORPORATION.
%%+All Rights Reserved.
%%CreationDate: Mon Feb  3 1997 10:24:48
%%For: WARD        
%%BoundingBox: (atend)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentFonts: (atend) 
%%DocumentNeededFonts: (atend) 
%%DocumentProcSets: Underlay Color5044
%%DocumentSuppliedProcSets: Underlay Color5044
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%+++TTI changes : added ROTB back in
%+++            : added 1000 ROTB = begin special code example
%+++            : added 1001 ROTB = end special code example
%+++            : added 1002 ROTB = digital logo
%
%%BeginResource: procset Underlay
%%CreationDate: (2/10/92)
%
% In VAX DOCUMENT V2.1-1, simple EPSF files up to 65,000 bytes long
% may be an underlay. Define the EPSF as a PostScript proceedure
% called /UNDERLAY and prefix to DOCUMENT's PS output  For example:.
% /UNDERLAY ( EPSF code here ) cvx def
%
% To create a "DRAFT" underlay change /UNDERLAY* to /UNDERLAY
/UNDERLAY* (
  /Note (DRAFT) def
  /NoteSize 120 def
  /NoteFont /Helvetica findfont NoteSize scalefont def
  /Note where { pop Note length 0 gt {
    /NoteWidth NoteFont setfont Note stringwidth pop def
    PaperWidth 36 mul PaperHeight 36 mul moveto
    PaperHeight PaperWidth atan rotate
    NoteWidth -2 div NoteSize .729 mul -2 div rmoveto 
    Note true charpath .075 setseparationgray fill
  }if  }if
) cvx def
%%EndResource
%
%%BeginResource: procset Color5044
%%CreationDate: (1/21/91)
%%Version:1.0 3
%Implementation of Adobe 5044 color specification
%/ndf allows command override during color separation
/Color5044Dict 100 dict def
Color5044Dict begin
/bdf {bind def} def
/ndf
  {1 index where
    {pop pop pop
    }
    {dup xcheck
      {bind} if
    def
    }
    ifelse
  } bdf
/setcmykcolor
  {1 exch sub
  3 
    {dup 5 -1 roll sub 0 2 copy lt
      {exch} if
    pop exch
    } repeat
  pop setrgbcolor
  }ndf
/setcmykcoloroverprint
  {4
    {dup -1 eq
      {pop 0} if
      4 1 roll
    } repeat
  setcmykcolor
  } ndf
/findcmykcustomcolor
  {5 /packedarray where
    {pop packedarray
    }
    {array astore readonly
    }
    ifelse
  } ndf
/setcustomcolor
  {exch aload pop pop
  4
    {4 index mul 4 1 roll
    } repeat
  setcmykcolor pop
  } ndf
/setseparationgray
  {1 exch sub systemdict /setgray get exec
  } ndf
/setoverprint {pop} ndf
/currentoverprint false ndf
%CMYK multi-proc colorimage
/colorimage
  {4 ne
    {(\nUnsupported number of colors for colorimage.\n) print flush quit
    } if
  not
    {(\nSingle procedure form  colorimage unsupported.\n) print flush quit
    } if
  save 20 dict begin /&saveobj exch def
  /&Kproc exch def /&Yproc exch def /&Mproc exch def /&Cproc exch def
    {&Cproc &Mproc &Yproc &Kproc
    /&K exch def /&Y exch def /&M exch def /&C exch def
    0 1 &K length 1 sub
      {/&i exch def
      &K &i 255
      &C &i get 30 mul
      &M &i get 59 mul add
      &Y &i get 11 mul add
      &K &i get 100 mul add
      100 idiv
      dup 255 gt
        {pop 255} if
      sub put
      } for
    &K
    } image
  &saveobj end restore
  } ndf
/customcolorimage
  {pop systemdict /image get exec
  } ndf
/separationimage
  {systemdict /image get exec
  } ndf
end
%%EndResource
Color5044Dict begin
%
/DEC_DVC$dict 300 dict def
DEC_DVC$dict begin
%
/DVC$PSJob save def
%
mark		% CREATE ISOLatin1Encoding if not there already
/ISOLatin1Encoding
  8#000 1 8#054 {StandardEncoding exch get} for 
  /minus
  8#056 1 8#217 {StandardEncoding exch get} for 
  /dotlessi 
  8#301 1 8#317 {StandardEncoding exch get} for 
  /space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
  /dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen 
  /registered /macron /degree /plusminus /twosuperior /threesuperior /acute 
  /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine 
  /guillemotright /onequarter /onehalf /threequarters /questiondown /Agrave 
  /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute 
  /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde 
  /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave 
  /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls /agrave /aacute 
  /acircumflex /atilde /adieresis /aring /ae /ccedilla /egrave /eacute 
  /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis /eth /ntilde
  /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave 
  /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
  /ISOLatin1Encoding where not {256 array astore def} if 
cleartomark
%
/DOCPSE ISOLatin1Encoding 256 array copy def
mark						% CREATE DOCPSE ENCODING
  8#055 /hyphen
  8#201 /bullet    8#202 /emdash     8#203 /endash    8#204 /dagger
  8#205 /daggerdbl 8#206 /registered 8#207 /trademark %8#210 /Delta
  8#211 /fi        8#212 /fl         8#213 /OE        8#214 /oe
  8#215 /Ydieresis
  counttomark -1 bitshift			% DIVIDE BY 2
  {DOCPSE 3 1 roll put} repeat			% STACK NOW CONTAINS MARK
cleartomark
%
/ReENCODE {		% /basefont /newfont encoding ReENCODE
    /newencoding exch def	%ARG: NAME OF ENCODING VECTOR
    /newfontname exch def	%ARG: NEW NAME FOR FONT AFTER RE-ENCODING
    findfont
    /basefontdict exch def	%ARG: NAME OF FONT TO BE RE-ENCODED
    basefontdict maxlength dict begin	%CREATE AND OPEN NEW DICT
	basefontdict {		%COPY ENTRIES FROM BASE FONT DICT TO NEW ONE
	    1 index /FID ne {
		def		%IF NOT THE ONE WE'RE ENCODING, JUST COPY PTRS
	    } { %else
		pop pop		%IGNORE FID AND ENCODING FOR ONE WE'RE ENCODING
	    } ifelse
	} forall
	/FontName newfontname def	%DEFINE NEW NAME 
	/Encoding newencoding def	%DEFINE NEW ENCODING VECTOR
	newfontname currentdict definefont	%TURN IT INTO A PS FONT
	pop			%IGNORE MODIFIED DICT RETURNED BY DEFINEFONT
    end
}def
%
/cvsstr 64 string def
/tempmatrix matrix def
%
% Exit page (temporarily) to add fonts/characters.
/XP { }def
% 
% Resume page
/RP {/ExampleState 0 def} def		% RESUME PAGE
/ExampleState 0 def
%
% End Page: EP
/EP {DVC$PSPage restore}def
%
% Purge fonts to reclaim VM
/PF {
  currentoverprint
  currentrgbcolor
  EP			%Does restore
  PageSetup     %Does save
  setrgbcolor
  setoverprint
}def
%
% ABBREVIATIONS 
/S /show load def
/SV /save load def
/RST /restore load def
%
/Yadjust {Ymax exch sub} def
%
/SXY {		% (x,y) POSITION ABSOLUTE, JUST SET Xpos & Ypos, DON'T MOVE
  Yadjust  /Ypos exch def /Xpos exch def
} def
%
/XY {						% (x,y) POSITION ABSOLUTE
  Yadjust moveto
} def
%
/X {						% (x,0) POSITION ABSOLUTE
  currentpoint exch pop moveto
} def
%
/Y {						% (0,y) POSITION ABSOLUTE 
  currentpoint pop exch Yadjust moveto
} def
%
/xy {						% (x,y) POSITION RELATIVE
  neg rmoveto
} def
%
/x {						% (x,0) POSITION RELATIVE
  0 rmoveto
} def
%
/y {						% (0,y) POSITION RELATIVE
  0 exch neg rmoveto
} def
%
/R {						% Draw a rectangle
  /ht exch def  /wd exch def   gsave
  currentpoint  newpath  moveto
  0 ht rlineto  wd 0 rlineto
  0 ht neg rlineto  wd neg 0 rlineto
  closepath fill grestore wd 0 rmoveto
}def
%
%Setup Page Media:  <paper-height> <paper-width> PM
/PM {
  /Xmax exch Resolution mul def
  /Ymax exch Resolution mul def
  /UNDERLAY where {
    pop
    /eps_save save def		% save before EPSF underlay
    Resolution 72 div dup scale % Revert coords to points
    count array astore /DVCstack exch def % save op stack
    /dict_count countdictstack def % # of dicts
    userdict begin		% default dict
    /showpage {}def		% disable showpage
    0 setgray
      {UNDERLAY} stopped {(Error executing /UNDERLAY)== quit}if
    countdictstack dict_count sub {end} repeat % clean up dict stack
    clear DVCstack aload pop	% restore op stack
    eps_save restore		% restore after EPSF
  }if
  PageSetup
}def
%
%Setup page coordinates
/PageSetup
{
  /DVC$PSPage {save} def
  PortraitMode not {PaperWidth 0 translate  90 rotate} if
  /Xpos 0 def
  /Ypos 0 def
}def
%
% Begin EPS file: <xoffset> <yoffset> SPB
/SPB {
  Yadjust transform		% convert from DVC to device coords
  EP				% page-level restore
  /eps_save save def		% save before EPSF
  Resolution 72 div dup scale 	% Revert coords to points
  itransform			% convert position back to points  
  translate			% set position for EPSF
  PortraitMode not {90 rotate} if % rotate for EPSF
  count array astore /DVCstack exch def	% save op stack
  /dict_count countdictstack def % # of dicts
  userdict begin		% default dict
  /showpage {}def		% disable showpage
  0 setgray
}def
%
% End EPS file
/SPE {
  countdictstack dict_count sub {end} repeat % clean up dict stack
  clear DVCstack aload pop	% restore op stack
  eps_save restore		% restore after EPSF
  PageSetup			% restore DVC coords
}def
%
% Print-Page Routine: <Page #> PP
/PP {
  gsave
  showpage
  grestore
}def
%
/DMF {		%  /font-name <point-size> DMF
  exch findfont exch scalefont setfont
}def
%
/concatnam {	%  /abcd (xxx) concatnam  ==> /abcdxxx
  /xxx exch def
  /namstr exch cvsstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
}def
%
/strip {	%  /abcdef 2 strip ==> /cdef
  /num exch def  /nam exch def
  /namstr nam cvsstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval  cvn
}def
%		ROUTINES TO HANDLE PACKING/UNPACKING NUMBERS
/PackHW {	% <target> <pos> <num> PackHW --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#0000FFFF and 1 pos sub 16 mul bitshift  target or
}def
/PackByte {	% <target> <pos> <num> PackByte --> <new target>
  /num exch def  /pos exch def  /target exch def
  num 16#000000FF and 3 pos sub 8 mul bitshift   target or
}def
/UnpkHW {	%  <pos> <num> UnpkHW --> <unpacked value>
  /num exch def  /pos exch def
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
}def
/UnpkByte {	%  <pos> <num> UnpkByte --> <unpacked value>
  /num exch def  /pos exch def
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
}def
%
/ps-scalefont {
    % FOR PS FONTS, LOOK AT SIZE REQUESTED.  IF IT HAS A DECIMAL REMAINDER
    % EQUIVALENT TO .001-.009 POINTS (I.E., .050-.450 VAXDOC UNITS), THAT'S 
    % A FLAG TO STRETCH IT VERTICALLY BY ADDING 1-9 EXTRA POINTS TO THE 
    % VERTICAL SCALING.
                % save requested size - as entered and as integer
    dup /x-size exch def cvi /x-int exch def
                % calc decimal remainder, mul x 1000, round
    x-size x-int sub 1000 mul round cvi /remainder exch def
                % see how we scale...
    remainder 50 lt remainder 450 gt or {
                % scale isomorphically
        /ystretch 0 def
        x-size scalefont
    } {
                % scale anamorphically
        /ystretch remainder def
        x-int ystretch add /y-size exch def
        [x-int 0 0 y-size 0 0] makefont
    } ifelse
}def
%
/DPSF {		% /procname size /fontname DPSF
    findfont exch ps-scalefont [ exch /setfont cvx ] cvx def
}def
%
/PXLBuildCharDict 17 dict def
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup cvsstr cvs cvn put} for
/RasterConvert {RasterScaleFactor div}def
/TransformBBox {
  aload pop
  /BB-ury exch def  /BB-urx exch def  /BB-lly exch def  /BB-llx exch def
  [ BB-llx RasterConvert BB-lly RasterConvert 
    BB-urx RasterConvert BB-ury RasterConvert ]
}def
/RunLengthToRasters {
  % none yet
}def
/GenerateRasters {			% GENERATE RASTERS FOR "IMAGEMASK"
  rasters  runlength 1 eq {RunLengthToRasters} if
}def
%
/int-dict-name {int (-dict) concatnam}def
/int-dict {int (-dict) concatnam cvx load}def
%
/DefinePXLFont {
	%  <int-font-name><ext-font-name><pt-sz(pix)><PXL mag><num-chars>...
	%  ...[llx lly urx ury]<newfont-fg>DefinePXLFont
  /newfont exch def  /bb exch def      /num exch def  /psz exch def
  /dsz exch def      /pxlmag exch def  /ext exch def  /int exch def
  /fnam ext (-) concatnam pxlmag cvsstr cvs concatnam def
  newfont not {
    int-dict-name 13 dict def
    int-dict begin
      /FontType 3 def  /FontMatrix [ 1 dsz div 0 0 1 dsz div 0 0 ] def
      /FontBBox bb TransformBBox def  /Encoding CMEncodingArray def
      /CharDict 1 dict def  CharDict begin  /Char-Info num array def  end
      /BuildChar {
        PXLBuildCharDict begin
          /char exch def  /fontdict exch def
          fontdict /CharDict get /Char-Info get char get aload pop
          /rasters exch def  /PackedWord1 exch def
          0 PackedWord1 UnpkHW 16#7FFF ne {
	    /PackedWord2 exch def  /wx 0 PackedWord1 UnpkHW def
            /rows 2 PackedWord1 UnpkByte def  /cols 3 PackedWord1 UnpkByte def
            /llx 0 PackedWord2 UnpkByte def   /lly 1 PackedWord2 UnpkByte def
            /urx 2 PackedWord2 UnpkByte def   /ury 3 PackedWord2 UnpkByte def
	  }{ %else
	    /PackedWord2 exch def  /PackedWord3 exch def /PackedWord4 exch def
            /wx 1 PackedWord1 UnpkHW def    /rows 0 PackedWord2 UnpkHW def
            /cols 1 PackedWord2 UnpkHW def  /llx 0 PackedWord3 UnpkHW def
            /lly 1 PackedWord3 UnpkHW def   /urx 0 PackedWord4 UnpkHW def
            /ury 1 PackedWord4 UnpkHW def
          } ifelse
          rows 0 lt {
	    /rows rows neg def /runlength 1 def
	  }{ %else
	    /runlength 0 def
	  } ifelse
          wx 0
          llx RasterConvert lly RasterConvert 
          urx RasterConvert ury RasterConvert setcachedevice
          rows 0 ne {
	    gsave
	      cols rows true  RasterScaleFactor 
              0 0 RasterScaleFactor neg llx .5 add neg ury .5 add 
              tempmatrix astore  GenerateRasters imagemask
            grestore
          } if
        end
      }def
    end
    fnam int-dict definefont pop 
  } if 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [ int-dict /setfont cvx ] cvx put
}def 
/PXLF { true  DefinePXLFont}def	% SIGNAL THAT FONT ALREADY LOADED
/PXLNF {false  DefinePXLFont}def	% SIGNAL THAT FONT NOT ALREADY LOADED
%
/PXLC {	% <int-font-name><code><wx><llx><lly><urx><ury>...
	% ...<rows><cols><runlength><rasters>PXLC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /wx exch def       /code exch def       /int exch def
  % SEE IF LONG OR SHORT FORMAT IS REQUIRED
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
  TackRunLengthToRows {
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
      0 0 wx PackHW 2 rows PackByte 3 cols PackByte rasters ] put
  }{ %else
    int-dict /CharDict get /Char-Info get code 
    [ 0 0 urx PackHW 1 ury PackHW   0 0 llx PackHW 1 lly PackHW
      0 0 rows PackHW 1 cols PackHW 0 0 16#7FFF PackHW 1 wx PackHW rasters ] put
  } ifelse
}def
%
/CKSZ {abs 127 le and}def
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if}def
%
/PLOTC {
  % <wx><dsz><psz><llx><lly><urx><ury><rows><cols><runlength><rasters>PLOTC
  /rasters exch def  /runlength exch def  /cols exch def  /rows exch def
  /ury exch def      /urx exch def        /lly exch def   /llx exch def
  /psz exch def      /dsz exch def        /wx exch def
  % "PLOT" A CHARACTER'S RASTER PATTERN
  rows 0 ne {
    gsave
      currentpoint translate  psz dsz div dup scale
      cols rows true  RasterScaleFactor 0 0 RasterScaleFactor 
      neg llx .5 add neg ury .5 add  tempmatrix astore
      GenerateRasters imagemask
    grestore
  } if
  wx x
}def
%
% set color routine: Color# SC
/SC {ColorPalette exch get 1.0 setcustomcolor}bind def
%
%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

%+++ TTI changes to allow .screen escape sequence
% 1000 ROTB -> start screen
% 1001 ROTB -> end screen
% 1002 ROTB -> Digital logo

/codexindent 590 def

/ROTB {
  dup 1000 eq {
    % 1000 ROTB - start code example
    pop /ExampleState 0 def
    /S {
      dup (.screen) eq {
      % start screen example
% pjf fix 7-4-92 : first line after .screen was indented improperly
        currentpoint /ExampleY exch def /ExampleX exch def
        1 setgray show 0 setgray
        /S {
          /ExampleName exch def /ExampleState 1 def
          codexindent 0 translate codexindent 0 rmoveto
          1 setgray ExampleName show 0 setgray
          /S /show load def
          /FONT104 /F104 load def
          currentfont F102 currentfont begin
            /Encoding load dup 32 get 126 exch put
          end FONT104 currentfont /F104DICT exch def setfont
          /F104 {
            /S {
              currentfont /F104DICT load eq {
                dup length 240 mul /w exch def
                gsave 0 -100 rmoveto currentpoint
                newpath moveto w 0 rlineto 0 440
                rlineto w neg 0 rlineto closepath fill grestore
                1 setgray show 0 setgray
              } {
                /S /show load def S
              } ifelse
            } def
            FONT104
          } def
        } def
      } {
      % regular code example
        show /S /show load def
      } ifelse
    } def
  } { dup 1001 eq {
    % 1001 ROTB - end code example
    pop
    ExampleState 1 eq {
      currentpoint ExampleY exch sub 600 sub /ylength exch def pop
      /xlength 19200 1.25 mul def /radius 1000 def
      gsave ExampleX ExampleY translate
      240 -400 translate .8 1 scale 50 setlinewidth
      /Helvetica findfont 250 scalefont setfont
      ExampleName (-) eq { /ExampleName () def } if
      ExampleName stringwidth pop
      xlength exch sub -250 radius sub ylength sub moveto
        gsave 1.25 1 scale ExampleName show grestore
      newpath radius neg 0 moveto
      0 ylength neg radius 180 270 arc
      xlength ylength neg radius 270 0 arc
      xlength 0 radius 0 90 arc
      0 0 radius 90 180 arc
      closepath stroke grestore
      /ExampleState 0 def
      /F104 /FONT104 load def
      /S /show load def
      codexindent neg 0 translate codexindent neg 0 rmoveto
    } if
  } { dup 1002 eq {
    pop
    gsave (-) stringwidth pop neg 0 rmoveto 
    /Helvetica findfont 450 scalefont setfont
    [(d) (i) (g) (i) (t) (a) (l)] {
      currentpoint currentpoint newpath moveto
      0 -200 rmoveto 300 0 rlineto 0 730 rlineto -300 0 rlineto 0 -730 rlineto
      fill moveto gsave
      dup stringwidth pop 300 exch sub 2 div 0 rmoveto
      1 setgray show 0 setgray grestore
      350 0 rmoveto
    } forall
    0 375 rmoveto
    /Helvetica findfont 200 scalefont setfont (TM) show
    grestore
  } {
    % other - do rotation
    XP
    gsave
    Xpos Ypos translate
    rotate % using <theta> from the stack
    Xpos neg Ypos neg translate
    RP
  } ifelse } ifelse } ifelse
} def

/ROTE {XP grestore RP} def
/F104 { } def

%%EndProlog


%%BeginSetup
/PxlResolution 300 def
/Resolution 3600 def
/RasterScaleFactor PxlResolution Resolution div def
/PortraitMode true def
/PaperWidth 8.500 def
/PaperHeight 11.000 def
72 Resolution div dup scale

%>  Postamble of file USER07:[WARD.SPD]FORTVAXJAN97.DVI_PS.
% DefineFont:F44 Category:10 Pointsize:8
/Helvetica-Bold /Helvetica-Bold@DOCPSE DOCPSE ReENCODE
/F44 400.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F42 Category:10 Pointsize:8
/Helvetica /Helvetica@DOCPSE DOCPSE ReENCODE
/F42 400.0 /Helvetica@DOCPSE DPSF
% DefineFont:F40 Category:10 Pointsize:9
/F40 450.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F39 Category:10 Pointsize:9
/Helvetica-Oblique /Helvetica-Oblique@DOCPSE DOCPSE ReENCODE
/F39 450.0 /Helvetica-Oblique@DOCPSE DPSF
% DefineFont:F38 Category:10 Pointsize:9
/F38 450.0 /Helvetica@DOCPSE DPSF
% DefineFont:F36 Category:10 Pointsize:10
/F36 500.0 /Helvetica-Bold@DOCPSE DPSF
% DefineFont:F16 Category:10 Pointsize:24
/F16 1200.0 /Helvetica-Bold@DOCPSE DPSF

%Spot color array for this job
/ColorPalette [
0.0 0.0 0.0 1.0 (BLACK) findcmykcustomcolor
] def

%%EndSetup
%
%%Page: (1) 1
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC
3600 5094 XY
3600 8083 SPB
120.000 -692.000 translate
%%BeginDocument: (DOC$ROOT:[TEX.FORMATS]LOGOTM.EPS)
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.0
%%For: (Erik Goetze) (Digital Equipment)
%%Title: (Digital-TM-Black-Logo-24pt.epsf)
%%CreationDate: (12/6/93) (12:45 PM)
%%BoundingBox: -120 692 168 722
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 12 12 600 780
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.0 
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.0 3
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
u
u
0 O
0 g
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
84.7146 693.4118 m
84.7146 717.3723 L
73.9468 717.3723 L
73.9468 693.4118 L
84.7146 693.4118 L
f
107.885 693.4118 m
107.885 717.3723 L
97.1172 717.3723 L
97.1172 693.4118 L
107.885 693.4118 L
f
153.7972 693.4118 m
153.7972 717.3723 L
143.8071 717.3723 L
143.8071 693.4118 L
153.7972 693.4118 L
f
142.6011 693.4118 m
142.6011 717.3723 L
131.8333 717.3723 L
131.8333 693.4118 L
142.6011 693.4118 L
f
1 g
0.3394 w
149.9843 699.7139 m
149.9843 711.7924 L
147.8778 711.7924 L
147.8778 699.7139 L
149.9843 699.7139 L
f
0.3371 w
77.5597 703.8961 m
77.5583 705.6678 78.2907 706.4587 79.0732 706.4587 c
79.8557 706.4587 80.5895 705.6465 80.5867 703.8961 c
80.5837 701.954 79.8557 701.3818 79.0732 701.3818 c
78.3094 701.3818 77.5609 702.2072 77.5597 703.8961 C
75.4752 704.1459 L
75.4676 700.8523 77.2072 699.5718 78.8913 699.5786 c
79.5828 699.5814 80.2596 699.8286 80.6 700.2937 C
80.6141 700.3124 80.6584 700.4162 80.6583 700.4183 C
80.6244 700.2916 80.625 700.1891 V
80.6233 700.1777 80.6237 700.1406 80.626 699.7119 C
82.7292 699.716 L
82.7298 711.7917 L
80.6446 711.7903 l
80.6445 707.4887 l
80.6466 707.4652 80.6931 707.3242 80.6928 707.3244 C
80.6385 707.4471 80.6163 707.4725 v
80.1924 707.9585 79.5762 708.2175 78.8114 708.2175 c
77.2445 708.2175 75.4813 706.8212 75.4752 704.1459 C
77.5597 703.8961 L
f
0 g
1 w
95.9113 693.4118 m
95.9113 717.3723 L
85.9211 717.3723 L
85.9211 693.4118 L
95.9113 693.4118 L
f
1 g
0.3394 w
91.9657 699.7126 m
91.9657 708.1225 L
89.8591 708.1225 L
89.8591 699.7126 L
91.9657 699.7126 L
f
u
u
0.3497 w
90.9119 709.8997 m
91.5743 709.8997 92.1113 710.4367 92.1113 711.0991 c
92.1113 711.7615 91.5743 712.2985 90.9119 712.2985 c
90.2495 712.2985 89.7124 711.7615 89.7124 711.0991 c
89.7124 710.4367 90.2495 709.8997 90.9119 709.8997 c
f
U
90.9119 711.0991 m
F
U
0.3371 w
100.8803 703.8944 m
100.8816 702.1867 101.6114 701.3801 102.3939 701.3801 c
103.1765 701.3801 103.9044 701.9523 103.9075 703.8944 c
103.9102 705.6448 103.1765 706.457 102.3939 706.457 c
101.6114 706.457 100.879 705.666 100.8803 703.8944 C
98.7959 704.1441 L
98.802 706.8195 100.5652 708.2158 102.132 708.2158 c
102.8969 708.2158 103.5131 707.9568 103.937 707.4708 c
103.9592 707.4454 104.0136 707.3227 Y
104.0138 707.3224 103.9673 707.4635 103.9652 707.4869 c
103.9654 708.1229 l
105.9299 708.1242 L
105.9294 699.3371 L
105.8354 697.0854 104.6192 695.8401 102.3916 695.8686 c
100.7036 695.8901 99.4582 696.6495 99.0313 697.8617 C
101.0324 698.4692 L
101.1394 697.8802 101.6967 697.5308 102.3916 697.5401 c
103.1804 697.5508 103.944 697.9984 103.944 699.0644 c
103.944 699.8664 103.9434 700.2651 103.9457 700.2807 C
103.9494 700.3076 103.979 700.4166 Y
103.9791 700.4144 103.9348 700.3107 103.9207 700.292 C
103.5803 699.8269 102.9035 699.5797 102.212 699.5769 c
100.5279 699.5701 98.7882 700.8506 98.7959 704.1441 C
100.8803 703.8944 L
f
0 g
1 w
119.0853 693.4118 m
119.0853 717.3723 L
109.0951 717.3723 L
109.0951 693.4118 L
119.0853 693.4118 L
f
1 g
0.3394 w
115.1396 699.7126 m
115.1396 708.1225 L
113.0331 708.1225 L
113.0331 699.7126 L
115.1396 699.7126 L
f
u
u
0.3497 w
114.0858 709.8997 m
114.7482 709.8997 115.2853 710.4367 115.2853 711.0991 c
115.2853 711.7615 114.7482 712.2985 114.0858 712.2985 c
113.4235 712.2985 112.8864 711.7615 112.8864 711.0991 c
112.8864 710.4367 113.4235 709.8997 114.0858 709.8997 c
f
U
114.0858 711.0991 m
F
U
0 g
1 w
130.6197 693.412 m
130.6197 717.3721 L
120.2703 717.3721 L
120.2703 693.412 L
130.6197 693.412 L
f
1 g
0.3394 w
126.2505 699.5646 m
124.7467 699.5831 124.2088 700.5177 124.2538 701.9346 c
124.2538 706.7883 L
123.1964 706.7883 L
123.1964 708.2176 L
124.2538 708.2176 l
124.2538 711.3437 L
126.2705 711.9583 L
126.2705 708.2176 L
127.7557 708.2176 L
127.7557 706.7883 L
126.2705 706.7883 L
126.2705 702.1263 L
126.2616 701.4761 126.4657 701.2903 126.8902 701.2718 c
127.2805 701.2548 127.656 701.4274 127.829 701.549 C
127.829 699.9406 L
127.479 699.7254 126.8368 699.5574 126.2505 699.5646 c
f
u
0.3405 w
135.6473 702.2915 m
135.6528 702.8825 136.0338 703.3083 136.5444 703.4443 c
137.7926 703.7767 138.5964 703.9945 138.6567 704.1716 c
138.6567 703.2083 L
138.6474 702.0456 137.9937 701.1894 136.8957 701.171 c
135.9976 701.1559 135.6425 701.7753 135.6473 702.2915 C
133.7631 702.2696 L
133.7837 700.9577 134.523 699.5106 136.3713 699.4877 c
137.1579 699.478 138.1839 699.8529 138.623 700.446 c
138.6665 700.4452 L
138.6668 699.7147 L
140.6151 699.7143 L
140.6151 699.7618 L
140.4057 699.9663 140.4492 700.9912 140.4467 701.171 C
140.4467 706.2354 l
140.4454 708.112 138.5671 708.5608 137.4168 708.5535 c
136.1338 708.5454 134.6208 707.9627 134.1719 706.4661 C
135.9254 705.934 L
136.0104 706.4809 136.4723 706.9922 137.388 706.9946 c
138.2781 706.997 138.6154 706.6432 138.6118 706.211 c
138.6081 705.7732 138.3433 705.4916 137.9301 705.3532 c
137.4197 705.1822 136.9937 705.0708 136.0574 704.8326 c
134.2984 704.385 133.7494 703.1462 133.7631 702.2696 C
135.6473 702.2915 L
f
U
U
u
0 To
1 0 0 1 154.5163 713.4324 0 Tp
TP
0 Tr
0 g
1 w
/_Helvetica 5.4867 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(T) Tx 0 30 Tk 
(M) Tx 
(\r) TX 
TO
U
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
showpage %Added by MACEPS
%%EndDocument
SPE
3600 5094 XY
0 SC 3600 9976 XY F16(Software)S 3600 11221 XY(Produ)S 2 x(ct)S 3600 12467 XY
(Description)S 3600 X 747 y 23316 204 R 3600 13988 XY F36(PRODUC)S -2 x
(T)S 167 x(NAME:)S 597 x(Digital)S 167 x(Fortran)S 167 x(77)S 166 x
(V)S -27 x(ersion)S 167 x(6.5)S 166 x(for)S 166 x(OpenVMS)S 167 x(V)S
-37 x(AX)S 166 x(Systems)S 3600 X 631 y(SPD)S 111 x(25.16.49)S 3600 16327 XY
F40(DESCRIPTI)S -2 x(ON)S 3600 17286 XY F38(Digital)S 151 x(Fortran)S
153 x(77)S 152 x(is)S 152 x(an)S 152 x(implementation)S 153 x(of)S 152 x
(full)S 151 x(language)S 3600 X 548 y(FOR)S -9 x(TRAN\20377)S(,)S 169 x
(conforming)S 166 x(to)S 164 x(American)S 166 x(National)S 164 x(Stan-)S
3600 X 548 y(dard)S 179 x(FOR)S -9 x(TRAN,)S 177 x(ANSI)S 178 x(X3.9-1978.)S
286 x(It)S 177 x(includes)S 179 x(optional)S 3600 X 548 y(suppor)S 2 x
(t)S 177 x(for)S 177 x(progra)S 2 x(ms)S 178 x(conforming)S 179 x(to)S
177 x(the)S 177 x(previous)S 179 x(stan-)S 3600 X 548 y(dard,)S 241 x
(ANSI)S 221 x(X3.9-1966.)S 417 x(Digit)S -2 x(al)S 222 x(Fortran)S 223 x
(77)S 222 x(meets)S 222 x(the)S 3600 X 548 y(Federal)S 268 x(Information)S
267 x(Processing)S 268 x(Standard)S 268 x(Publication)S 3600 X 548 y
(\(FIPS-69-1\))S 229 x(require)S 2 x(ments)S 228 x(by)S 228 x(conform)S
2 x(ing)S 228 x(to)S 227 x(the)S 228 x(ANSI)S 3600 X 548 y(Standard)S
119 x(and)S 119 x(by)S 119 x(including)S 118 x(a)S 118 x(\212agge)S
2 x(r)S -25 x(.)S 189 x(The)S 118 x(\212agge)S 2 x(r)S 118 x(option-)S
3600 X 548 y(ally)S 153 x(produces)S 155 x(diagnostic)S 153 x(messag)S
2 x(es)S 153 x(for)S 154 x(compile-time)S 153 x(el-)S 3600 X 548 y(ements)S
114 x(that)S 113 x(do)S 114 x(not)S 113 x(conform)S 114 x(to)S 113 x
(the)S 113 x(Full-Level)S 113 x(ANSI)S 113 x(FOR-)S 3600 X 548 y(TRAN)S
125 x(X3.9-1978)S 126 x(Standard)S 2 x(.)S 190 x(Digital)S 124 x(Fortran)S
126 x(77)S 126 x(also)S 126 x(con-)S 3600 X 548 y(forms)S 191 x(to)S
190 x(the)S 190 x(International)S 191 x(Standard)S 191 x(ISO)S 190 x
(1539-198)S 2 x(0\(E\))S 3600 X 548 y(and)S 150 x(to)S 150 x(MIL-STD)S
149 x(1753.)S 3600 24821 XY(Digital)S 194 x(Fortran)S 196 x(77)S 195 x
(includes)S 196 x(the)S 195 x(following)S 194 x(language)S 197 x(en-)S
3600 X 547 y(hancem)S 2 x(ents)S 149 x(to)S 150 x(the)S 149 x(ANSI/ISO)S
148 x(standard)S 2 x(:)S 3600 26327 XY(\201)S 441 x(INCLUD)S -2 x(E)S
150 x(statement)S 3600 X 860 y(\201)S 441 x(Use)S 149 x(of)S 149 x(the)S
149 x(exclamation)S 150 x(point)S 149 x(\(!\))S 200 x(for)S 149 x(end)S
150 x(of)S 149 x(line)S 148 x(com-)S 4198 X 548 y(ments)S 3600 X 859 y
(\201)S 441 x(31-char)S 2 x(acter)S 203 x(identi\211ers)S 203 x(that)S
203 x(can)S 203 x(include)S 203 x(dollar)S 203 x(sign)S 4198 X 548 y
(\($\))S 150 x(and)S 150 x(under)S 2 x(score)S 150 x(\(_\))S 3600 X
859 y(\201)S 441 x(IMPLICIT)S 148 x(NONE)S 149 x(statement)S 3600 X
859 y(\201)S 441 x(Explicit)S 372 x(speci\211cation)S 373 x(of)S 373 x
(storage)S 374 x(allocation)S 373 x(units)S 4198 X 548 y(for)S 252 x
(data)S 253 x(types)S 253 x(such)S 254 x(as)S 252 x(LOGICAL*4,)S 278 x
(INTEGER*4,)S 4198 X 548 y(REAL*4,)S 149 x(REAL*8,)S 150 x(and)S 150 x
(COMPLEX*8.)S 3600 X 859 y(\201)S 441 x(A)S 207 x(set)S 207 x(of)S 207 x
(data)S 207 x(types)S 208 x(beyond)S 208 x(those)S 208 x(speci\211ed)S
208 x(by)S 208 x(full)S 4198 X 548 y(language)S 151 x(FOR)S -9 x(TRAN\20377)S
(:)S 4198 X 860 y(\202)S 150 x(1-byte)S 237 x(and)S 236 x(2-byte)S 237 x
(short)S 237 x(integers)S 237 x(\(BYTE,)S 236 x(INTE-)S 4796 X 548 y
(GER*1,)S 149 x(INTEGER*2\))S 4198 X 859 y(\202)S 150 x(1-byte)S 299 x
(and)S 299 x(2-byte)S 299 x(short)S 299 x(logicals)S 297 x(\(LOGICAL*1,)S
4796 X 548 y(LOGICAL*2\))S 16452 16328 XY(\202)S 150 x(Quadruple-pr)S
2 x(ecision)S 149 x(real)S 150 x(\(REAL*16\))S 16452 X 813 y(\202)S
150 x(Double-precision)S 175 x(complex)S 174 x(\(DOUBLE)S 174 x(COMPLEX,)S
17050 X 548 y(COMPLEX*16\))S 15854 X 813 y(\201)S 441 x(Composite)S
267 x(data)S 268 x(declarations)S 268 x(using)S 268 x(STRUCTU)S -2 x
(RE,)S 16452 X 548 y(END)S 172 x(STRUCTUR)S -2 x(E,)S 173 x(and)S 173 x
(RECORD)S 172 x(statements,)S 179 x(and)S 16452 X 548 y(access)S 262 x
(to)S 261 x(record)S 262 x(compo)S 2 x(nents)S 261 x(through)S 262 x
(\211eld)S 262 x(refer-)S 16452 X 548 y(ences.)S 15854 X 813 y(\201)S
441 x(POINTER)S 242 x(declaration)S 244 x(for)S 244 x(integer)S 244 x
(pointer)S 244 x(variables)S 16452 X 548 y(\(often)S 150 x(called)S
149 x(CRA)S -34 x(Y\207)S 150 x(pointers\))S 15854 X 813 y(\201)S 441 x
(AUT)S -9 x(OMA)S -33 x(TIC)S 149 x(and)S 150 x(ST)S -33 x(A)S -33 x
(TIC)S 149 x(statements)S 15854 X 813 y(\201)S 441 x(VOLA)S -33 x(TILE)S
149 x(statement)S 15854 X 813 y(\201)S 441 x(Data)S 149 x(initial)S
-2 x(ization)S 149 x(in)S 150 x(type)S 149 x(declaration)S 151 x(statements)S
15854 X 813 y(\201)S 441 x(Binary)S -33 x(,)S 232 x(octal)S 215 x(and)S
216 x(hexadec)S 2 x(imal)S 215 x(bit)S 215 x(constants)S 216 x(to)S
215 x(ini-)S 16452 X 548 y(tiali)S -2 x(ze)S 195 x(LOGICAL,)S 194 x
(REAL,)S 194 x(and)S 195 x(INTEGER)S 194 x(values)S 195 x(and)S 16452 X
548 y(participate)S 149 x(in)S 150 x(arithmetic)S 149 x(and)S 150 x
(logical)S 149 x(expres)S 2 x(sions)S 15854 X 813 y(\201)S 441 x(DO)S
149 x(WHILE)S 149 x(and)S 150 x(END)S 149 x(DO)S 149 x(statements)S
15854 X 814 y(\201)S 441 x(Built-in)S 327 x(functions)S 329 x(%DESCR)S
-2 x(,)S 328 x(%LOC,)S 327 x(%REF)S -50 x(,)S 328 x(and)S 16452 X 547 y
(%V)S -34 x(AL)S 15854 X 814 y(\201)S 441 x(Bit)S 148 x(manipulation)S
150 x(functions)S 15854 X 813 y(\201)S 441 x(NAMELIST)S -25 x(-directed)S
151 x(I/O)S 15854 X 813 y(\201)S 441 x(Z)S 132 x(and)S 133 x(O)S 133 x
(format)S 133 x(edit)S 132 x(descriptors)S 133 x(applicable)S 133 x
(to)S 132 x(all)S 132 x(data)S 16452 X 548 y(types)S 15854 X 813 y(\201)S
441 x(ENCODE)S 148 x(and)S 150 x(DECODE)S 149 x(statements)S 15854 X
813 y(\201)S 441 x(ACCEPT)S -51 x(,)S 199 x(TYPE,)S 198 x(and)S 199 x
(REWRITE)S 198 x(input/output)S 198 x(state-)S 16452 X 548 y(ments)S
15854 X 813 y(\201)S 441 x(DEFINE)S 148 x(FILE,)S 149 x(UNLOCK,)S 148 x
(and)S 151 x(DELETE)S 149 x(statements)S 15854 X 813 y(\201)S 441 x
(Languag)S 2 x(e)S 124 x(elements)S 124 x(for)S 124 x(keyed)S 125 x
(and)S 124 x(seque)S 2 x(ntial)S 122 x(access)S 16452 X 548 y(to)S 149 x
(OpenVMS)S 151 x(RMS)S 149 x(indexed)S 151 x(organization)S 150 x(\211les)S
15854 X 813 y(\201)S 441 x(Debug)S 150 x(statements)S 150 x(in)S 149 x
(sourc)S 2 x(e)S 23616 38320 XY F40(JANUAR)S -18 x(Y)S 150 x(1997)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica Helvetica-Bold
%%PageProcessColors: Black
%%PageCustomColors: (BLACK)
%
%%Page: (2) 2
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Digital)S 149 x(Fortran)S 150 x(77)S 150 x(V)S
-25 x(ersion)S 150 x(6.5)S 150 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x
(AX)S 149 x(Systems)S 449 x(SPD)S 149 x(25.16.49)S 3600 4821 XY F38
(\201)S 441 x(Directives)S 266 x(to)S 266 x(control)S 267 x(listi)S
-2 x(ng)S 267 x(page)S 268 x(titl)S -2 x(es)S 267 x(and)S 267 x(subti-)S
4198 X 548 y(tles,)S 282 x(object)S 256 x(\211le)S 257 x(identi\211cation)S
256 x(\211eld,)S 283 x(COMMON)S 256 x(and)S 4198 X 548 y(record)S 197 x
(\211eld)S 195 x(alignment)S 196 x(and)S 196 x(some)S 196 x(attributes)S
195 x(of)S 195 x(com-)S 4198 X 548 y(mon)S 150 x(blocks)S 3600 7437 XY
(Digital)S 148 x(Fortran)S 150 x(77)S 150 x(includes)S 150 x(the)S 150 x
(followi)S -2 x(ng)S 150 x(features:)S 3600 8410 XY(\201)S 441 x(Support)S
196 x(of)S 195 x(DA)S -33 x(TE_AND_TIME)S 195 x(intrinsic)S 195 x(for)S
195 x(obtaining)S 4198 X 548 y(dates)S 150 x(using)S 150 x(a)S 149 x
(four-digit)S 150 x(year)S 150 x(format)S 3600 X 873 y(\201)S 441 x
(Reporting)S 150 x(of)S 149 x(unused)S 151 x(and)S 150 x(uninitiali)S
-2 x(zed)S 151 x(variables)S 3600 X 873 y(\201)S 441 x(Support)S 150 x
(for)S 150 x(recursive)S 151 x(subprogr)S 2 x(ams)S 3600 X 873 y(\201)S
441 x(Support)S 150 x(for)S 150 x(stack-based)S 151 x(storage)S 3600 X
873 y(\201)S 441 x(Support)S 200 x(for)S 199 x(reading)S 199 x(and)S
200 x(writing)S 198 x(binary)S 200 x(data)S 199 x(\211les)S 199 x(in)S
4198 X 548 y(non-native)S 154 x(formats,)S 155 x(including)S 154 x(IEEE)S
153 x(\(litt)S -2 x(le-endian)S 155 x(and)S 4198 X 548 y(big-endian\),)S
150 x(IBM\206)S 150 x(System\\)S 50 x(360,)S 150 x(and)S 151 x(CRA)S
-34 x(Y\206)S 3600 X 873 y(\201)S 441 x(USEROPEN)S 127 x(subroutine)S
129 x(invocation)S 129 x(at)S 128 x(\211le)S 128 x(OPEN)S 128 x(time)S
3600 X 873 y(\201)S 441 x(Support)S 169 x(for)S 169 x(NTT)S 169 x(T)S
-50 x(echnical)S 169 x(Requirement)S 170 x(TR550001,)S 4198 X 547 y
(Multivendor)S 261 x(Integration)S 262 x(Architecture)S 261 x(\(MIA\))S
261 x(V)S -24 x(ersion)S 4198 X 548 y(1.1,)S 259 x(Division)S 237 x
(2,)S 259 x(Part)S 238 x(3-2,)S 260 x(Programm)S 2 x(ing)S 237 x(Langu)S
2 x(age)S 4198 X 548 y(Fortran)S 3600 X 873 y(\201)S 441 x(Generation)S
178 x(of)S 177 x(a)S 177 x(source)S 178 x(listing)S 176 x(\211le)S 177 x
(with)S 176 x(optional)S 178 x(ma-)S 4198 X 548 y(chine)S 150 x(code)S
150 x(repres)S 2 x(entation)S 149 x(of)S 150 x(the)S 149 x(executable)S
151 x(source)S 3600 X 873 y(\201)S 441 x(Support)S 132 x(for)S 131 x
(calls)S 131 x(to)S 132 x(OpenVMS)S 132 x(system)S 132 x(service)S 132 x
(proce-)S 4198 X 548 y(dures)S 3600 X 873 y(\201)S 441 x(Generation)S
150 x(of)S 149 x(share)S 2 x(able)S 149 x(code)S 3600 X 873 y(\201)S
441 x(Generation)S 142 x(of)S 142 x(symbol)S 143 x(tables)S 142 x(for)S
142 x(the)S 142 x(OpenVMS)S 143 x(Sym-)S 4198 X 548 y(bolic)S 149 x
(Debugger)S 3600 X 873 y(\201)S 441 x(Generation)S 150 x(of)S 149 x
(Cross)S 150 x(Reference)S 151 x(Listings)S 3600 X 873 y(\201)S 441 x
(Support)S 203 x(for)S 203 x(providing)S 203 x(error)S 204 x(diagnostics)S
202 x(to)S 203 x(the)S 202 x(DEC)S 4198 X 548 y(Languag)S 2 x(e-Sensitive)S
285 x(Editor)S 286 x(compone)S 2 x(nt)S 285 x(and)S 286 x(cross-)S 4198 X
548 y(reference)S 140 x(information)S 138 x(to)S 138 x(the)S 139 x(DEC)S
137 x(Source)S 140 x(Code)S 139 x(Ana-)S 4198 X 548 y(lyzer)S 150 x
(compone)S 2 x(nt)S 149 x(of)S 149 x(DECset)S 149 x(for)S 150 x(OpenVMS)S
3600 X 873 y(\201)S 441 x(Support)S 186 x(for)S 184 x(low-level)S 185 x
(program)S 187 x(design,)S 194 x(including)S 184 x(the)S 4198 X 548 y
(processing)S 164 x(of)S 163 x(pseudo)S 2 x(code)S 164 x(and)S 163 x
(the)S 163 x(extraction)S 164 x(of)S 163 x(de-)S 4198 X 548 y(sign)S
170 x(information)S 171 x(from)S 171 x(comme)S 2 x(nts)S 170 x(when)S
171 x(used)S 171 x(in)S 171 x(con-)S 4198 X 547 y(junction)S 149 x(with)S
149 x(DECset)S 149 x(for)S 149 x(OpenVMS.)S 3600 X 873 y(\201)S 441 x
(Support)S 185 x(for)S 183 x(translation)S 184 x(of)S 184 x(Oracle)S
184 x(CDD/R)S -2 x(epository\207)S 4198 X 548 y(records)S 151 x(into)S
149 x(Fortran)S 150 x(STRUCTURE)S 148 x(declarations)S 3600 X 873 y
(\201)S 441 x(Generation)S 183 x(of)S 181 x(optional)S 182 x(diagnostic)S
183 x(message)S 2 x(s)S 182 x(for)S 182 x(ex-)S 4198 X 548 y(tensions)S
117 x(not)S 117 x(suppor)S 2 x(ted)S 117 x(by)S 117 x(Digital)S -2 x
(')S -8 x(s)S 117 x(UL)S -33 x(TRIX)S 116 x(and)S 117 x(V)S -33 x(AX-)S
4198 X 548 y(ELN)S 149 x(opera)S 2 x(ting)S 149 x(systems)S 3600 X 873 y
(\201)S 441 x(The)S 188 x(ability)S 187 x(to)S 188 x(provide)S 189 x
(diagnostics)S 189 x(for)S 188 x(language)S 189 x(fea-)S 4198 X 548 y
(tures)S 146 x(not)S 146 x(suppor)S 2 x(ted)S 146 x(by)S 146 x(Digital)S
144 x(Fortran)S 147 x(on)S 146 x(Alpha)S 147 x(plat-)S 4198 X 548 y
(forms.)S 3600 X 873 y(\201)S 441 x(Suport)S 219 x(for)S 218 x(up)S
219 x(to)S 218 x(255)S 219 x(actual)S 218 x(argume)S 2 x(nts)S 218 x
(in)S 218 x(a)S 218 x(CALL)S 4198 X 548 y(statement)S 3600 X 873 y(\201)S
441 x(Support)S 172 x(for)S 171 x(up)S 171 x(to)S 171 x(508)S 171 x
(name)S 2 x(d)S 171 x(COMMON)S 170 x(blocks)S 172 x(per)S 4198 X 548 y
(subprog)S 2 x(ram)S 15854 4835 XY(\201)S 441 x(I/O)S 225 x(unit)S 226 x
(numb)S 2 x(ers)S 227 x(can)S 227 x(be)S 227 x(any)S 227 x(integer)S
227 x(value)S 227 x(in)S 226 x(the)S 16452 X 548 y(range)S 151 x(of)S
149 x(0)S 150 x(and)S 150 x(1)S -33 x(19)S 15854 6288 XY(The)S 164 x
(Digit)S -2 x(al)S 164 x(Fortran)S 164 x(77)S 164 x(compiler)S 164 x
(provides)S 164 x(a)S 164 x(multi-phase)S 15854 X 548 y(optimizer)S
245 x(that)S 244 x(is)S 244 x(capable)S 245 x(of)S 245 x(performing)S
246 x(optimizations)S 15854 X 548 y(across)S 151 x(entire)S 149 x(prog)S
2 x(ram)S 150 x(units.)S 15854 8290 XY(Speci\211c)S 150 x(optimizations)S
149 x(perform)S 2 x(ed)S 150 x(include:)S 15854 9195 XY(\201)S 441 x
(Constant)S 149 x(folding)S 15854 X 806 y(\201)S 441 x(Optimizations)S
202 x(of)S 202 x(arithmetic)S 202 x(IF)S -50 x(,)S 202 x(logical)S 202 x
(IF)S -50 x(,)S 202 x(and)S 203 x(block)S 16452 X 548 y(IF-THEN-ELSE)S
15854 X 805 y(\201)S 441 x(Global)S 149 x(common)S 151 x(subexp)S 2 x
(ression)S 150 x(elimination)S 15854 X 806 y(\201)S 441 x(In-line)S
149 x(expansion)S 151 x(of)S 149 x(statement)S 150 x(functions)S 15854 X
806 y(\201)S 441 x(Removal)S 150 x(of)S 149 x(invariant)S 150 x(expressions)S
151 x(from)S 150 x(loops)S 15854 X 806 y(\201)S 441 x(Optimization)S
149 x(of)S 149 x(array)S 151 x(addressing)S 151 x(in)S 149 x(loops)S
15854 X 805 y(\201)S 441 x(V)S -33 x(alue)S 149 x(prop)S 2 x(agation)S
15854 X 806 y(\201)S 441 x(Deletion)S 149 x(of)S 149 x(redund)S 2 x
(ant)S 149 x(and)S 150 x(unre)S 2 x(achable)S 150 x(code)S 15854 X 806 y
(\201)S 441 x(Optimized)S 149 x(interface)S 150 x(to)S 149 x(intrinsic)S
149 x(functions)S 15854 X 806 y(\201)S 441 x(Improved)S 188 x(generated)S
187 x(code)S 188 x(for)S 186 x(reference)S 2 x(s)S 186 x(to)S 186 x
(dummy)S 16452 X 548 y(argume)S 2 x(nts)S 149 x(and)S 150 x(variables)S
150 x(in)S 150 x(COMMON)S 15854 X 805 y(\201)S 441 x(Improved)S 250 x
(generated)S 250 x(code)S 249 x(for)S 248 x(opera)S 2 x(tions)S 248 x
(involving)S 16452 X 548 y(COMPLEX)S 150 x(variables)S 15854 X 806 y
(\201)S 441 x(Specially)S 285 x(optimized)S 287 x(scalar)S 286 x(code)S
287 x(for)S 286 x(routines)S 287 x(that)S 16452 X 548 y(process)S 184 x
(large)S 182 x(array)S 2 x(s)S 182 x(which)S 182 x(can)S 183 x(signi\211cantly)S
182 x(reduce)S 16452 X 548 y(page)S 104 x(faults)S 103 x(and)S 104 x
(improve)S 104 x(application)S 103 x(performa)S 2 x(nce)S 104 x(\(se-)S
16452 X 548 y(lectable)S 149 x(with)S 149 x(/OPTIMIZE=LEVEL=4\))S 15854 22251 XY
(Digital)S 121 x(Fortran)S 122 x(77)S 123 x(for)S 122 x(OpenVMS)S 123 x
(V)S -33 x(AX)S 122 x(Systems)S 123 x(has)S 123 x(addi-)S 15854 X 548 y
(tional)S 140 x(features)S 141 x(that)S 140 x(support)S 141 x(developing)S
141 x(applications)S 141 x(that)S 15854 X 548 y(take)S 169 x(advantage)S
170 x(of)S 169 x(the)S 169 x(V)S -33 x(AX)S 168 x(vector)S 170 x(processo)S
2 x(rs)S 169 x(or)S 169 x(multi-)S 15854 X 548 y(process)S 2 x(or)S
150 x(V)S -34 x(AX)S 150 x(systems.)S 15854 24800 XY(\201)S 441 x(Support)S
284 x(for)S 283 x(automatic)S 284 x(generation)S 284 x(of)S 283 x(V)S
-33 x(AX)S 283 x(vector-)S 16452 X 548 y(processo)S 2 x(r)S 149 x(instructions)S
15854 X 806 y(\201)S 441 x(Support)S 264 x(for)S 263 x(automa)S 2 x
(tic)S 262 x(and)S 264 x(manua)S 2 x(l)S 262 x(decom)S 2 x(position)S
16452 X 548 y(of)S 253 x(program)S 2 x(s)S 253 x(to)S 252 x(improve)S
254 x(perform)S 2 x(ance)S 253 x(on)S 254 x(multiple-)S 16452 X 548 y
(processo)S 2 x(r)S 149 x(OpenVMS)S 151 x(V)S -33 x(AX)S 149 x(systems)S
15854 X 806 y(\201)S 441 x(Multi-level)S 149 x(vectorization)S 150 x
(and)S 150 x(decompo)S 2 x(sition)S 15854 X 805 y(\201)S 441 x(V)S -25 x
(ectorization)S 135 x(of)S 135 x(DO)S 134 x(loops)S 135 x(with)S 134 x
(both)S 135 x(INTEGER)S -2 x(*4)S 136 x(and)S 16452 X 548 y(INTEGER*2)S
149 x(loop)S 149 x(control)S 150 x(variables)S 15854 X 806 y(\201)S
441 x(V)S -25 x(ectorization)S 159 x(of)S 159 x(many)S 160 x(intrinsic)S
158 x(mathematic)S 159 x(functions)S 16452 X 548 y(for)S 149 x(oper)S
2 x(ands)S 15854 X 806 y(\201)S 441 x(Optimized)S 165 x(vector)S 166 x
(code)S 167 x(generation)S 166 x(for)S 166 x(solving)S 165 x(dense)S
16452 X 548 y(systems)S 150 x(of)S 150 x(linear)S 149 x(equations)S
15854 X 806 y(\201)S 441 x(Thorough)S 151 x(depend)S 2 x(ence)S 150 x
(analysis)S 15854 X 805 y(\201)S 441 x(Compile-time)S 248 x(perform)S
2 x(ance)S 249 x(analysis)S 249 x(to)S 249 x(choose)S 249 x(the)S 16452 X
548 y(best)S 150 x(vectorization)S 149 x(and/or)S 151 x(decomp)S 2 x
(osition)S 149 x(method)S 15854 X 806 y(\201)S 441 x(Integration)S 303 x
(of)S 302 x(vector)S 303 x(and)S 303 x(scalar)S 303 x(optimizations)S
303 x(of)S 16452 X 548 y(INTEGER*4,)S 247 x(REAL*4,)S 249 x(REAL*8,)S
248 x(COMPLEX*8,)S 249 x(and)S 16452 X 548 y(COMPLEX*16)S 150 x(types)S
15132 38868 XY F40(2)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (3) 3
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Digital)S 132 x(Fortran)S 134 x(77)S 133 x(V)S
-24 x(ersion)S 133 x(6.5)S 133 x(for)S 133 x(OpenVMS)S 133 x(V)S -33 x
(AX)S 133 x(Systems)S 399 x(SPD)S 133 x(25.16.49)S 3600 4835 XY F38
(\201)S 441 x(An)S 125 x(ASSER)S -8 x(T)S 125 x(statement)S 126 x(to)S
125 x(provide)S 126 x(additional)S 126 x(informa-)S 4198 X 548 y(tion)S
109 x(to)S 109 x(the)S 109 x(compiler)S 110 x(about)S 110 x(the)S 110 x
(program)S 2 x(.)S 185 x(The)S 110 x(ASSER)S -8 x(T)S 4198 X 548 y(statement)S
131 x(can)S 131 x(be)S 130 x(used)S 132 x(in)S 130 x(some)S 131 x(progra)S
2 x(ms)S 130 x(to)S 131 x(achieve)S 4198 X 548 y(a)S 174 x(high)S 174 x
(degree)S 175 x(of)S 174 x(vectorization)S 174 x(and/or)S 175 x(automatic)S
174 x(de-)S 4198 X 548 y(composition.)S 201 x(The)S 151 x(ASSER)S -9 x
(T)S 150 x(statement)S 151 x(can)S 151 x(optionally)S 4198 X 548 y(generate)S
203 x(code)S 203 x(to)S 202 x(verify)S 202 x(the)S 202 x(assertions)S
203 x(at)S 201 x(run)S 203 x(time,)S 4198 X 548 y(if)S 174 x(desired.)S
276 x(ASSER)S -8 x(T)S 174 x(statements)S 176 x(can)S 175 x(be)S 176 x
(speci\211ed)S 176 x(in)S 4198 X 548 y(directive)S 202 x(form)S 203 x
(for)S 202 x(portability)S 201 x(and)S 203 x(will)S 200 x(be)S 203 x
(ignored)S 203 x(by)S 4198 X 548 y(other)S 135 x(compilers)S 136 x(since)S
135 x(they)S 135 x(will)S 134 x(appear)S 136 x(as)S 135 x(comm)S 2 x
(ents.)S 3600 10225 XY(\201)S 441 x(The)S 109 x(INIT_DEP_FWD)S 109 x
(directive)S 109 x(allows)S 109 x(vector)S 110 x(process-)S 4198 X 548 y
(ing)S 177 x(for)S 177 x(many)S 178 x(loops)S 178 x(that)S 176 x(would)S
177 x(otherwise)S 178 x(not)S 177 x(qualify)S 4198 X 548 y(due)S 185 x
(to)S 185 x(unknown)S 186 x(data)S 186 x(depende)S 2 x(ncies.)S 305 x
(As)S 185 x(this)S 185 x(direc-)S 4198 X 548 y(tive)S 132 x(may)S 134 x
(change)S 135 x(the)S 133 x(meaning)S 134 x(of)S 133 x(the)S 133 x(progra)S
2 x(m,)S 136 x(Digital)S 4198 X 548 y(Equipment)S 194 x(Corporation)S
195 x(does)S 194 x(not)S 194 x(warrant)S 194 x(execution)S 4198 X 548 y
(results)S 138 x(conform)S 2 x(ing)S 138 x(to)S 138 x(the)S 138 x(Fortran)S
140 x(standard)S 139 x(when)S 139 x(this)S 4198 X 548 y(directive)S
149 x(is)S 149 x(used.)S 3600 14519 XY(\201)S 441 x(The)S 171 x(NOVECT)S
-9 x(OR)S 171 x(directive)S 171 x(to)S 172 x(allow)S 170 x(the)S 171 x
(prog)S 2 x(rammer)S 4198 X 548 y(to)S 170 x(control)S 171 x(the)S 171 x
(prese)S 2 x(nce)S 171 x(and)S 172 x(level)S 170 x(of)S 171 x(vectorization)S
171 x(in)S 4198 X 548 y(each)S 150 x(nest)S 150 x(of)S 149 x(DO-loops)S
3600 16621 XY(\201)S 441 x(The)S 282 x(/MA)S -33 x(TH_LIBRAR)S -9 x
(Y)S 282 x(quali\211er)S 282 x(to)S 281 x(suppo)S 2 x(rt)S 281 x(perfor-)S
4198 X 548 y(mance)S 151 x(optimized)S 149 x(vector)S 151 x(math)S 150 x
(functions)S 3600 18175 XY(\201)S 441 x(The)S 102 x(/CHECK=)S -2 x(ALIGNMENT)S
101 x(quali\211er)S 103 x(to)S 101 x(suppre)S 2 x(ss)S 102 x(vec-)S
4198 X 548 y(tor)S 149 x(alignment)S 150 x(exceptions)S 151 x(at)S 149 x
(run)S 150 x(time)S 3600 19729 XY(\201)S 441 x(Generation)S 133 x(of)S
132 x(diagnostics)S 133 x(for)S 132 x(vectorization)S 133 x(inhibitors)S
4198 20736 XY(\202)S 150 x(Though)S 112 x(some)S 113 x(vector)S 113 x
(inhibiti)S -2 x(on)S 112 x(diagnostics)S 112 x(will)S 110 x(dis-)S
4796 X 548 y(play)S 195 x(in)S 194 x(the)S 195 x(listing)S 194 x(and)S
196 x(on)S 195 x(the)S 195 x(terminal,)S 206 x(the)S 195 x(DEC)S 4796 X
548 y(Language)S 2 x(-Sensitive)S 113 x(Editor)S 114 x(compo)S 2 x(nent)S
114 x(of)S 113 x(the)S 114 x(DEC)S 4796 X 547 y(Language)S 2 x(-Sensitive)S
117 x(Editor/DEC)S 116 x(Source)S 119 x(Code)S 118 x(An-)S 4796 X 548 y
(alyzer)S 109 x(is)S 108 x(required)S 110 x(to)S 109 x(display)S 108 x
(all)S 108 x(the)S 109 x(vector)S 109 x(inhibition)S 4796 X 548 y(diagnostics)S
149 x(gene)S 2 x(rated)S 150 x(by)S 150 x(the)S 149 x(compiler)S -24 x
(.)S 3600 24581 XY(Digital)S 245 x(Fortran)S 247 x(77)S 246 x(suppo)S
2 x(rts)S 246 x(the)S 246 x(following)S 245 x(native)S 247 x(V)S -34 x
(AX)S 3600 X 548 y(\212oating)S 150 x(point)S 149 x(data)S 150 x(types:)S
3600 26235 XY(\202)S 150 x(32-bit)S 214 x(F_\212oating)S 215 x(data)S
214 x(type,)S 230 x(with)S 214 x(an)S 214 x(8-bit)S 214 x(expone)S 2 x
(nt)S 4198 X 548 y(and)S 177 x(23-bit)S 176 x(mantissa,)S 183 x(which)S
176 x(provides)S 178 x(a)S 176 x(range)S 178 x(of)S 176 x(ap-)S 4198 X
548 y(proximately)S 164 x(0.29E-38)S 164 x(to)S 163 x(1.70E38)S 164 x
(and)S 164 x(a)S 163 x(precision)S 164 x(of)S 4198 X 548 y(typically)S
148 x(7)S 150 x(decimal)S 150 x(digits)S 3600 28885 XY(\202)S 150 x
(64-bit)S 207 x(D_\212oating)S 208 x(data)S 207 x(type,)S 222 x(with)S
206 x(an)S 208 x(8-bit)S 207 x(expone)S 2 x(nt)S 4198 X 548 y(and)S
177 x(56-bit)S 176 x(mantissa,)S 183 x(which)S 176 x(provides)S 178 x
(a)S 176 x(range)S 178 x(of)S 176 x(ap-)S 4198 X 548 y(proximately)S
164 x(0.29E-38)S 164 x(to)S 163 x(1.70E38)S 164 x(and)S 164 x(a)S 163 x
(precision)S 164 x(of)S 4198 X 548 y(typically)S 148 x(16)S 150 x(decimal)S
150 x(digits)S 3600 31535 XY(\202)S 150 x(64-bit)S 174 x(G_\212oating)S
174 x(data)S 175 x(type,)S 180 x(with)S 173 x(an)S 174 x(1)S -33 x(1-bit)S
174 x(expone)S 2 x(nt)S 4198 X 548 y(and)S 177 x(53-bit)S 176 x(mantissa,)S
183 x(which)S 176 x(provides)S 178 x(a)S 176 x(range)S 178 x(of)S 176 x
(ap-)S 4198 X 548 y(proximately)S 170 x(0.56E-308)S 171 x(to)S 169 x
(0.90E308)S 171 x(and)S 170 x(a)S 170 x(precision)S 4198 X 548 y(of)S
149 x(typically)S 149 x(15)S 150 x(decimal)S 150 x(digits)S 3600 34185 XY
(\202)S 150 x(128-bit)S 173 x(H_\212oating)S 173 x(data)S 173 x(type,)S
179 x(with)S 172 x(a)S 173 x(15-bit)S 173 x(expone)S 2 x(nt)S 4198 X
548 y(and)S 199 x(a)S 198 x(1)S -33 x(13-b)S 2 x(it)S 197 x(mantissa,)S
211 x(which)S 198 x(provides)S 199 x(a)S 199 x(range)S 200 x(of)S 4198 X
548 y(approxima)S 2 x(tely)S 168 x(0.84E-49)S 2 x(32)S 170 x(to)S 169 x
(0.59E4932)S 171 x(and)S 170 x(a)S 169 x(pre-)S 4198 X 548 y(cision)S
149 x(of)S 149 x(typically)S 149 x(33)S 150 x(decimal)S 150 x(digits)S
15854 4821 XY(The)S 173 x(sharea)S 2 x(ble,)S 178 x(re-entran)S 2 x
(t)S 172 x(compiler)S 173 x(opera)S 2 x(tes)S 172 x(under)S 174 x(the)S
15854 X 548 y(OpenVMS)S 310 x(operating)S 310 x(system.)S 679 x(It)S
308 x(globally)S 309 x(optimizes)S 15854 X 548 y(source)S 189 x(progr)S
2 x(ams)S 189 x(while)S 187 x(taking)S 188 x(advantage)S 189 x(of)S
188 x(the)S 188 x(native)S 15854 X 548 y(instruction)S 192 x(set)S 192 x
(and)S 192 x(the)S 192 x(OpenVMS)S 193 x(virtual)S 191 x(memo)S 2 x
(ry)S 192 x(sys-)S 15854 X 548 y(tem.)S -872 x 8758 Y F40(Run-T)S -8 x
(ime)S 149 x(Library)S 150 x(Redistribution)S 15854 9905 XY F38(The)S
224 x(Digital)S 222 x(Fortran)S 225 x(77)S 224 x(kit)S 223 x(may)S 225 x
(include)S 224 x(updated)S 225 x(Run-)S 15854 X 548 y(T)S -17 x(ime)S
160 x(Library)S 160 x(sharea)S 2 x(ble)S 159 x(images.)S 229 x(Digital)S
158 x(grants)S 160 x(the)S 160 x(user)S 15854 X 548 y(a)S 120 x(nonexc)S
2 x(lusive)S 119 x(royalty-free)S 121 x(worldwide)S 120 x(right)S 120 x
(to)S 119 x(repro)S 2 x(duce)S 15854 X 548 y(and)S 188 x(distribute)S
186 x(the)S 187 x(executab)S 2 x(le)S 186 x(version)S 188 x(of)S 187 x
(the)S 186 x(Run-T)S -16 x(ime)S 15854 X 548 y(Library)S 151 x(\(the)S
149 x("R)S -8 x(TLs"\))S 150 x(provided)S 151 x(that)S 149 x(the)S 150 x
(user:)S 15854 13245 XY(\201)S 441 x(distributes)S 114 x(the)S 114 x
(R)S -9 x(TLs)S 115 x(only)S 114 x(in)S 114 x(conjunction)S 114 x(with)S
113 x(and)S 115 x(as)S 114 x(a)S 16452 X 548 y(part)S 144 x(of)S 144 x
(the)S 145 x(user)S 17 x(')S -8 x(s)S 144 x(software)S 144 x(application)S
144 x(produ)S 2 x(ct)S 144 x(which)S 16452 X 548 y(is)S 113 x(designed)S
114 x(to)S 113 x(opera)S 2 x(te)S 113 x(in)S 113 x(the)S 113 x(OpenVMS)S
114 x(environm)S 2 x(ent;)S 15854 15388 XY(\201)S 441 x(does)S 168 x
(not)S 168 x(use)S 168 x(Digital')S -10 x(s)S 168 x(name,)S 173 x(logo,)S
172 x(or)S 168 x(tradema)S 2 x(rks)S 168 x(to)S 16452 X 548 y(market)S
150 x(the)S 150 x(user)S 17 x(')S -8 x(s)S 150 x(software)S 149 x(application)S
150 x(product;)S 15854 16984 XY(\201)S 441 x(includes)S 171 x(Digital')S
-10 x(s)S 172 x(copyright)S 172 x(notice)S 171 x(for)S 171 x(Digital)S
170 x(Fortran)S 16452 X 548 y(77)S 131 x(on)S 131 x(the)S 131 x(user)S
18 x(')S -9 x(s)S 131 x(produc)S 2 x(t)S 130 x(disk)S 131 x(label)S
130 x(and/or)S 132 x(on)S 131 x(the)S 131 x(titl)S -2 x(e)S 16452 X
548 y(page)S 195 x(of)S 194 x(the)S 195 x(documen)S 2 x(tation)S 194 x
(for)S 194 x(software)S 195 x(application)S 16452 X 548 y(product;)S
150 x(and)S 15854 19676 XY(\201)S 441 x(agrees)S 125 x(to)S 124 x(indemnify)S
-33 x(,)S 128 x(hold)S 124 x(harm)S 2 x(less,)S 128 x(and)S 125 x(defend)S
124 x(Digi-)S 16452 X 548 y(tal)S 126 x(from)S 127 x(and)S 128 x(against)S
127 x(any)S 127 x(claims)S 127 x(or)S 127 x(lawsuits,)S 131 x(including)S
16452 X 548 y(attorney')S -8 x(s)S 188 x(fees,)S 197 x(that)S 187 x
(arise)S 189 x(or)S 188 x(result)S 188 x(from)S 188 x(the)S 188 x(use)S
188 x(or)S 16452 X 548 y(distribution)S 176 x(of)S 177 x(the)S 177 x
(software)S 178 x(application)S 176 x(prod)S 2 x(uct.)S 281 x(Ex-)S
16452 X 548 y(cept)S 166 x(as)S 167 x(expressly)S 167 x(provided)S 168 x
(herein,)S 170 x(Digital)S 165 x(grants)S 167 x(no)S 16452 X 547 y(implied)S
174 x(or)S 174 x(express)S 175 x(license)S 175 x(under)S 175 x(any)S
174 x(of)S 174 x(its)S 173 x(patents,)S 16452 X 548 y(copyrights,)S
138 x(trade)S 136 x(secrets,)S 139 x(trademarks)S 2 x(,)S 137 x(or)S
136 x(any)S 135 x(license)S 16452 X 548 y(or)S 150 x(other)S 150 x(proprietary)S
151 x(interests)S 150 x(and)S 150 x(rights.)S 15854 24659 XY(The)S 298 x
(Run-T)S -16 x(ime)S 298 x(Library)S 298 x(image)S 298 x(\211le)S 298 x
(names)S 299 x(are)S 298 x(FOR-)S 15854 X 548 y(R)S -8 x(TL.EXE,)S 99 x
(MTHR)S -8 x(TL.EXE,)S 99 x(UVMTHR)S -9 x(TL.EXE,)S 99 x(and)S 101 x
(VMTHR)S -9 x(TL.EXE.)S 15854 X 548 y(Three)S 198 x(of)S 197 x(these)S
197 x(\(MTHR)S -8 x(TL.EXE,)S 197 x(UVMTHR)S -9 x(TL.EXE,)S 197 x(and)S
15854 X 548 y(VMTHR)S -8 x(TL.EXE\))S 200 x(must)S 201 x(be)S 200 x
(distributed)S 200 x(together)S 201 x(in)S 200 x(order)S 15854 X 548 y
(to)S 149 x(ensur)S 2 x(e)S 149 x(prope)S 2 x(r)S 149 x(execu)S 2 x
(tion)S 149 x(behavior)S -24 x(.)S 15854 28596 XY F40(HARDW)S -26 x
(ARE)S 149 x(REQUIREMENTS)S 15854 29743 XY F39(Processo)S 2 x(rs)S 188 x
(Suppor)S 2 x(ted)S 188 x(by)S 188 x(Digital)S 187 x(Fortran)S 189 x
(77)S 188 x(for)S 189 x(Open-)S 15854 X 548 y(VMS)S 150 x(V)S -25 x
(AX)S 150 x(Systems:)S 15854 31439 XY F38(Any)S 178 x(V)S -33 x(AX)S
178 x(system)S 179 x(that)S 178 x(is)S 178 x(capable)S 179 x(of)S 177 x
(running)S 179 x(OpenVM)S 2 x(S)S 15854 X 548 y(V)S -33 x(AX)S 149 x
(V)S -24 x(ersion)S 150 x(5.4)S 150 x(or)S 150 x(higher)S -24 x(.)S
15854 33134 XY F39(Processo)S 2 x(rs)S 150 x(Not)S 149 x(Supported:)S
18843 34281 XY F42(MicroV)S -30 x(AX)S 133 x(I)S(,)S 132 x(V)S -30 x
(AXstation)S 132 x(I,)S 132 x(V)S -30 x(AXstation)S 132 x(800)S -2 x
(0,)S 18843 X 749 y(V)S -30 x(AX\2031)S -31 x(1)S(/725)S -2 x(,)S 133 x
(V)S -30 x(AX\2031)S -30 x(1)S(/78)S -2 x(2)S 15854 36178 XY F39(Processo)S
2 x(rs)S 150 x(Restricti)S -2 x(ons:)S 15132 38868 XY F40(3)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (4) 4
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Digital)S 149 x(Fortran)S 150 x(77)S 150 x(V)S
-25 x(ersion)S 150 x(6.5)S 150 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x
(AX)S 149 x(Systems)S 449 x(SPD)S 149 x(25.16.49)S 3600 4821 XY F38
(A)S 128 x(TK50)S 129 x(T)S -50 x(ape)S 129 x(Drive)S 128 x(is)S 128 x
(require)S 2 x(d)S 128 x(for)S 128 x(standalone)S 130 x(MicroV)S -33 x
(AX)S 3600 X 548 y(2000)S 150 x(and)S 151 x(V)S -33 x(AXstation)S 149 x
(2000)S 150 x(systems.)S 8361 6515 XY F40(T)S -34 x(able)S 151 x(1)S
3797 X 697 y(Disk)S 134 x(Space)S 134 x(Requirements)S 134 x(\(Block)S
134 x(Cluster)S 134 x(Size)S 133 x(=)S 134 x(1\))S 3600 8319 XY 11064 24 R
3600 8817 XY F44(T)S -29 x(ASK)S 6589 X(V)S -30 x(AX)S 3600 X 299 y
11064 24 R 3600 10149 XY F42(Installation:)S 6589 X(16,0)S -2 x(00)S
132 x(blocks)S 133 x(\(8.0)S 132 x(MB\))S 3600 11331 XY(Perman)S -2 x
(ent:)S 6589 X(1)S -30 x(1,00)S -2 x(0)S 133 x(blocks)S 133 x(\(5.5)S
131 x(MB\))S 3600 X 398 y 11064 24 R 3600 13309 XY F38(These)S 202 x
(counts)S 203 x(refer)S 202 x(to)S 201 x(the)S 202 x(disk)S 202 x(space)S
202 x(require)S 2 x(d)S 201 x(on)S 202 x(the)S 3600 X 548 y(system)S
189 x(disk.)S 316 x(The)S 189 x(sizes)S 189 x(are)S 189 x(appro)S 2 x
(ximate;)S 208 x(actual)S 188 x(sizes)S 3600 X 548 y(may)S 134 x(vary)S
135 x(depending)S 135 x(on)S 134 x(the)S 133 x(user)S 18 x(')S -9 x
(s)S 134 x(system)S 134 x(environm)S 2 x(ent,)S 3600 X 548 y(con\211gur)S
2 x(ation,)S 149 x(and)S 150 x(software)S 150 x(options.)S 3600 16334 XY
F39(Parallel)S 149 x(Processing)S 151 x(Hardware)S 150 x(Requireme)S
2 x(nts:)S 3600 17716 XY F38(Multiprocessor)S 231 x(V)S -33 x(AX)S 229 x
(systems)S 230 x(are)S 230 x(require)S 2 x(d)S 229 x(for)S 230 x(parallel)S
3600 X 547 y(execution)S 208 x(of)S 207 x(decom)S 2 x(posed)S 208 x
(DO-loops.)S 373 x(However)S -24 x(,)S 221 x(appli-)S 3600 X 548 y(cations)S
196 x(that)S 195 x(are)S 197 x(compiled)S 196 x(using)S 196 x(the)S
196 x(Digital)S 194 x(Fortran)S 197 x(77)S 3600 X 548 y(parallel)S 174 x
(processing)S 176 x(options)S 174 x(will)S 172 x(run)S 175 x(correctly)S
175 x(on)S 174 x(single-)S 3600 X 548 y(process)S 2 x(or)S 150 x(systems.)S
3600 21288 XY F39(V)S -17 x(ector)S 150 x(Proces)S 2 x(sing)S 149 x
(Hardware)S 151 x(Requirements:)S 3600 22670 XY F38(V)S -25 x(ector-p)S
2 x(rocessor)S 207 x(equipped)S 206 x(V)S -33 x(AX)S 205 x(systems)S
206 x(are)S 206 x(required)S 3600 X 547 y(for)S 261 x(prope)S 2 x(r)S
261 x(execution)S 262 x(of)S 261 x(vectorized)S 262 x(DO-loops.)S 535 x
(How-)S 3600 X 548 y(ever)S -24 x(,)S 222 x(applications)S 207 x(that)S
207 x(are)S 208 x(compiled)S 208 x(using)S 208 x(the)S 207 x(vector-)S
3600 X 548 y(process)S 2 x(ing)S 121 x(options)S 122 x(wil)S -2 x(l)S
121 x(run)S 122 x(on)S 122 x(all)S 121 x(V)S -33 x(AX)S 121 x(proces)S
2 x(sors,)S 127 x(using)S 3600 X 548 y(the)S 209 x(V)S -34 x(AX)S 209 x
(V)S -25 x(ector)S 209 x(Instruction)S 209 x(Emulation)S 208 x(Facility)S
207 x(\(VVIEF\))S 3600 X 548 y(that)S 238 x(is)S 237 x(supplied)S 238 x
(with)S 237 x(OpenVMS.)S 239 x(Execution)S 238 x(using)S 238 x(the)S
3600 X 548 y(VVIEF)S 159 x(may)S 161 x(be)S 160 x(signi\211cantly)S
160 x(slower)S 160 x(than)S 160 x(recomp)S 2 x(ili)S -2 x(ng)S 160 x
(for)S 3600 X 548 y(scalar)S 150 x(execution.)S 3600 28484 XY F40(OPTIONAL)S
148 x(HARDW)S -26 x(ARE)S 3600 29865 XY F38(Digital)S 194 x(Fortran)S
196 x(77)S 195 x(for)S 196 x(OpenVMS)S 196 x(supports)S 196 x(the)S
196 x(optional)S 3600 X 548 y(vector)S 186 x(proce)S 2 x(ssing)S 185 x
(hardwar)S 2 x(e)S 185 x(on)S 187 x(the)S 185 x(V)S -33 x(AX)S 150 x
(9000)S 186 x(and)S 186 x(the)S 3600 X 548 y(V)S -33 x(AX)S 149 x(6000)S
124 x(Model)S 123 x(400)S 124 x(and)S 123 x(V)S -33 x(AX)S 149 x(6000)S
124 x(Model)S 123 x(500)S 124 x(proces-)S 3600 X 548 y(sors.)S 3600 32890 XY
(Floating)S 198 x(point)S 199 x(intensive)S 198 x(applications)S 199 x
(should)S 199 x(be)S 200 x(run)S 199 x(on)S 3600 X 548 y(con\211gur)S
2 x(ations)S 243 x(with)S 242 x(the)S 244 x(appropr)S 2 x(iate)S 243 x
(hardware)S 244 x(suppo)S 2 x(rt)S 3600 X 548 y(for)S 209 x(the)S 209 x
(\212oating)S 209 x(point)S 208 x(data)S 210 x(types)S 209 x(being)S
209 x(used.)S 378 x(Consult)S 3600 X 548 y(the)S 199 x(base)S 199 x
(oper)S 2 x(ating)S 198 x(system)S 200 x(Software)S 198 x(Produc)S 2 x
(t)S 198 x(Descrip-)S 3600 X 548 y(tion)S 208 x(\(SPD\))S 208 x(for)S
209 x(the)S 208 x(Floating)S 208 x(Point)S 208 x(Accelerator)S 209 x
(or)S 209 x(other)S 3600 X 548 y(\212oating)S 186 x(point)S 187 x(hardware)S
187 x(appro)S 2 x(priate)S 186 x(for)S 186 x(your)S 187 x(con\211gu)S
2 x(ra-)S 3600 X 548 y(tion.)S 15854 4834 XY F40(CLUSTER)S 148 x(ENVIRONMENT)S
15854 6010 XY F38(This)S 115 x(layered)S 115 x(produ)S 2 x(ct)S 114 x
(is)S 115 x(fully)S 113 x(suppo)S 2 x(rted)S 115 x(when)S 115 x(installed)S
114 x(on)S 15854 X 548 y(any)S 175 x(valid)S 173 x(and)S 175 x(licensed)S
174 x(VMScluster*)S 175 x(con\211gura)S 2 x(tion)S 173 x(with-)S 15854 X
548 y(out)S 235 x(restrictions.)S 456 x(The)S 236 x(HARDW)S -18 x(ARE)S
235 x(REQUIR)S -2 x(EMENTS)S 15854 X 548 y(sections)S 163 x(of)S 163 x
(this)S 162 x(product')S -8 x(s)S 163 x(Software)S 163 x(Product)S 164 x
(Description)S 15854 X 548 y(and)S 121 x(System)S 121 x(Suppor)S 2 x
(t)S 120 x(Addendum)S 122 x(detail)S 120 x(any)S 121 x(special)S 120 x
(hard-)S 15854 X 548 y(ware)S 150 x(required)S 151 x(by)S 150 x(this)S
149 x(product.)S 15854 9925 XY(*)S 345 x(VMScluster)S 344 x(con\211gu)S
2 x(rations)S 344 x(are)S 345 x(fully)S 343 x(described)S 346 x(in)S
15854 X 548 y(the)S 304 x(VMScluster)S 304 x(Software)S 303 x(Product)S
304 x(Description)S 304 x(\(SPD)S 15854 X 548 y(29.78.xx\))S 143 x(and)S
144 x(include)S 143 x(CI,)S 141 x(Ethernet,)S 144 x(SCSI)S 142 x(and)S
143 x(Mixed)S 143 x(In-)S 15854 X 548 y(terconnec)S 2 x(t)S 149 x(con\211gura)S
2 x(tions.)S 15854 13343 XY F40(SOFTW)S -25 x(ARE)S 149 x(REQUIREMENTS)S
15854 14867 XY F38(\201)S 441 x(OpenVMS)S 150 x(V)S -33 x(AX)S 150 x
(Operating)S 150 x(System)S 150 x(V5.4)S 149 x(-)S 150 x(V7.1)S 15854 16640 XY
F40(OpenVMS)S 150 x(V)S -33 x(AX)S 149 x(T)S -33 x(ailoring)S 15854 17816 XY
F38(The)S 228 x(followi)S -2 x(ng)S 228 x(OpenVMS)S 228 x(classes)S
228 x(are)S 228 x(requ)S 2 x(ired)S 227 x(for)S 228 x(full)S 15854 X
548 y(functionality)S 149 x(of)S 149 x(this)S 149 x(layered)S 150 x
(prod)S 2 x(uct:)S 15854 19540 XY(\201)S 441 x(OpenVMS)S 150 x(Required)S
151 x(Saveset)S 15854 20616 XY(\201)S 441 x(Program)S 2 x(ming)S 150 x
(Support)S 15854 21692 XY(\201)S 441 x(Util)S -2 x(ities)S 15854 23465 XY
F40(OPTIONAL)S 148 x(SOFTW)S -25 x(ARE)S 15854 24890 XY F38(\201)S 441 x
(CDD/)S -2 x(Repository*)S 151 x(for)S 149 x(VMS)S 150 x(V3.0)S 150 x
(-)S 150 x(V5.3)S 16452 26165 XY F40(Note:)S 299 x F38(The)S 129 x(reference)S
130 x(to)S 128 x(CDD/Repository)S 128 x(refers)S 129 x(to)S 128 x(all)S
16452 X 548 y(the)S 190 x(CDD)S 189 x(products:)S 281 x(V)S -33 x(AX)S
149 x(CDD)S(,)S 199 x(V)S -33 x(AX)S 149 x(CDD)S(/Plus,)S 199 x(and)S
16452 X 548 y(Oracle)S 150 x(CDD/)S -2 x(Repository)S -32 x(.)S 15854 28337 XY
(\201)S 441 x(DEC)S 204 x(Languag)S 2 x(e-Sensitive)S 205 x(Editor/DEC)S
203 x(Source)S 206 x(Code)S 16452 X 548 y(Analyzer)S 150 x(V3.1)S 150 x
(-)S 150 x(V4.0)S 15854 29961 XY(\201)S 441 x(Digit)S -2 x(al)S 149 x
(Extended)S 150 x(Math)S 150 x(Library)S 150 x(V1.0)S 149 x(-)S 149 x
(V2.9)S 150 x(for)S 149 x(Open-)S 16452 X 548 y(VMS)S 15854 31585 XY
(\201)S 441 x(KAP)S 261 x(for)S 262 x(V)S -33 x(AX)S 150 x(FOR)S -9 x
(TRAN)S 261 x(V1.0-V2.0)S 262 x(on)S 262 x(OpenVM)S 2 x(S)S 16452 X
548 y(V)S -33 x(AX)S 15854 33906 XY F40(GROWTH)S 149 x(CONSI)S -2 x
(DERA)S -34 x(TIONS)S 15854 35082 XY F38(The)S 184 x(minimum)S 185 x
(hardware)S 2 x(/software)S 183 x(requirem)S 2 x(ents)S 184 x(for)S
184 x(any)S 15854 X 548 y(future)S 159 x(version)S 159 x(of)S 158 x
(this)S 158 x(product)S 159 x(may)S 159 x(be)S 159 x(dif)S -9 x(ferent)S
159 x(from)S 158 x(the)S 15854 X 548 y(requirem)S 2 x(ents)S 149 x(for)S
150 x(the)S 150 x(current)S 150 x(version.)S 15132 38868 XY F40(4)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (5) 5
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Digital)S 132 x(Fortran)S 134 x(77)S 133 x(V)S
-24 x(ersion)S 133 x(6.5)S 133 x(for)S 133 x(OpenVMS)S 133 x(V)S -33 x
(AX)S 133 x(Systems)S 399 x(SPD)S 133 x(25.16.49)S 3600 4834 XY(DISTRIB)S
-2 x(UTION)S 148 x(MEDIA)S 3600 X 897 y F38(9-track)S 151 x(1600)S 150 x
(BPI)S 149 x(magne)S 2 x(tic)S 148 x(tape,)S 150 x(TK50)S 150 x(Streaming)S
150 x(T)S -50 x(ape)S 3600 X 896 y(This)S 165 x(prod)S 2 x(uct)S 165 x
(is)S 166 x(also)S 165 x(available)S 166 x(as)S 166 x(part)S 166 x(of)S
166 x(the)S 165 x(OpenVM)S 2 x(S)S 3600 X 548 y(Consolidated)S 209 x
(Software)S 209 x(Distributi)S -2 x(on)S 210 x(on)S 209 x(CD\203ROM)S
208 x(\(QA-)S 3600 X 548 y(VWJ8A-A8\))S 2 x(.)S 3600 X 897 y(The)S 256 x
(software)S 256 x(docume)S 2 x(ntation)S 255 x(for)S 256 x(this)S 255 x
(produ)S 2 x(ct)S 255 x(is)S 255 x(also)S 3600 X 548 y(available)S 177 x
(as)S 178 x(part)S 178 x(of)S 177 x(the)S 178 x(OpenVMS)S 178 x(Online)S
177 x(Documenta-)S 3600 X 548 y(tion)S 149 x(Library)S 151 x(on)S 150 x
(CD\203ROM)S(.)S 3600 11210 XY F40(ORDERIN)S -2 x(G)S 149 x(INFORMA)S
-34 x(TION)S 3600 X 897 y F38(Digital)S 148 x(Fortran)S 150 x(77)S 150 x
(for)S 150 x(OpenVMS)S 150 x(V)S -33 x(AX)S 150 x(Systems)S 3600 X 897 y
F39(Software)S 150 x(Licenses:)S 4198 X 896 y F38(Personal)S 150 x(Use:)S
199 x(QL-100AA-)S 2 x(2B)S 4198 X 548 y(Concurren)S 2 x(t)S 149 x(Use:)S
199 x(QL-100AA-3B)S 4198 X 548 y(Unlimit)S -2 x(ed)S 150 x(System)S
150 x(Use:)S 199 x(QL-100)S 2 x(A*-**)S 4198 X 548 y(Software)S 149 x
(Media/Docume)S 2 x(ntation:)S 198 x(QA-100A*)S 2 x(-**)S 4198 X 548 y
(Software)S 208 x(Docume)S 2 x(ntation)S 208 x(\(Hard)S 209 x(Copy\):)S
318 x(QA-100AA-)S 4198 X 548 y(GZ)S -623 x 548 y(Software)S 149 x(Produc)S
2 x(t)S 149 x(Services:)S 199 x(QT)S -25 x(-100A)S 2 x(*-**)S 3600 X
897 y(*)S 183 x(Denotes)S 182 x(variant)S 183 x(\211elds.)S 298 x(For)S
182 x(additional)S 182 x(information)S 183 x(on)S 3600 X 547 y(available)S
139 x(licenses,)S 141 x(services,)S 141 x(and)S 140 x(media,)S 141 x
(refer)S 140 x(to)S 139 x(the)S 139 x(ap-)S 3600 X 548 y(propriate)S
151 x(price)S 149 x(book.)S 3600 20675 XY F40(SOFTW)S -25 x(ARE)S 149 x
(LICENSIN)S -2 x(G)S 3600 X 896 y F38(This)S 219 x(software)S 219 x
(is)S 218 x(only)S 219 x(furnished)S 220 x(under)S 221 x(a)S 219 x(license.)S
407 x(For)S 3600 X 548 y(more)S 255 x(information)S 255 x(about)S 255 x
(Digit)S -2 x(al')S -8 x(s)S 254 x(licensing)S 254 x(terms)S 255 x(and)S
3600 X 548 y(policies,)S 149 x(contact)S 150 x(your)S 150 x(local)S
149 x(Digital)S 148 x(of)S -8 x(\211ce.)S 3600 X 897 y F39(License)S
150 x(Mana)S 2 x(gement)S 150 x(Facility)S 148 x(Suppor)S 2 x(t:)S 3600 X
897 y F38(This)S 215 x(layered)S 216 x(produ)S 2 x(ct)S 215 x(supports)S
216 x(the)S 215 x(OpenVMS)S 217 x(License)S 3600 X 548 y(Manag)S 2 x
(ement)S 150 x(Facilit)S -2 x(y)S -33 x(.)S 3600 X 896 y(License)S 189 x
(units)S 187 x(for)S 188 x(this)S 187 x(prod)S 2 x(uct)S 187 x(are)S
189 x(allocated)S 188 x(on)S 188 x(an)S 188 x(Un-)S 3600 X 548 y(limited)S
159 x(System)S 160 x(Use)S 160 x(plus)S 160 x(Persona)S 2 x(l)S 159 x
(Use)S 160 x(and)S 160 x(Concurre)S 2 x(nt)S 3600 X 548 y(Use)S 150 x
(basis.)S 3600 X 897 y(Each)S 125 x(Personal)S 125 x(Use)S 124 x(license)S
124 x(allows)S 124 x(one)S 124 x(identi\211ed)S 125 x(individ-)S 3600 X
548 y(ual)S 186 x(to)S 187 x(use)S 187 x(the)S 186 x(layered)S 188 x
(product.)S 311 x(Each)S 187 x(Concurrent)S 187 x(Use)S 3600 X 548 y
(license)S 189 x(allows)S 188 x(any)S 190 x(one)S 190 x(individual)S
188 x(at)S 189 x(a)S 189 x(time)S 189 x(to)S 189 x(use)S 189 x(the)S
3600 X 548 y(layered)S 150 x(prod)S 2 x(uct.)S 3600 X 896 y(For)S 199 x
(more)S 200 x(information)S 199 x(on)S 200 x(the)S 199 x(OpenVMS)S 200 x
(License)S 199 x(Man-)S 3600 X 548 y(ageme)S 2 x(nt)S 130 x(Facility)S
130 x(refer)S 132 x(to)S 131 x(the)S 131 x(appro)S 2 x(priate)S 131 x
(OpenVMS)S 132 x(Op-)S 3600 X 548 y(erating)S 150 x(System)S 150 x(SPD)S
149 x(or)S 150 x(docum)S 2 x(entation.)S 3600 33028 XY F40(SOFTW)S -25 x
(ARE)S 149 x(PRODUCT)S 148 x(SER)S -8 x(VICES)S 3600 X 897 y F38(A)S
190 x(variety)S 189 x(of)S 190 x(service)S 190 x(options)S 190 x(are)S
191 x(available)S 189 x(from)S 190 x(Digital.)S 3600 X 548 y(For)S 150 x
(more)S 151 x(information,)S 149 x(contact)S 150 x(your)S 150 x(local)S
149 x(Digital)S 148 x(of)S -8 x(\211ce.)S 15854 4834 XY F40(SOFTW)S
-25 x(ARE)S 149 x(W)S -24 x(ARRA)S -2 x(NTY)S 15854 5937 XY F38(W)S
-16 x(arranty)S 136 x(for)S 136 x(this)S 135 x(software)S 136 x(produ)S
2 x(ct)S 135 x(is)S 135 x(provided)S 137 x(by)S 136 x(Digital)S 15854 X
548 y(with)S 218 x(the)S 220 x(purchas)S 2 x(e)S 219 x(of)S 219 x(a)S
220 x(license)S 219 x(for)S 220 x(the)S 219 x(produ)S 2 x(ct.)S 408 x
(This)S 15854 X 548 y(means)S 181 x(that)S 179 x(DIGIT)S -35 x(AL)S
180 x(will)S 178 x(remedy)S 181 x(any)S 180 x(nonconform)S 2 x(ance)S
15854 X 548 y(when)S 167 x(it)S 166 x(is)S 166 x(reported)S 168 x(to)S
167 x(DIGI)S -2 x(T)S -33 x(AL)S 167 x(by)S 167 x(the)S 167 x(customer)S
168 x(during)S 15854 X 548 y(the)S 150 x(warranty)S 150 x(period.)S
15854 9231 XY(The)S 206 x(warranty)S 207 x(period)S 206 x(is)S 206 x
(one)S 206 x(year)S -24 x(.)S 368 x(It)S 205 x(begins)S 206 x(when)S
206 x(the)S 15854 X 548 y(software)S 183 x(is)S 182 x(install)S -2 x
(ed)S 183 x(or)S 183 x(thirty)S 182 x(days)S 183 x(after)S 182 x(delivery)S
183 x(to)S 182 x(the)S 15854 X 548 y(end)S 183 x(user)S -24 x(,)S 190 x
(whichever)S 183 x(occur)S 2 x(s)S 182 x(\211rst)S 182 x(and)S 183 x
(expires)S 184 x(one)S 183 x(year)S 15854 X 548 y(later)S -25 x(.)S
266 x(All)S 170 x(warranty)S 173 x(related)S 172 x(support)S 173 x(for)S
171 x(this)S 172 x(software)S 171 x(will)S 15854 X 548 y(end)S 150 x
(one)S 151 x(year)S 150 x(after)S 149 x(release)S 151 x(of)S 149 x(the)S
150 x(subsequ)S 2 x(ent)S 149 x(versions.)S 15854 12526 XY(W)S -16 x
(arranty)S 162 x(is)S 160 x(provided)S 162 x(in)S 161 x(the)S 160 x
(country)S 162 x(of)S 161 x(purchas)S 2 x(e.)S 233 x(DIGI)S -2 x(-)S
15854 X 548 y(T)S -33 x(AL)S 147 x(will)S 146 x(provide)S 149 x(a)S
147 x(service)S 148 x(location)S 148 x(which)S 147 x(will)S 146 x(accept)S
148 x(re-)S 15854 X 548 y(porting)S 157 x(\(in)S 156 x(format)S 157 x
(prescribed)S 158 x(by)S 157 x(DIGI)S -2 x(T)S -33 x(AL\))S 157 x(of)S
156 x(a)S 157 x(noncon-)S 15854 X 548 y(formance)S 122 x(problem)S 122 x
(caused)S 122 x(when)S 120 x(using)S 121 x(the)S 121 x(licensed)S 121 x
(soft-)S 15854 X 548 y(ware)S 187 x(under)S 188 x(normal)S 187 x(condtions)S
187 x(as)S 187 x(de\211ned)S 188 x(by)S 186 x(this)S 186 x(SPD.)S 15854 X
547 y(DIGIT)S -34 x(AL)S 150 x(will)S 148 x(reme)S 2 x(dy)S 150 x(a)S
151 x(nonconform)S 2 x(ance)S 151 x(problem)S 151 x(in)S 150 x(the)S
15854 X 548 y(curren)S 2 x(t)S 129 x(unaltered)S 132 x(release)S 131 x
(of)S 130 x(the)S 131 x(licensed)S 130 x(software)S 131 x(by)S 131 x
(is-)S 15854 X 548 y(suing)S 159 x(a)S 159 x(correction)S 159 x(information)S
159 x(such)S 159 x(as:)S 217 x(correc)S 2 x(tion)S 158 x(doc-)S 15854 X
548 y(umentation,)S 139 x(corrected)S 137 x(code;)S 141 x(or)S 136 x
(a)S 135 x(notice)S 136 x(of)S 136 x(availabili)S -2 x(ty)S 136 x(of)S
15854 X 548 y(corrected)S 177 x(code;)S 188 x(or)S 176 x(a)S 176 x(restriction)S
175 x(or)S 175 x(a)S 176 x(bypass.)S 277 x(The)S 176 x(cus-)S 15854 X
548 y(tomer)S 184 x(will)S 182 x(be)S 183 x(respo)S 2 x(nsible)S 183 x
(for)S 183 x(the)S 184 x(prepara)S 2 x(tion)S 183 x(and)S 184 x(sub-)S
15854 X 548 y(mission)S 150 x(of)S 149 x(the)S 150 x(problem)S 151 x
(report)S 150 x(to)S 149 x(the)S 150 x(service)S 150 x(location.)S 15854 20254 XY
F40(W)S -24 x(ARRA)S -2 x(NTY)S 149 x(EXCLUSION)S 15854 21356 XY F38
(DIGIT)S -34 x(AL)S 250 x(DOES)S 250 x(NOT)S 250 x(W)S -17 x(ARRANT)S
250 x(THA)S -34 x(T)S 251 x(THE)S 250 x(SOFT-)S 15854 X 548 y(W)S -16 x
(ARE)S 254 x(LICENSED)S 253 x(T)S -8 x(O)S 254 x(CUST)S -9 x(OMER)S
255 x(SHALL)S 254 x(BE)S 255 x(ER-)S 15854 X 548 y(ROR)S 108 x(FREE,)S
109 x(THA)S -34 x(T)S 109 x(THE)S 109 x(SOFTW)S -17 x(ARE)S 109 x(SHALL)S
109 x(OPERA)S -33 x(TE)S 15854 X 548 y(WITH)S 270 x(ANY)S 271 x(HARDW)S
-18 x(ARE)S 271 x(AND)S 270 x(SOFTW)S -17 x(ARE)S 270 x(OTHER)S 15854 X
548 y(THAN)S 122 x(AS)S 122 x(SPECIFIED)S 121 x(IN)S 122 x(THIS)S 121 x
(SPD,)S 122 x(THA)S -34 x(T)S 123 x(THE)S 122 x(SOFT-)S 15854 X 548 y
(W)S -16 x(ARE)S 275 x(SHALL)S 275 x(SA)S -33 x(TISFY)S 275 x(CUST)S
-9 x(OMER'S)S 275 x(OWN)S 275 x(SPE-)S 15854 X 548 y(CIFIC)S 187 x(REQUI)S
-2 x(REMENTS,)S 188 x(OR)S 188 x(THA)S -34 x(T)S 188 x(COPIES)S 187 x
(OF)S 188 x(THE)S 15854 X 548 y(SOFTW)S -17 x(ARE)S 237 x(OTHER)S 237 x
(THAN)S 236 x(THOSE)S 237 x(PROVIDED)S 236 x(OR)S 15854 X 548 y(AUTHORI)S
-2 x(ZED)S 297 x(BY)S 297 x(DIGIT)S -34 x(AL)S 297 x(SHALL)S 297 x(CONFORM)S
296 x(T)S -8 x(O)S 15854 X 548 y(THE)S 149 x(SPD.)S 15854 27390 XY(DIGIT)S
-34 x(AL)S 174 x(MAKES)S 175 x(NO)S 173 x(W)S -16 x(ARRANTI)S -2 x(ES)S
175 x(WITH)S 173 x(RESPECT)S 15854 X 548 y(T)S -8 x(O)S 134 x(THE)S
133 x(FITNESS)S 133 x(AND)S 134 x(OPERABILITY)S 133 x(OF)S 133 x(MODIFICA-)S
15854 X 548 y(TIONS)S 149 x(NOT)S 148 x(MADE)S 150 x(BY)S 150 x(DIGI)S
-2 x(T)S -33 x(AL.)S 15854 29589 XY(IF)S 152 x(THE)S 153 x(SOFTW)S -17 x
(ARE)S 153 x(F)S -25 x(AILS)S 153 x(T)S -8 x(O)S 152 x(FUNCTION)S 151 x
(FOR)S 153 x(REA-)S 15854 X 548 y(SONS)S 277 x(ST)S -34 x(A)S -33 x
(TED)S 277 x(ABOVE,)S 277 x(THE)S 276 x(CUST)S -9 x(OMER'S)S 277 x(W)S
-16 x(AR-)S 15854 X 548 y(RRANTY)S 165 x(WILL)S 166 x(BE)S 165 x(INV)S
-33 x(ALIDA)S -34 x(TED)S 165 x(AND)S 165 x(ALL)S 167 x(SER)S -9 x(VICE)S
15854 X 548 y(CALLS)S 130 x(WILL)S 131 x(BE)S 130 x(BILLABLE)S 130 x
(A)S -33 x(T)S 130 x(THE)S 129 x(PREV)S -33 x(AILING)S 129 x(PER)S 15854 X
548 y(CALL)S 150 x(RA)S -34 x(TES.)S 15854 32883 XY(This)S 231 x(Software)S
231 x(W)S -17 x(arran)S 2 x(ty)S 230 x(is)S 231 x(ef)S -8 x(fective)S
230 x(for)S 231 x(licensed)S 232 x(soft-)S 15854 X 548 y(ware)S 209 x
(products)S 209 x(ordere)S 2 x(d)S 208 x(in)S 208 x(the)S 208 x(United)S
208 x(States)S 208 x(after)S 208 x(Oc-)S 15854 X 548 y(tober)S 150 x
(1988)S 151 x(and)S 150 x(superse)S 2 x(des)S 150 x(all)S 148 x(prior)S
151 x(versions.)S 15854 35082 XY(The)S 108 x(above)S 108 x(information)S
107 x(is)S 107 x(valid)S 107 x(at)S 107 x(time)S 107 x(of)S 107 x(release.)S
186 x(Please)S 15854 X 548 y(contact)S 169 x(your)S 170 x(local)S 168 x
(Digital)S 167 x(of)S -8 x(\211ce)S 169 x(for)S 169 x(the)S 169 x(most)S
169 x(up-to-da)S 2 x(te)S 15854 X 548 y(information.)S 15132 38868 XY
F40(5)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Page: (6) 6
%%PageFonts: (atend)
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
PaperHeight PaperWidth PM 0 0 XY
0 SC 3600 3002 XY F40(Digital)S 149 x(Fortran)S 150 x(77)S 150 x(V)S
-25 x(ersion)S 150 x(6.5)S 150 x(for)S 150 x(OpenVMS)S 150 x(V)S -33 x
(AX)S 149 x(Systems)S 449 x(SPD)S 149 x(25.16.49)S 3600 4835 XY F38
(\251)S 221 x(1997)S 221 x(Digital)S 219 x(Equipment)S 221 x(Corpora)S
2 x(tion.)S 411 x(All)S 219 x(rights)S 221 x(re-)S 3600 X 548 y(served.)S
3600 X 897 y F42(\206)S 603 x(CRA)S -31 x(Y)S 133 x(is)S 134 x(a)S 132 x
(registere)S -2 x(d)S 133 x(trad)S -2 x(emark)S 132 x(of)S 132 x(Cray)S
132 x(Research)S -2 x(,)S 133 x(Inc.)S 3600 X 697 y(\206)S 603 x(IEEE)S
134 x(is)S 135 x(a)S 134 x(registere)S -2 x(d)S 135 x(trad)S -2 x(emark)S
134 x(of)S 134 x(the)S 134 x(Institute)S 133 x(of)S 134 x(Electri-)S
4497 X 498 y(cal)S 133 x(and)S 131 x(Electronics)S 133 x(Engine)S -2 x
(ers,)S 132 x(Inc.)S 3600 X 698 y(\206)S 603 x(Motif)S 136 x(is)S 137 x
(a)S 136 x(reg)S -2 x(istered)S 136 x(trad)S -2 x(emark)S 136 x(of)S
135 x(Open)S 136 x(Soft)S -2 x(ware)S 135 x(Foun-)S 4497 X 498 y(dation)S
-2 x(,)S 133 x(Inc.)S 3600 X 697 y(\206)S 603 x(IBM)S 137 x(is)S 138 x
(a)S 137 x(register)S -2 x(ed)S 137 x(trad)S -2 x(emark)S 137 x(of)S
137 x(Inte)S -2 x(rnationa)S -2 x(l)S 138 x(Business)S 4497 X 498 y
(Machines)S 132 x(Corp)S -2 x(oration)S 3600 X 698 y(\207)S 498 x(Oracle)S
134 x(CDD/Rep)S -2 x(ository)S 135 x(is)S 136 x(a)S 134 x(tradema)S
-2 x(rk)S 135 x(of)S 135 x(Oracle)S 134 x(Corpo)S -2 x(-)S 4497 X 498 y
(ration)S -2 x(.)S 3600 X 697 y(\207)S 498 x(DIGIT)S -30 x(AL)S 126 x
(Logo)S -2 x(,)S 128 x(CI,)S 126 x(DEC,)S 126 x(DEC)S 126 x(Fortran)S
-2 x(,)S 128 x(DECset,)S 127 x(DECwin-)S 4497 X 498 y(dow)S -2 x(s,)S
139 x(Digital,)S 139 x(MicroV)S -30 x(AX,)S 137 x(Open)S -2 x(VMS,)S
137 x(TK,)S 138 x(UL)S -30 x(TRIX,)S 137 x(V)S -30 x(AX,)S 4497 X 498 y
(V)S -30 x(AXELN,)S 137 x(V)S -30 x(AXft,)S 139 x(V)S -30 x(AXserver)S
-23 x(,)S 139 x(V)S -30 x(AXstation,)S 138 x(and)S 137 x(VMSclus-)S
4497 X 499 y(ter)S -23 x(,)S 132 x(are)S 132 x(trade)S -2 x(marks)S
133 x(of)S 132 x(Digital)S 133 x(Equipme)S -2 x(nt)S 133 x(Corp)S -2 x
(oration)S -2 x(.)S 15132 38868 XY F40(6)S
EP PP
%%PageTrailer
%%PageFonts: Helvetica-Bold Helvetica
%%PageProcessColors:
%%PageCustomColors: (BLACK)
%
%%Trailer
%%Pages: 6
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica
%%+ Helvetica-Oblique
%%DocumentNeededFonts: Helvetica-Bold
%%+ Helvetica Helvetica-Oblique
%%DocumentProcessColors: Black
%%DocumentCustomColors: (BLACK)
%%CMYKCustomColor: 0.0 0.0 0.0 1.0 (BLACK)
%
DVC$PSJob restore
end %DEC_DVC$dict
end %Color5044Dict
%
%%EOF
