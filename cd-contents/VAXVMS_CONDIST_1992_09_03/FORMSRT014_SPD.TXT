 

 Software
 Product
 Description

 ___________________________________________________________________

 PRODUCT NAME:  DECforms, Version 1.4                   SPD 29.90.04

 DESCRIPTION

 DECforms is a multiplatform, forms-based user interface management sys-
 tem for interactive applications running on VMS and RISC ULTRIX sys-
 tems. DECforms provides application developers a set of software de-
 velopment tools and a run-time environment for implementing powerful,
 yet user-friendly, forms-based human interfaces for these environments.
 DECforms supports form display on character cell devices, including
 the full range of VT series terminals and compatible terminal emula-
 tors on PCs and workstations.

 DECforms is Digital's strategic product for forms-based user inter-
 faces, replacing both VAX FMS and VAX TDMS. DECforms offers a robust
 combination of the capabilities of these previous forms systems while
 providing significant enhancements, including an architecture that can
 support the evolving needs of application developers and end users.

 DECforms is an integral component of Digital's Network Application Sup-
 port (NAS) environment, providing consistent forms-based user inter-
 face presentation services across multiple NAS platforms. DECforms is
 also the strategic front-end forms system for Digital's DECtp envi-
 ronment, offering an integrated, efficient asynchronous interface for
 VAX ACMS-based applications in either centralized or distributed trans-
 action processing environments.

 DECforms is based on the proposed ANSI/ISO standard for a Form Inter-
 face Management System (FIMS). The Form Interface Management System
 is an industry software system and is not the property of any company
 or group of companies, or of any organization or group of organiza-
 tions. DECforms offers a subset of the full functionality described

                               DIGITAL                      May 1992

                                                         AE-ME11E-TE

 

 by the CODASYL FIMS Journal of Development, with extensions tailored
 for the VMS and RISC ULTRIX environments.

 Over time, Digital's implementation of the FIMS will track the ANSI
 /ISO proposal as it advances through the standards proposal process.
 Any changes made by the CODASYL FIMS Committee to elements of the FIMS
 proposal that are implemented in DECforms software may result in ap-
 propriate and parallel changes in future releases of the DECforms prod-
 uct, even if these changes result in incompatibilities with previous
 versions of the product.

 The fundamental principles underlying the FIMS model are embodied in
 DECforms:

 o  True Separation of Form and Function

 o  Efficient Distribution of Forms Processing

 o  Ease of Use

 o  Flexibility of User Interface Control

 o  Programming Language Independence

 One of the most powerful principles reflected in the DECforms archi-
 tecture is complete separation of form and function. With DECforms,
 user interface processing is completely removed from the application
 program and totally isolated within the form itself. The application
 program is only concerned with the processing of data, not with the
 gathering and display of data at the user interface. This makes ap-
 plication programs much simpler to develop and easier to maintain.

 The true separation of form and function is possible because DECforms
 introduces a whole new concept in interactive forms. In previous forms
 systems, a form was simply a collection of fields and background text
 describing the form's appearance. With DECforms, a form includes not
 just elements related to appearance, but data and procedural elements
 which control the processing of the user's interaction with the form.


                                  2

 

 Forms are comprised of one or more panels which can be of any width
 and height (within the bounds of the physical display device). If the
 data required to satisfy an application program's request cannot be
 physically or aesthetically fit onto a single screen, multiple pan-
 els can be defined within a single form to contain all the necessary
 fields and background text. Thus, a form can be as large as needed.

 When panels are displayed on the screen, they are displayed in view-
 ports (windows) which can be located any place on the screen. DECforms
 provides a complete windowing system to manage these viewports. Mul-
 tiple viewports can exist simultaneously on the screen in any config-
 uration (occluding one another). DECforms automatically displays and
 removes viewports with their associated panels to gather and display
 all the data required by the application program.

 A form is described by the Independent Form Description Language (IFDL).
 The IFDL, while primarily declarational, includes procedural constructs
 as well. Field level control, screen navigation, panel management, and
 cross field and relational validations are among the many form pro-
 cessing activities which can be performed by the IFDL without the need
 to return to the application program.

 DECforms allows a single application to support multiple types of users
 with interfaces tailored to their needs. This tailoring is accomplished
 by utilizing another DECforms structure called a layout. Sets of pan-
 els tailored for a particular environment can be grouped together in
 a layout. A form can consist of multiple layouts, each tailored for
 a different environment. At run-time, DECforms chooses the one lay-
 out from within the form appropriate for the terminal user. Thus, a
 single application can be written to run both in a firm's New York of-
 fice and in its Paris office. In New York, DECforms selects the En-
 glish layout at run-time and in Paris, DECforms selects the French lay-
 out.

 The application program interacts with DECforms through a very sim-
 ple, six-call record-level interface. Either single or multiple records
 can be transferred in a single request.



                                  3

 

 All field-level processing is performed by the DECforms run-time sys-
 tem, not by the application program. The DECforms run-time system pro-
 vides a wide variety of form, panel, and field-level control and pro-
 cessing capabilities, including:

 o  Simple arithmetic operations within the form

 o  Scrolled regions with the following characteristics:

    -  Vertical or horizontal scrolling

    -  Containing one or two-dimensional arrays

    -  Partial or full-line scrolling

    -  Multiple lines per scrolled entry

 o  Conditionally protecting, highlighting, and concealing fields.

 o  Changing video attributes dynamically based on real-time events.

 o  Highlighting fields when the cursor is present.

 o  Icons as active panel elements.

 o  Color support on VT241s and VT340s via mapping to video attributes.

 o  Format Validations:

    -  Character Type

    -  Entry Required

    -  Minimum Length

    -  Full Field

    -  No Data Input

 o  Content Validations:

    -  Range Check

    -  List Check

 o  Context Validations:

    -  Against a general expression

                                  4

 

    -  Cross-field validations

 o  Calling a user-defined routine (procedural escape routine) to per-
    form more complex validations, including file lookups. Escape rou-
    tines execute in a synchronous fashion, so their use in VAX ACMS
    asynchronous environments does impose certain limitations.

 o  Built-in flexible field navigation capabilities allowing the op-
    erator to move among fields in any manner desired.

 o  Timeouts on field entries.

 o  Toggling between insert/overstrike mode.

 DECforms also provides an extremely flexible mechanism for defining
 functions and redefining keyboards to suit the operator environment.
 This includes support for multi-key function definitions.

 DECforms supports most VAX and RISC ULTRIX data types, which means that
 data type conversion does NOT have to be performed by the application
 program in most cases.

 Internationalization Features

 DECforms includes numerous internationalization features allowing ap-
 plications to support user interfaces in multi-lingual environments.
 These features include:

 o  Multiple natural language layouts per form.

 o  International date formats.

 o  Numeric data formatting, including replacing Decimal Point with Comma.

 o  Multiple character currency signs.

 o  Multiple character sets.

 o  Integrated support for Hebrew language form development and pro-
    cessing, including right-to-left text path.

 o  Flexible positioning of fields and literals to allow for transla-
    tion.

                                  5

 

 o  On VMS systems, all messages are in VMS Message Files to allow for
    translation.

 Components

 Form Development Environment (FDE)

 The FDE allows a form designer to create a form interactively and pro-
 vides menus that help the designer step through various tasks of form
 creation and modification. The FDE is used with the Panel Editor to
 create the appearance of the form. The FDE also provides access to text
 editors, including the VAX Language-Sensitive Editor on VMS (for those
 users who also have purchased that product) to allow a designer to write
 statements in the Independent Form Description Language (IFDL) that
 describes a DECforms form.

 Panel Editor

 The Panel Editor allows the user to create graphic form elements in
 an interactive, "what you see is what you get" (WYSIWYG) fashion. The
 Panel Editor supports the interactive creation of the visual elements
 of a form's panels; background text and graphics, and the locations,
 sizes, and attributes of fields.

 Independent Form Description Language (IFDL)

 The IFDL is a semi-procedural language that completely describes a DEC-
 forms form. It allows the form designer to create a form (non-interactively),
 specifying its appearance and functions. While the appearance of a form
 can be entirely created by the Panel Editor, procedural aspects of the
 forms, such as specialized responses to function keys and specialized
 data validation, must be specified directly with IFDL statements. An
 IFDL source file is a text file that can be created or modified with
 any text editor.

 On VMS systems, VAX Language-Sensitive Editor templates are available
 for the IFDL language to aid in the creation and maintenance of IFDL
 source code. DECforms also supports the Compile and Review capabil-
 ities of the VAX Language-Sensitive Editor.

                                  6

 

 The IFDL also includes a COPY statement that provides for the copy-
 ing of record and field definitions from the Common Data Dictionary
 /Repository (CDD/Repository) on VMS systems. DECforms supports CDD/Repository
 pieces tracking by depositing information in the dictionary indicat-
 ing that a particular form has used a certain record. DECforms can also
 use CDD/Repository records defined with the BASED ON attribute and those
 referenced through RDB$RELATIONS.

 IFDL Translator

 The IFDL translator compiles an IFDL source file into a binary form
 file. This form file is then ready for use with its application. Its
 appearance can be tested on a terminal screen or printed. The binary
 form file may be analyzed by other DECforms utilities, or edited in
 the FDE or Panel Editor.

 Back Translator

 The Back Translator converts a binary form file into an IFDL source
 file. Essentially, it performs the reverse function of the IFDL Trans-
 lator. As a result, it provides a method of editing the IFDL source
 for a form created or modified by the FDE or Panel Editor. The IFDL
 source statements the Back Translator produces also provide a complete
 textual description of the form.

 Extract Utility

 The Extract Utility performs three functions:

 o  Produces a printable representation of a form's panels from a form
    file.

 o  Creates object modules containing a form. These object modules can
    then be linked in an executable image with a program as a memory-
    resident form for use by the same program in a single session or
    in multiple sessions. On VMS systems, the modules can also be linked
    in shareable images for use by multiple sessions from multiple pro-
    cesses.


                                  7

 

 o  Produces an object module that contains pointers, or vectors, to
    procedural escape routines named in the form file. Escape routines
    are calls from the form to user-supplied subroutines created to do
    additional processing outside the form.

 VAX FMS Converter - (Available on VMS Systems)

 The VAX FMS Converter is a migration tool that converts a VAX FMS form
 or the forms in a VAX FMS form library into a DECforms IFDL source file.
 This process converts the appearance of the VAX FMS forms into a sim-
 ilar appearance described by the DECforms IFDL. The converter does NOT
 convert the application program or the User Action Routines associ-
 ated with the VAX FMS forms. The VAX FMS Converter works with forms
 created with VAX FMS V2.0 or later.

 VAX TDMS Converter - (Available on VMS Systems)

 The VAX TDMS Converter is a migration tool that converts the forms and,
 optionally, the requests in a VAX TDMS Request Library Definition into
 DECforms IFDL source files. This process converts the appearance of
 the VAX TDMS forms and some of the request logic into similar enti-
 ties described by the DECforms IFDL. The converter does NOT convert
 the application program associated with the VAX TDMS forms and requests.
 The VAX TDMS Converter works with forms and requests created with VAX
 TDMS V1.7 or later.

 Test Utility

 The Test Utility allows certain aspects of the form to be tested sep-
 arately from its application program. It allows a form designer to check
 the appearance of a form's panels without having to write a program
 first.

 Form Manager

 The Form Manager is the interface between an application program and
 a display device. It is a run-time system that controls form display
 and operator input on terminals. The Form Manager provides six requests
 for communication between the form and the application. These requests
 (routines in the Form Manager) allow the application to enable the form

                                  8

 

 for use, send data to the form and receive data from it (separately
 or in one call), disable the form at the end of a session, or asyn-
 chronously cancel a request. The Form Manager also provides services
 for printing the form.

 DECforms offers two versions of this six-call Application Programming
 Interface (API): a VMS-specific API and a portable API for both VMS
 and RISC ULTRIX systems. The portable API provides for form and ap-
 plication portability at the source code level.

 Sample Applications and Demonstration Forms

 The sample applications show how a form and an application program can
 interact. One of the samples includes a simple form with a few pan-
 els and a simple application program that makes requests of the form
 through the Form Manager. This introductory sample application is avail-
 able only in FORTRAN and is available only on VMS systems.

 The more complex sample application includes a form with many panels
 and many responses to various events as well as an application pro-
 gram that makes several requests of the form. This application is avail-
 able on VMS systems in Ada, BASIC, C, COBOL, DIBOL, FORTRAN, Pascal,
 and PL/I and on RISC ULTRIX systems in C and FORTRAN.

 In addition to the sample applications, the DECforms kit contains a
 package of demonstration forms, their sources, and a demonstration guide
 illustrating a number of the key features of DECforms.

 Optional DECforms Run-time System

 An optional DECforms run-time system is available separately. The only
 DECforms component available in this option is the Form Manager. The
 run-time system allows the execution of applications using DECforms
 for terminal display and management on a machine other than the one
 used to develop the application.

 Documentation

 The DECforms Documentation Set consists of:

 o  DECforms Guide to Developing Forms

                                  9

 

 o  DECforms Guide to Programming

 o  DECforms Reference Manual

 o  DECforms Style Guide

 o  IFDL Syntax Summary Card

 o  DECforms Keypad Card

 For VMS systems, the following additional manuals are included in the
 documentation set:

 o  Guide to Converting VAX FMS Applications

 o  Guide to Converting VAX TDMS Applications

 HARDWARE REQUIREMENTS

 Processor and/or hardware configurations as specified in the System
 Support Addendum (SSA 29.90.04-x).

 SOFTWARE REQUIREMENTS

 One of the following operating systems on the appropriate hardware:

 o  VMS Operating System

 o  ULTRIX Operating System or ULTRIX Worksystem Software

 Refer to System Support Addendum (SSA 29.90.04-x) for availability and
 versions of prerequisite/optional software.

 ORDERING INFORMATION

 On VMS Systems:

 Full Development System


                                 10

 

 Software Licenses: QL-VCHA*-**
 Software Media: QA-VCHAA-**
 Software Documentation: QA-VCHAA-GZ
 Software Product Services: QT-VCHA*-**

 Run-time System

 Software Licenses: QL-VNSA*-**
 Software Media: QA-VNSAA-**
 Software Product Services: QT-VNSA*-**






























                                 11

 

 On RISC ULTRIX Systems:

 Full Development System

 Software Licenses: QL-GVRA*-**
 Software Media: QA-GVRAA-**
 Software Documentation: QA-GVRAA-GZ
 Software Product Services: QT-GVRA*-**

 Run-time System

 Software Licenses: QL-GVSA*-**
 Software Media: QA-GVSAA-**
 Software Product Services: QT-GVSA*-**

 *  Denotes variant fields. For additional information on available li-
    censes, services and media, refer to the appropriate price book.

 SOFTWARE LICENSING

 This software is furnished under the licensing provisions of Digital
 Equipment Corporation's Standard Terms and Conditions. For more in-
 formation about Digital's licensing terms and policies, contact your
 local Digital office.

 License Management Facility Support

 This layered product supports the VMS and ULTRIX License Management
 Facilities.

 License units for the Full Development System are allocated on an Un-
 limited System Use and Personal Use basis. License units for the Run-
 time Only System are allocated on an Unlimited System Use and Concur-
 rent Use basis.

 The Full Development System offers a Personal Use license. Each Per-
 sonal Use license allows an identified individual to use the layered
 product.


                                 12

 

 The Run-time Only System offers a Concurrent Use license. Each Con-
 current Use license allows any one individual at a time to use the lay-
 ered product. This license type is NOT recommended for any applica-
 tion where users cannot tolerate being denied access to the applica-
 tion. In particular, it is recommended that VAX ACMS-based applica-
 tions use the Unlimited System Use license rather than the Concurrent
 Use license.

 For more information on the VMS License Management Facility, refer to
 the VMS Operating System Software Product Description (SPD 25.01.xx)
 or the License Management Facility manual of the VMS Operating Sys-
 tem documentation set.

 For more information on the ULTRIX License Management Facility, re-
 fer to the ULTRIX Operating System Software Product Description (SPD
 26.40.xx) or the Guide to Software Licensing in the ULTRIX Operating
 System documentation set.

 SOFTWARE PRODUCT SERVICES

 A variety of service options are available from Digital. For more in-
 formation, contact your local Digital office.

 SOFTWARE WARRANTY

 Warranty for this software product is provided by Digital with the pur-
 chase of a license for the product as defined in the Software Warranty
 Addendum of this SPD.

 

 [R]  IBM is a registered trademark of International Business Ma-
    chines Corporation.

 [TM]The DIGITAL Logo, VAX, VMS, MicroVAX, VAXcluster, VAXstation,
    VAXserver, DECforms, DECintact, VT, VAX FMS, VAX ACMS, DEC-
    server, ULTRIX, DECstation, DECsystem, CI and CDD/Repository
    are trademarks of Digital Equipment Corporation.


                                 13
