 

 Software
 Product
 Description

 ___________________________________________________________________

 PRODUCT NAME:  VAX Ada, Version 2.3                    SPD 26.60.11

 DESCRIPTION

 VAX Ada is Digital Equipment Corporation's validated implementation
 of the full ANSI/MIL-STD-1815A-1983 Ada Language. As a result of meet-
 ing the ANSI standard, VAX Ada also conforms to the Federal Informa-
 tion Processing Standard (FIPS-119). The VAX Ada compiler runs under
 the VMS Operating System and generates optimized, shareable, and position-
 independent code.

 As a native mode VMS language, VAX Ada is integrated into the VMS com-
 mon language environment. All VMS system services and utilities are
 thus available to programs written in VAX Ada. VAX Ada supports the
 VAX Record Management Services (RMS) sequential, relative, and indexed
 file organizations and associated access methods. VAX Ada programs can
 invoke modules written in other VMS languages. Additionally, programs
 written in other languages can invoke VAX Ada modules.

 Ada is a powerful, general-purpose language that supports many mod-
 ern programming practices. The language was designed as the result of
 a competition sponsored by the United States Department of Defense.
 The purpose of the competition was to define a language suitable for
 programming embedded computer systems. Among the requirements for the
 language were features that would reduce software costs by increas-
 ing maintainability, evolvability, reliability, and portability.

 Ada meets these requirements by providing a modular structure for pro-
 grams and allowing separate compilation of program units, as well as
 providing strong typing, exception handling, standard language fea-
 tures that must be supported across implementations. Ada provides a
 number of other features that make it suitable for a variety of ap-
 plications including general systems and computational applications.

                               DIGITAL                      May 1992

                                                         AE-EU91L-TE

 

 Because it includes language features that support multitasking, Ada
 is particularly well suited for real-time applications.

 Ada Language Features

 o  Strong typing - An object (variable) of a given type may take on
    only those values that are appropriate to that type, and only cer-
    tain predefined operations may be performed to data of that type.
    Because type checking is done at compile time, strong typing en-
    sures that any errors associated with incorrect data types are de-
    tected at compile time.

 o  Data Abstraction - Also known as information hiding, data abstrac-
    tion hides implementation details while providing users with mech-
    anisms for using the implementation. Abstraction allows the user
    to focus on important characteristics while ignoring underlying de-
    tails. Ada provides various levels of abstraction through features
    such as private data types and packages.

 o  Concurrent Processing - For many applications, it is important that
    a program be conceived of as a number of parallel, rather than se-
    rial activities. Most high-order languages provide little or no sup-
    port for handling such parallel or concurrent activities; they rely
    on facilities of the host operating system. Ada uses tasks to al-
    low parallel activities to be programmed directly within the lan-
    guage.

 o  Separate compilation - Ada's separate compilation feature allows
    a programmer to divide a large program into compilation units that
    may be compiled at different times. When a unit is compiled, the
    Ada program library manager records information about that unit and
    other related units. This feature is unlike separate compilation
    features in other languages, where very little information about
    separately compiled modules is maintained.

 o  Generic Definitions - A generic unit is a template from which spe-
    cific instances can be made at compile time. In many cases, the logic
    of an algorithm or a set of operations is independent of the spe-
    cific type of the values being manipulated. However, in a strongly
    typed language such as Ada, all types must be defined at compile

                                  2

 

    time. Generic definitions allow the user to define a general al-
    gorithm or set of related operations, and then create a specific
    instance of that algorithm or set of operations for each type to
    which the algorithm or operations must apply.

 o  Exception Handling - In many operations, especially embedded com-
    puter systems, it is critical that a system be able to recover quickly
    and efficiently from error conditions. Ada provides the ability to
    raise and handle exceptions. It includes predefined exceptions and
    also permits the user to define exceptions. When an exception oc-
    curs in an Ada program, normal processing is abandoned and control
    passes to the exception handler.

 VAX Ada Components and Special System-Related Features:

 o  An Ada compiler fully conforming to ANSI/MIL-STD-1815A-1983 ("Ref-
    erence Manual for the Ada Programming Language") and validated by
    the Ada Joint Program Office.

 o  An Ada program library manager that provides support for program-
    ming teams through:

    -  Program libraries that can be shared by many programmers

    -  Program sublibraries that can be used to isolate, develop, and
       test Ada units in the context of parent program libraries

    -  Automatic recompilation of obsolete compilation units

    -  The ability to share compiled Ada code either by reference or
       copy

 o  High-level, fully symbolic debugging capability through the VMS de-
    bugger, including support for:

    -  Mixed Ada and non-Ada code

    -  Packages

    -  Tasking programs

                                  3

 

 o  Integration with VMS Operating System including:

    -  Conformance to the VAX Calling Standard, which allows Ada code
       to call and be called by code written in other languages, as well
       as to call VMS system services and the VMS run-time library

    -  The ability to call VAX Record Management Services (RMS) rou-
       tines directly

    -  Full access to relative and indexed file capabilities

    -  The ability to handle exceptions from non-Ada code and gener-
       ate exceptions to be handled by non-Ada code

    -  The ability to handle VMS asynchronous system traps (ASTs)

    -  The ability to link with shared images and use shared global sec-
       tions

    -  The ability to share data with non-Ada code through global vari-
       ables and psects (common blocks)

 o  System-dependent facilities - Different systems vary in such char-
    acteristics as the size of storage units, memory size, and the small-
    est and largest integer values supported. Ada provides the prede-
    fined package SYSTEM to define system-related constants and to rep-
    resent system-dependent information.

 o  Ada also provides representation clauses, which allow the user to
    tailor the representation of data to suit a particular system.

 o  VAX Ada provides:

    -  Length clauses, which specify the amount of storage associated
       with a type.

    -  Enumeration representation clauses, which specify the internal
       codes for the literals of enumeration types.

    -  Record representation clauses, which specify the layout of a record
       type, such as the order, position, and size of record components.

    -  Address clauses, which specify required addresses in storage for
       particular entities (in VAX Ada, only for constants and vari-
       ables).

                                  4

 

 o  VAX Ada provides a number of pragmas (compiler directives) that al-
    low various system-related parameters to be set and changed, con-
    trol mixed-language programming.

 o  Comprehensive diagnostic messages, including automatic syntax er-
    ror correction, directed at helping the new Ada user.

 HARDWARE REQUIREMENTS

 Processor and/or hardware configuration as specified in the System Sup-
 port Addendum (SSA 26.60.11-x).

 SOFTWARE REQUIREMENTS

 For Systems Using Terminals: (No DECwindows interface)

 o  VMS Operating System

 For Workstations Running VWS:

 o  VMS Operating System

 o  VMS Workstation Software

 For Workstations Running DECwindows:

 o  VMS Operating System (and necessary components of VMS DECwindows)

 VAX Ada supports a DECwindows compiler interface for compile quali-
 fier selection on workstations. This interface is accessible from File-
 View.

 DECthreads is a multithreading run-time library included with the VMS
 Operating System V5.5. The use of DECthreads in Ada applications is
 not supported. Ada code cannot call DECthreads routines nor can non-
 Ada code that calls DECthreads routines be utilized.

 Refer to the System Support Addendum (SSA 26.60.11-x) for availabil-
 ity and required versions of prerequisite/optional software and for
 information regarding components of VMS DECwindows.

                                  5

 

 ORDERING INFORMATION

 Software Licenses: QL-056A*-**
 Software Media: QA-056A*-**
 Software Documentation: QA-056AA-GZ
 Software Product Services: QT-056A*-**

 *  Denotes variant fields. For additional information on available li-
    censes, services and media, refer to the appropriate price book.

 SOFTWARE LICENSING

 This software is furnished under the licensing provisions of Digital
 Equipment Corporation's Standard Terms and Conditions. For more in-
 formation about Digital's licensing terms and policies, contact your
 local Digital office.

 License Management Facility Support

 This layered product supports the VMS License Management Facility.

 License units for this product are allocated on an Unlimited System
 Use plus Personal Use basis.

 Each Personal Use license allows one identified individual to use the
 layered product.

 For more information on the License Management Facility, refer to the
 VMS Operating System Product Description (SPD 25.01.xx) or the VMS Op-
 erating System documentation set.

 SOFTWARE PRODUCT SERVICES

 A variety of service options are available. For more information con-
 tact your local Digital office.





                                  6

 

 SOFTWARE WARRANTY

 Warranty for this software product is provided by Digital with the pur-
 chase of a license for the product as defined in the Software Warranty
 Addendum of this SPD.

 

 [TM]The DIGITAL Logo, VMS, DECwindows, VAX, MicroVAX, VAXstation,
    VAXserver, VAXft and VAXset are trademarks of Digital Equipment
    Corporation.





























                                  7
