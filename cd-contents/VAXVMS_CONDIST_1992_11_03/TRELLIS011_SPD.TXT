 

 Software
 Product
 Description

 ___________________________________________________________________

 PRODUCT NAME:  DEC Trellis Object System for VMS, Version 1.1   SPD
 32.40.01

 DESCRIPTION

 DEC Trellis Object System is a comprehensive object-oriented appli-
 cation development system. It includes a strongly-typed object-oriented
 language, an interactive tool kit, SQL database support, persistent
 workspaces, and type library. The tool kit provides users with the abil-
 ity to browse, edit, debug, and compile their programs. All the tools
 and the incremental compiler support the object-oriented style of pro-
 gramming.

 Features

 DEC Trellis Object System provides the application developer the fol-
 lowing features and capabilities:

 Language

 DEC Trellis language is an object-oriented language incorporating a
 type hierarchy with multiple inheritance and compile-time type check-
 ing. These features facilitate the design, implementation, and evo-
 lution of large, complex computer programs. The notion of types and
 a type hierarchy allows the program design to be documented and con-
 veyed to future maintainers. The compile-time type checking ensures
 the correct usage of objects and helps eliminate many common program-
 ming errors. A number of other features significantly enhance the ex-
 pressiveness of the language, including: parameterized types, iter-
 ators, and exception handling.



                               DIGITAL                     June 1992

                                                         AE-PE3PB-TE

 

 DEC Trellis language can be integrated with other object-oriented lan-
 guages and conventional languages. Operations in DEC Trellis can in-
 voke procedures written in other languages and procedures from other
 languages can invoke DEC Trellis operations. The DEC Trellis type li-
 brary provides support for passing data among programs written in lan-
 guages that support the VMS Calling Standard.

 Programming Environment

 DEC Trellis programming environment consists of a set of integrated
 tools designed to assist the programmer with the different tasks in-
 volved in developing application programs. The tools have a consis-
 tent DECwindows user interface and share a common programming envi-
 ronment database. The selection mechanism provided by the user inter-
 face enables the tools to share information.

 DEC Trellis provides the following tools:

 Browsing Tools

 Category, Type Module, and Definition List Tools -Allow users to browse
 through the programming environment database.

 Hierarchy Tool-Used to browse inheritance relationships between types.

 Development Tools

 Editor Tool-Works in conjunction with the List tools to allow users
 to browse the source code associated with type modules and definitions.
 The editor is also the focal point for modifiying the environment database
 (i.e., the interface to the incremental compiler).

 Cross Reference Tool-Displays usage relationships between types.

 Grass Catcher and Error Tools -Help manage the compilation task by keep-
 ing track of inconsistent definitions and displaying errors.

 Evaluator Tools-Allow users to evaluate DEC Trellis expressions and
 to inspect and respond to the results.

 Debugging Tools

                                  2

 

 Breakpoint Tool - Used to set breakpoints at entry and exit points of
 operations.

 Activity Viewer - Used to inspect the state of the call stack for a
 particular activity.

 Inspectors Tool-Used for looking at the internal state of objects.

 Environment Tools

 Storage Tool - Displays information about how memory is being used,
 and lets users do garbage collections.




























                                  3

 

 Persistence

 DEC Trellis provides persistent objects and interfaces to external data
 stored in the RMS file system or in a Rdb/VMS database. Persistent ob-
 jects are provided through DEC Trellis workspaces. Workspaces provide
 a one-level storage model with storage management.

 Application Generation

 DEC Trellis provides facilities that help the programmer determine the
 set of types required for a particular application. After developing
 an application using the DEC Trellis environment, a programmer can use
 the Trellis CLOSURE facility to extract the Trellis code needed to run
 the application. The CLOSURE facility will determine the set of types
 that an application uses. The programmer can also create run-time only
 versions of an application that significantly reduce the size of the
 workspace. These "execute only" applications can be run on any VMS sys-
 tems that may or may not be licensed to support DEC Trellis. The "ex-
 ecute only" applications can be copied to any valid VMS system free
 of charge. The following restrictions apply:

 o  Applications cannot include subtypes of the type Trellis_Tool.

 o  Applications cannot perform compilations.

 Type Library

 DEC Trellis provides an extensive type library that serves as a build-
 ing block for application development. Primitive types such as inte-
 ger, strings, and booleans are supported as well as a set of collec-
 tion types such as sets, sequences, and queues. There are interfaces
 to the file system, an interface to the multiple activity system, and
 other I/O capabilities. In addition, DEC Trellis includes a window sys-
 tem and a DECwindows type library.

 SQL Interface

 The SQL interface enables DEC Trellis programmers to access Rdb/VMS.
 The interface supports both SQL and dynamic SQL. Programmers can use
 either depending on their application needs.

                                  4

 

 SOURCE CODE INFORMATION

 DEC Trellis source code has been provided in the Type Library. This
 source code is covered by the product warranty unless modified or ex-
 tended through subtyping. Changes to the source code automatically in-
 validate all express or implied warranty on such code.

 HARDWARE REQUIREMENTS

 Processor and/or hardware configurations as specified in the System
 Support Addendum (SSA 32.40.01-x).

 SOFTWARE REQUIREMENTS

 o  VMS Operating System

 o  VMS DECwindows Motif

 *  Refer to the System Support Addendum (SSA 32.40.01-x) for avail-
    ability and versions of required/optional software.

 ORDERING INFORMATION

 Software Licenses: QL-YLVA*-**
 Software Media: QA-YLVA*-**
 Software Documentation: QA-YLVA*-GZ
 Software Product Services: QT-YLVA*-**

 *  Denotes variant fields. For additional information on available li-
    censes, services, and media, refer to the appropriate price book.

 SOFTWARE LICENSING

 This software is furnished under the licensing provisions of Digital
 Equipment Corporation's Standard Terms and Conditions. For more in-
 formation about Digital's licensing terms and policies, contact your
 local Digital office.



                                  5

 

 License Management Facility Support

 This layered product supports the VMS License Management Facility.

 License units for this product are allocated on a Concurrent Use ba-
 sis. Each Concurrent Use license allows any one individual at a time
 to use the layered product.

 For more information on the License Management Facility, refer to the
 VMS Operating System Software Product Description (SPD 25.01.xx) or
 the License Management Facility manual of the VMS Operating System doc-
 umentation set.

 SOFTWARE PRODUCT SERVICES

 A variety of service options are available from Digital. For more in-
 formation, contact your local Digital office.

 SOFTWARE WARRANTY

 Warranty for this software product is provided by Digital with the pur-
 chase of a license for the product as defined in the Software Warranty
 Addendum of this SPD.

 

 [R]   Motif is a registered trademark of Open Software Foundation,
     Inc.

 [TM] The DIGITAL Logo, DECwindows, DEC, CI, VAXft, Rdb/VMS, Trel-
     lis, TK, VAXcluster, VAX, MicroVAX, VAXstation, VAXserver and
     VMS are trademarks of Digital Equipment Corporation.








                                  6
