 






           Software
           Product
           Description

           ___________________________________________________________________

           PRODUCT NAME:  VAXELN Toolkit, Version 4.3             SPD 28.02.13

           DESCRIPTION

           The VAXELN Toolkit is a VMS layered product used for the development
           of dedicated realtime VAXELN systems that run on VAX and MicroVAX pro-
           cessors. The development tools run on any host VAX computer under VMS
           or MicroVMS Operating Systems. A finished VAXELN system runs directly
           on a supported runtime target VAX or MicroVAX processor without the
           presence of another operating system.

           VAXELN is especially suited to, although not limited to, creating re-
           altime applications; that is, applications in which the system's re-
           sponse (both speed and predictability) to external events is criti-
           cal.

           The VAXELN software simplifies the design and implementation of such
           applications by offering high-level language support, a runtime ker-
           nel executive, and various service programs. The high-level language
           support includes a Pascal compiler and runtime libraries (RTL) for VAX C
           and VAX FORTRAN. Support for VAX Ada is available under a separate li-
           cense. The kernel manages resources, processes, and shared data. The
           runtime service programs available are for a VMS compatible file sys-
           tem, network communication facilities, and device drivers.

           VAXELN supports multi-tasking; execution of a program made up of sev-
           eral concurrently executing parts. In addition, multiprogramming is
           supported; entire programs, including multi-tasking programs can be
           scheduled concurrently on the same CPU.

           VAXELN provides support for tightly coupled symmetric multi-processing
           on the VAX 6000 Model Series 200, 300, 400, 500, and VAX 8800 config-
           urations. Each processor executes a single copy of the system image
           and jobs can run on any of the processors in the configuration. POSIX

                                         DIGITAL                 December 1991

                                                                   AE-AU40N-TE

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           application programming is not supported in tightly coupled symmet-
           ric multi-processing configurations.

           POSIX is a portable operating systems interface for computer environ-
           ments. It encompasses a set of IEEE (1003) operating system standards.
           These standards are divided into several categories.

           POSIX 1003.1-1988 defines a set of calls that deal with general op-
           erating system fundamentals (I/O, process control, and so forth). The
           following functions from 1003.1-1988 (application program interface)
           are supported in a compliant fashion:

              alarm()
              cfgetispeed()
              cfgetospeed()
              cfsetispeed()
              cfsetospeed()
              ctime()
              dup()
              dup2()
              _exit()
              fileno()
              fork()
              getegid()
              getenv()
              geteuid()
              getgid()
              getgrgid()
              getgrnam()
              getpgrp()
              getpid()
              getppid()
              getpwnam()
              getpwuid()
              getuid()
              gmtime()
              isatty()
              kill()
              localtime()


                                            2

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


              mktime()
              pause()
              setgid()
              setsid()
              setuid()
              sigaction()
              sigaddset()
              sigdelset()
              sigemptyset()
              sigfillset()
              sigismember()
              sigpending()
              sigprocmask()
              sigsuspend()
              sleep()
              sysconf()
              tcdrain()
              tcflow()
              tcflush()
              tcgetattr()
              tcsendbreak()
              tcsetattr()
              time()
              uname()
              wait()
              waitpid()

           The following functions from 1003.1-1988 (application program inter-
           face) are supported in a non-compliant fashion:

              close()
              closedir()
              creat()
              exec()
              lseek()
              open()
              opendir()
              read()



                                            3

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


              readdir()
              rewinddir()
              times()
              tzset()
              write()

           POSIX P1003.4 Draft 10 defines system calls for realtime applications.
           It exists because the system calls in POSIX 1003.1-1988 are inadequate
           for most realtime applications (lack of functionality, speed, and so
           forth). The following functions from P1003.4 Draft 10 (realtime ex-
           tensions) are supported in a compliant fashion:

              clock_getres()
              clock_gettime()
              clock_gettimedrift()
              clock_settime()
              clock_settimedrift()
              mlock()
              mlockall()
              mprotect()
              munlock()
              munlockall()
              munmap()
              nanosleep()
              nanosleep_getres()
              sched_getscheduler()
              sched_get_priority_max()
              sched_get_priority_min()
              sched_get_rr_interval()
              sched_get_sched_param()
              sched_setscheduler()
              sched_set_sched_param()
              sched_yield()
              sem_close()
              sem_ifpost()
              sem_ifwait()
              sem_mksem()
              sem_open()



                                            4

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


              sem_post()
              sem_unlink()
              sem_wait()
              shm_delete()
              sigpoll()
              sigsend()
              timer_create()
              timer_delete()
              timer_getres()
              timer_gettime()
              timer_settime()
              mmap()
              shm_open()

           The following function from P1003.4 Draft 10 (realtime extensions) is
           supported in a non-compliant fashion:

              timer_getoverrun()

           Since the POSIX P1003.4 Draft 10 functions in VAXELN, Version 4.3 are
           based on a draft standard as opposed to a final standard, some func-
           tions may be neither source-code nor binary-code compatible in sub-
           sequent VAXELN releases.

           VAXELN DECwindows is based on Massachusetts Institute of Technology's
           ( M.I.T.) specification for the X Window System, Version 11, Release
           3. X Window System standards supported as part of DECwindows include
           the X11 network protocol, a base set of workstation fonts, the C lan-
           guage binding for the Xlib programming library, and the C language bind-
           ing for the Xtoolkit library. Support of the X11 network protocol in
           the client, library, and display server components provides VAXELN with
           the capability to interoperate with other X11-compliant systems in a
           distributed fashion. VAXELN supports the full client-server distri-
           bution inherent in the X Window System with VAXELN provided transports
           - local shared memory, DECnet or TCP/IP. Provided are the DECwindows
           server image, the DECwindows runtime libraries and the user environ-
           ment component DECwindows software, all of which can be built into VAX-
           ELN systems. Motif[TM] V1.0 client is supported.



                                            5

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           VAXELN Systems

           VAXELN systems can run on standalone VAX, rtVAX, MicroVAX or VAXsta-
           tion computers, or (with networking software provided in the Toolkit)
           they can be connected in an Ethernet local area network (LAN). The lat-
           ter may include any other nodes (including VMS, VAXELN, and ULTRIX)
           using the Digital Network Architecture DECnet services and protocols,
           or other nodes using the ARPANET services and protocols.

           VAXELN systems, including device drivers, can be developed entirely
           in a high-level language. The sources for several Digital implemented
           device drivers are also included. These can be used as a guide to im-
           plementing additional drivers.

           A VAXELN system can be booted from a hard disk, tape, diskette, or,
           if the VMS host system has the optional DECnet-VAX license and Eth-
           ernet hardware, by downline loading the system into the target com-
           puter. A VAXELN system can also be downline loaded from another VAX-
           ELN system or an ULTRIX system with Ethernet hardware. VAXELN system
           images are also suitable for placement in erasable programmable read-
           only memories (EPROMs). However, the EPROM hardware and software are
           not part of the Toolkit and must be acquired separately.

           Toolkit Components

           o  VAXELN Pascal Compiler

           o  VAXELN Symbolic Debugger

           o  VAXELN System Builder

           o  VAXELN Kernels for Supported Target VAX CPUs

           o  VAXELN Pascal Runtime Library

           o  VAXELN C Runtime Library

           o  VAXELN FORTRAN Runtime Library

           o  VAXELN Device Drivers for Supported Devices

           o  VAXELN File Service

           o  VAXELN Network Service

                                            6

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           o  VAXELN Authorization Service

           o  VAXELN Performance Analyzer

           o  VAXELN Resource Monitor and Display

           o  VAXELN Command Language

           o  VAXELN Error Logging Utilities

           o  VAXELN Local Area Terminal (LAT) Service

           o  VAXELN DECwindows Server

           o  VAXELN DECwindows User Environment
              Components

           o  VAXELN User Documentation

           o  VAXELN TCP/IP Networking

           o  VAXELN INTERNET TELNET Server

           o  VAXELN DECnet Set Host

           A VAXELN application image executes in its own runtime environment.
           Programs written to take advantage of VMS or ULTRIX system-specific
           features (i.e., logical names, QIO, RMS) need to be modified to be ported
           to the VAXELN Runtime environment.

           The VAXELN Pascal language is based upon the ANSI/IEEE770X3.97-1983,
           American National Standard Pascal Computer Programming Language. It
           is supported by an optimizing compiler that generates position-independent,
           native-mode code. The Pascal language was extended to allow its use
           for VAXELN system programming and eliminate the need to use assembly
           language for VAXELN system programming.

           The VAXELN C Runtime Library implements the standard features of the
           C language plus VAXELN-specific capabilities designed to assist the
           C program developer in taking full advantage of VAXELN. Routines se-
           lected for inclusion in this library are primarily routines for which
           an efficient emulation of standard UNIX[R] C is possible under VAXELN.
           VAXELN C uses the standard VMS C compiler.

                                            7

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           The VAXELN FORTRAN Runtime Library supports an extensive subset of the
           features of the standard VAX FORTRAN language. This library supports
           I/O to sequential devices and sequential and direct access to sequen-
           tial files on mass storage media. The routines in this library also
           allow the FORTRAN programmer to access kernel services for develop-
           ing realtime, multiprogramming applications. Since FORTRAN does not
           generate re-entrant code, care must be exercised to avoid multiple con-
           current threads executing through subroutines and/or functions. That
           is, VAX FORTRAN subroutines and/or functions are serially reusable,
           but not re-entrant.

           User code is linked to VAXELN Runtime Libraries using the standard VMS
           linker. The runtime libraries are provided in both object-library and
           shareable-image form.

           The VAXELN System Builder combines program images, the VAXELN kernel
           image, and runtime routines to produce the finished VAXELN system. The
           program loader permits dynamic loading of individual program images.

           The VAXELN Debugger can be used to debug a VAXELN system locally us-
           ing the target system's console terminal. If the user's host system
           has the optional DECnet-VAX license, it can be used remotely to de-
           bug VAXELN systems running on the same DECnet Ethernet network.

           The VAXELN Kernel manages the system's processes and data, providing
           the controlled sharing of the system's resources. VAXELN systems are
           memory resident utilizing VAX virtual memory hardware. The VAX page
           fault mechanism is used only for dynamic extension of the user stack.
           A VAXELN system is limited in size by the amount of physical memory
           present on the target system, up to 256 MBytes.

           The VAXELN File Service is a set of services to enable using disk or
           tape files for program I/O. The File Service consists of a Disk File
           Service and a separate Tape File Service. The Disk File Service uses
           the same Files-11 on-disk structure, ODS-2, as does VMS and the same
           internal data format as the VAX Record Management Services (RMS). Con-
           sequently, disk volumes can be read or written from one environment
           to another. File Service files are sequentially organized but can be
           accessed either sequentially or randomly. The indexed and relative file


                                            8

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           organizations are not supported by VAXELN. VAXELN systems and VMS sys-
           tems running on nodes in the same network can access files on each other's
           disk volumes. The Tape File Service is based on Version 3 of the ANSI
           standard for magnetic tapes. It is compatible with the VMS, Version
           4.0 tape file system, providing users with a convenient means of trans-
           porting files to and from VMS systems.

           The VAXELN Network Service is responsible for providing transparent
           network message transmissions between CSMA/CD LAN (Ethernet/IEEE802.3)
           nodes. The Network Service uses the Phase IV DECnet Routing Protocol,
           Version 2.0, to route system-level datagrams between VAXELN nodes and
           other DECnet nodes. (Only end-node functionality is provided). The VAX-
           ELN system can communicate over the CSMA/CD LAN with any DECnet node
           on the same LAN. If there is a full routing system on the LAN, VAX-
           ELN can communicate with any other DECnet node in the entire network.
           The VAXELN CSMA/CD LAN driver will support multiple controllers of the
           same type simultaneously. At any given time, DECnet can run on only
           one controller. Other CSMA/CD LAN protocols can be implemented on the
           other controllers. VAXELN supports the dynamic enabling and disabling
           of DECnet. In the event of hardware failure, this feature can be used
           to dynamically disable DECnet on one controller, followed by enabling
           DECnet on another controller. Downline loading over the CSMA/CD LAN
           of a VAXELN system image, from a VAXELN load host to a VAXELN target,
           is supported.

           The Phase IV DECnet Network Services Protocol (NSP), Version 4.0 and
           the Session Control Protocol, Version 1.0 are used to provide trans-
           parent application-level circuits with remote nodes. The Network Ser-
           vice's NSP module then uses the Routing Protocol to deliver messages
           to remote systems.

           VAXELN DECnet nodes can be managed from VMS with the DECnet-VAX Net-
           work Control Program (NCP). The Network Service supports the Phase IV
           Network Management Protocol, Version 4.0 Subset.

           VAXELN supports industry standard networking through a set of ARPANET
           protocols. The supported protocols include:

           o  Transmission Control Protocol (TCP)


                                            9

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           o  INTERNET Protocol (IP)

           o  INTERNET Control Message Protocol (ICMP)

           o  Address Resolution Protocol (ARP)

           o  Reverse Address Resolution Protocol (RARP)

           o  User Datagram Protocol (UDP) and Boot Protocol (BOOTP)

           o  TELNET server

           o  FTP (File Transport Protocol) client

           FTP is based on the 4.3 Berkeley Software Distribution (BSD). TELNET
           server support permits access to VAXELN systems from remote systems,
           allowing the user to type commands as if the user were logged into the
           VAXELN system locally. These protocols are supported over a CSMA/CD
           LAN (Ethernet) and it interoperates with ULTRIX, VMS/ULTRIX Connec-
           tion and UNIX. Applications and may be written using the Berkeley Socket
           Programming interface.

           The optional VAXELN Authorization Service maintains a database of all
           the users authorized to use a particular VAXELN system or network of
           systems and is compatible with standard, FILES-11 protection and se-
           curity features.

           In conjunction with the VMS Error Log Utility, user selectable error
           logging is supported. The error log file can be created locally on the
           target system or created remotely on a VMS node in the network. The
           error log file is analyzed on a VMS system using the VMS Error Report-
           ing Facility.

           VAXELN Command Language (ECL) provides commands to communicate with
           the VAXELN system. VAXELN ECL provides file manipulation, program ma-
           nipulation and limited system control functions on the VAXELN system.

           VAXELN Resource Monitor (EDisplay) dynamically displays information
           about the VAXELN system. This information includes pool and memory us-
           age, and currently active jobs and processes. Help feature function-
           ality is included.

                                            10

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           VAXELN Performance Analyzer (EPA) provides collection of information
           and analysis of the runtime behavior of the VAXELN system. The infor-
           mation is subsequently analyzed on a VMS host.

           Local area transport (LAT) host services allow VAXELN targets to com-
           municate with devices attached to terminal servers. These services in-
           clude terminal server communication, terminal I/O, and a control in-
           terface for application programs plus an interactive utility, which
           can be used to control and monitor a LAT environment.

           The VAXELN DECwindows Server provides a common means for DECwindows
           applications to interact with graphics workstations. The DECwindows
           server image runs as a job on the hardware where the display, keyboard
           and mouse are located in a VAXELN runtime system.

           The VAXELN DECwindows Client provides runtime routines and tools for
           the development of applications using capabilities of graphics work-
           stations.

           The VAXELN DECwindows User Environment Components provides Window Man-
           ager and terminal emulation support.

           VAXELN Kernel Objects and Operations

           Processes are the execution threads for VAXELN programs. The main thread
           of execution (master process) corresponds to the program main routine.

           Programs can also include special process blocks that are executed by
           dynamically created subprocesses. The family of a master process and
           all of its subprocesses is a job in VAXELN terminology. One copy of
           a program's code is shared by any number of jobs executing that pro-
           gram. Jobs and processes are scheduled on a pre-emptive priority ba-
           sis.

           Ports are first-in/first-out queues of messages that are exchanged be-
           tween processes in a VAXELN application. Port names are provided to
           ensure the transparency of message-port locations in the local area




                                            11

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           network. Circuits are bidirectional message paths between two spec-
           ified ports. Circuits guarantee delivery, blocking and proper sequenc-
           ing of network messages, and flow control (prevention of a slower re-
           ceiver process being overwhelmed by a faster sender).

           Where memory sharing between jobs is a necessity and the network dis-
           tribution of the jobs is not an issue, VAXELN provides the AREA ob-
           ject as a means of sharing data among jobs on a single VAXELN node.
           Events and semaphores are synchronization objects used by multiple pro-
           cesses within a job. Events and semaphores can also be associated with
           AREA objects and used as synchronization objects by multiple jobs, or
           by processes in different jobs. Devices are synchronization objects
           used to synchronize a device driver program with the completion of an
           interrupt service routine.

           SOURCE CODE

           Optional source materials for this software product can be obtained
           by signing Digital's Software Program Sources License Agreement and
           then purchasing the desired source option(s). The agreement entitles
           the user to use the source materials at one customer facility or lo-
           cation specified in the agreement. Target code including the kernel,
           device drivers, runtime libraries, and most modules which are not pro-
           prietary to Digital, is supplied in the source kit.

           Included in the source kit are the kernel and necessary device drivers
           for the rtVAX 300 processor. If the rtVAX 300 is to be embedded into
           a board with an I/O bus, or used in an application that will utilize
           DMA operations, customization of the VAXELN kernel to support the full
           environment may be required. Source components and documentation for
           kernel customization are included with the VAXELN source kit.

           Most users do not require source materials, which are used primarily
           to make modifications to the software product, but they are useful for
           studying how the code works. Source kits provided by Digital do not
           contain all source files used by Digital to build binary kits.





                                            12

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           HARDWARE REQUIREMENTS

           Processors and/or hardware configurations as specified in the System
           Support Addendum (SSA 28.02.13-x).

           SOFTWARE REQUIREMENTS

           For Host Development System

           o  VMS Operating System

              or

           o  MicroVMS Operating System

           Refer to the System Support Addendum (SSA 28.02.13-x) for availabil-
           ity and required versions of prerequisite/optional software.

           ORDERING INFORMATION

           For VAXELN Toolkit

           Software Licenses: QL-375A*-**
           Personal Use License: QL-375AA-2B
           Software Media: QA-375**-*
           Software Documentation: QA-375AA-GZ
           Source Kit: QB-375AA-**
           Software Product Services: QT-375A*-**

           VAXELN and VAX C Packaged License:
              QP-MH4A9-**
           VAXELN and VAX C Packaged Media:
              QA-MH4AA-H5/HM
           VAXELN and VAX C Packaged Personal Use License:
              QP-MH4AA-18

           For VAXELN Runtime System





                                            13

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           Software Licenses: QL-376A*-**

           *  Denotes variant fields. For additional information on available li-
              censes, services, and media, refer to the appropriate price book.

           SOFTWARE LICENSING

           The Single-Use License is required for each CPU that will be using the
           VAXELN Toolkit to support development of VAXELN systems.

           If the VAXELN system is developed and used on the same CPU that is a
           valid VAXELN target system, then a separate Single-Use VAXELN Target
           System License is not needed. However, if the application (VAXELN Sys-
           tem) is developed on one CPU and then loaded onto one or more addi-
           tional CPUs, a Single-Use VAXELN Target System License is needed for
           each additional target system CPU.

           Single-Use License Option For Host Development Systems (QL-375A*-A*):

           This Single-Use License is the right to use the VAXELN Toolkit on a
           single CPU.

           For VAXELN Target Systems (QL-376A*-FA):

           Single-Use License Option

           If the VAXELN Toolkit is installed on a host CPU fully licensed for
           that product and the user wishes to use the VAXELN Runtime System por-
           tion of it on an additional CPU, a Single-Use VAXELN Target License
           can be purchased. This license provides the right to use only the VAX-
           ELN Runtime System on that target system and does not include a soft-
           ware warranty.

           Source License and Sources Distribution Option

           This option supplies the machine-readable source code for this soft-
           ware product. It gives the user the right to use the source code on
           any CPU at the facility/location specified in the agreement which has
           a Single-Use License for the object code.


                                            14

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13


           The Source Kit does not contain all sources needed to build the prod-
           uct.

           Specifically excluded are sources of a proprietary nature (e.g., T/MSCP)
           and sources for any of the compilers.

           This software is furnished under the licensing provisions of Digital
           Equipment Corporation's Standard Terms and Conditions. For more in-
           formation about Digital's licensing terms and policies, contact your
           local Digital office.

           License Management Facility Support

           This layered product supports the VMS License Management Facility.

           License units for this product are allocated on an Unlimited System
           Use basis.

           For more information on the License Management Facility, refer to the
           VMS Operating System Software Product Description (SPD 25.01.xx) or
           the License Management Facility manual of the VMS Operating System doc-
           umentation set.

           For more information about Digital's licensing terms and policies, con-
           tact your local Digital office.

           SOFTWARE PRODUCT SERVICES

           A variety of service options are available. For more information, please
           contact your local Digital office.

           SOFTWARE WARRANTY

           Warranty for this software product is provided by Digital with the pur-
           chase of a license for the product as defined in the Software Warranty
           Addendum of this SPD.





                                            15

 



           VAXELN Toolkit, Version 4.3                           SPD 28.02.13



           [R] UNIX is a registered trademark of American Telephone and Tele-
               graph Company.

           [TM] Motif is a trademark of Open Software Foundation, Inc.

           [TM] The DIGITAL Logo, DEC, DECnet, DECwindows, DEUNA, DELUA, DMB32,
                DRB32, INTERNET, IVAX, LPV11, MicroVAX, Q-bus, RA, RQDX1,
                RQQDX2, RQDX3, rtVAX, RX, TK, TQK50, TK50, TU, ULTRIX, UNIBUS,
                VAX, VAX Ada, VAXBI, VAX C, VAXELN, VAXstation, VAXserver,
                VAXcluster, VMS, and XMI are trademarks of Digital Equipment
                Corporation.




























                                            16
