PRODUCT NAME:  VAX COBOL GENERATOR, Version 1.3       SPD 27.16.04

DESCRIPTION

The VAX COBOL GENERATOR is a screen-oriented program generator that produces
VAX COBOL source programs.  Commercial programmers use the VAX COBOL
GENERATOR as a productivity tool for the creation and maintenance of data
processing applications.  The programmer can create or modify a program by
choosing icons that represent the components making up the program (menus,
screens, etc.). From this input, the VAX COBOL GENERATOR produces a VAX COBOL
source program that can be used like any other source program.  Also, the VAX
COBOL GENERATOR can be used for rapid prototyping to produce a program that
can later be expanded and refined to become a production application.  Thus,
programmers can produce and maintain VAX COBOL programs in much less time
than by traditional hand coding. 

The VAX COBOL GENERATOR runs under the VMS Operating System. The VAX COBOL
GENERATOR can produce programs that call subprograms written in other VMS
languages, as well as many Run-Time Library routines and system services. 
Similarly, programs produced by the VAX COBOL GENERATOR can be called by
other VMS products adhering to the VAX Calling Standard.  The default screen
interactions utilize the VAX COBOL extensions to the ACCEPT and DISPLAY
statements.  However, the VAX COBOL GENERATOR can produce screen applications
that use other screen packages, such as VAX FMS (Forms Management System).
These VAX COBOL source programs can be debugged by the VAX Symbolic Debugger.

To define an application in the VAX COBOL GENERATOR environment, the
programmer selects and places icons (representing various parts of the
application) in the screen work area for expansion.  Data and procedural flow
are specified by connecting these parts together.  The VAX COBOL source code
generated is then compiled by the VAX COBOL language processor and linked by
the VAX Linker. These applications can then be executed on any valid VMS
Operating System. 

Features 

The VAX COBOL GENERATOR lets the application be defined in a ``top-down''
manner.  The programmer defines and manipulates the high-level design of the
program parts (nodes) and relationship of those parts (connections) and
supplies more detailed information by using interactive forms and editors. 

There are icons for each of the following data type nodes that represent the
data used in the application: 

^  File - Defines a file (any RMS file or Rdb database accessible from VAX
   COBOL) to be accessed in the application

^  Form - Defines the layout of a form to be used in the application

^  Report - Defines the layout of a report to be generated by the application

^  Local storage - Defines data used in the application, but not stored in a
   file

There are icons for each of the following procedural type nodes that
represent the specific functional tasks performed in the application: 

^  Menu - Creates a menu in the application

^  Procedure - Defines a procedure to be executed in the application that can
   be either predefined (for example, SORT) or customized VAX COBOL source 
   code produced by the application designer using an editor

^  Data movement - Defines the movement of data from one data node to another 
   (for example, accepting data from a form into a file)

A group node (icon) is a structural node that represents a complex function
at a high level as a single node.  Later, in the application design, the node
is expanded to include the specific data type and procedural type nodes for
that particular complex function. 

The VAX COBOL GENERATOR provides a data dictionary which allows the
programmer to store common data definitions.  This provides a single point of
control so that data elements used in a single, or multiple, applications
need only be changed once.  The applications can then be regenerated to
incorporate the changes.  Optionally, VAX CDD record definitions can be used.

Libraries are another single point of control for changes.  Form, file, local
storage, report, and procedure node definitions (with the exception of SORT
and MERGE procedures), as well as a data dictionary can be stored in a
library and referenced from multiple programs. 

In a DECwindows environment, VAX COBOL GENERATOR can be executed under the
DECwindows Terminal Emulator. 
  
HARDWARE REQUIREMENTS

VAX, MicroVAX or VAXstation configuration as specified in the System Support 
Addendum (SSA 27.16.04-x).

Note: Use of a VAXstation is highly recommended for maximum performance and 
      productivity.

SOFTWARE REQUIREMENTS

For systems using terminals: (No DECwindows interface)

VMS Operating System 

For Workstations running VMS Workstation Software:

VMS Operating System 

VMS Workstation Software

For Workstations running DECwindows:

VMS Operating System (and the necessary components of VMS DECwindows)

VAX COBOL

Note:  VAX COBOL must be on the system used to compile the generated code.

Refer to the System Support Addendum (SSA 27.16.04-x) for availability and
required versions of prerequisite/optional software. 

ORDERING INFORMATION 

Software Licenses: QL-365A*-**
Software Media: QA-365A*-**
Software Documentation: QA-365AA-GZ
Software Product Services: QT-365A*-**

* Denotes variant fields.  For additional information on available licenses, 
  services and media refer to the appropriate price book. 

SOFTWARE LICENSING

This software is furnished under the licensing provisions of DIGITAL's
Standard Terms and Conditions. For more information about DIGITAL's licensing
terms and policies, contact your local DIGITAL office. 

LICENSE MANAGEMENT FACILITY SUPPORT

This layered product supports the VMS License Management Facility License
units for this product are allocated on a CPU-capacity basis. For more
information on the License Management Facility, refer to the VMS Operating
System Software Product Description (SPD 25.01.xx) or the VMS Operating
System documentation set. 

SOFTWARE PRODUCT SERVICES

A variety of service options are available from DIGITAL.  For more
information contact your local DIGITAL office. 

SOFTWARE WARRANTY
 
Warranty for this software product is provided by DIGITAL with the purchase
of a license for the product as defined in the Software Warranty Addendum of
this SPD. 


February 1989
AE-HK89E-TE
